// Includes
#include "AMG_Texture.h"
#include "AMG_User.h"
#include <pspgu.h>
#include <pspgum.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <pspdisplay.h>
#include <pspjpeg.h>
#include "AMG_Multimedia.h"
#include "AMG_3D.h"
#include "AMG_Model.h"
#include <malloc.h>
#include <png.h>

//#include "shadows.h"	//Shadows redondas
extern int skip;
// OSLIB o LODEPNG

#include <oslib/oslib.h>


AMG_Texture *AMG_Font1;
AMG_Texture *AMG_Font2;
float AMG_MAP_Anim_Slot[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int AMG_MipMapping = 0;
float AMG_MipMapping_Bias = 0;
// Variables locales
char amgt2[256];
void *amg_shared_vram = NULL;
void *amg_svram_curtex = NULL;
u32 amg_svram_size = 0;
u32 __attribute__((aligned(16))) *AMG_CLUT;
// Calcula la siguiente potencia de 2
u32 nextPow2(u32 a){
	if(a < 8) return 8;
	else if(a > 8 && a < 16) return 16;
	else if(a > 16 && a < 32) return 32;
	else if(a > 32 && a < 64) return 64;
	else if(a > 64 && a < 128) return 128;
	else if(a > 128 && a < 256) return 256;
	else if(a > 256) return 512;
	return a;
}


void M3D_SetMipMapping(int set, float bias){
	AMG_MipMapping = set;
	AMG_MipMapping_Bias = bias;
}


// Activa una textura
void AMG_EnableTexture(AMG_Texture *tex){
	if(tex == NULL) {sceGuDisable(GU_TEXTURE_2D);return;}

	sceGuEnable(GU_TEXTURE_2D);
	
	if(tex->TexFormat == GU_PSM_T4){
		//sceGuCopyImage(GU_PSM_8888,0,0,16,1,16,tex->clut,0,0,16,(void*)AMG_CLUT);
		//memcpy(AMG_CLUT,tex->clut,4*16);
		sceGuClutMode(GU_PSM_8888,0,0x0f,0);
		sceGuClutLoad(16/8,tex->clut); // upload 16 rgba colours
	}
	if(tex->TexFormat == GU_PSM_T8){
		//sceGuCopyImage(GU_PSM_8888,0,0,256,1,256,tex->clut,0,0,256,(void*)AMG_CLUT);
		//memcpy(AMG_CLUT,tex->clut,4*16);
		sceGuClutMode(GU_PSM_8888,0,0xff,0);
		sceGuClutLoad(256/8,tex->clut); // upload 256 rgba colours
	}
	//Animate
	tex->NFrames = tex->Tile_count_x*tex->Tile_count_y;
	if (tex->NFrames > 1){
		float U0 = 0; float V0  = 0;
		u8 frame = 0;
		tex->Frame+=tex->Speed;
		if (tex->Anim[0] != 0){
			if ((u8)tex->Frame > (tex->Anim[0]-1)) tex->Frame = 0;
			frame = tex->Anim[(u8)tex->Frame + 1];
		} else {
			if ((u8)tex->Frame > (tex->NFrames-1)) tex->Frame = 0;
			frame = (u8)(tex->Frame);
		}
		float x_size = 1.0f/tex->Tile_count_x;
		float y_size = 1.0f/tex->Tile_count_y;
		int x_frame = frame%tex->Tile_count_x;
		int y_frame = frame/tex->Tile_count_x;
		U0 = (x_size*x_frame);
		V0 = (y_size*y_frame)+y_size;
		sceGuTexScale(x_size,y_size);
		sceGuTexOffset(U0,V0);
	} else {
		sceGuTexScale(1.0f, 1.0f);
		sceGuTexOffset(tex->U, tex->V);
	}
	
	
	sceGuTexFunc(tex->TFX, tex->TCC);
	sceGuTexEnvColor(tex->EnvColor);
	sceGuTexWrap(tex->WrapX, tex->WrapY);
	sceGuTexMapMode(tex->Mapping, tex->MappingLights[0], tex->MappingLights[1]);
	if((tex->Mapping == GU_ENVIRONMENT_MAP) && (tex->MappingLights[0] < 4) && (tex->MappingLights[1] < 4)){		// Si estamos hablando de un Environment Map..
		//Get inverse view Matrix
		ScePspFMatrix4 CamMat;
		ScePspFMatrix4 EnvMat;
		AMG_GetMatrix(GU_VIEW,&CamMat);
		//Env matrix is the inverse of cam matrix
		//now env map texture moves with camera!!!
		//gumFullInverse(&EnvMat,&CamMat);
		gumFastInverse(&EnvMat,&CamMat);
		// Activa la matriz
		sceGuDisable(GU_LIGHT0 + tex->MappingLights[0]);
		sceGuDisable(GU_LIGHT0 + tex->MappingLights[1]);
		sceGuLight(tex->MappingLights[0], GU_DIRECTIONAL, GU_DIFFUSE, (ScePspFVector3*)&EnvMat);
		sceGuLight(tex->MappingLights[1], GU_DIRECTIONAL, GU_DIFFUSE, (ScePspFVector3*)&EnvMat.y.x);
	}
	//Now... Set the fucking images
	if (tex->NMipmaps == 0){
		sceGuTexFilter(tex->Filter, tex->Filter);
		sceGuTexMode(tex->TexFormat,0, 0, tex->Swizzle);
		sceGuTexImage(0, tex->rw, tex->rh, tex->Width,tex->Data);
	} else {
		sceGuTexMode(tex->TexFormat,tex->NMipmaps, 0, tex->Swizzle);
		sceGuTexFunc(GU_TFX_MODULATE, GU_TCC_RGBA);
		sceGuTexLevelMode(GU_TEXTURE_AUTO, AMG_MipMapping_Bias); 
		sceGuTexFilter(tex->MipFilter,tex->MipFilter);
		sceGuTexImage(0, tex->rw, tex->rh, tex->Width, tex->Data);
		sceGuTexImage(1, tex->M1_Width, tex->M1_Height, tex->M1_Width, tex->MipData);
		sceGuTexImage(2, tex->M2_Width, tex->M2_Height, tex->M2_Width, tex->MipData1);
	}
}

// Crea una textura vacía
AMG_Texture *AMG_CreateTexture(u16 width, u16 height, u32 psm, u8 load){
	// Comprueba si es NULL
	AMG_Texture *tex = (AMG_Texture*) calloc (1, sizeof(AMG_Texture));
	tex->clut = (u32*) calloc (256, sizeof(u32));
	// Inicializa la estructura
	tex->NFrames = 1; tex->Frame = 0;
	tex->Speed = 0;
	tex->Tile_count_x = 1;
	tex->Tile_count_y = 1;
	tex->Load = AMG_TEX_RAM;
	tex->Data = NULL;
	tex->Data1 = NULL;
	tex->MipData = NULL;
	tex->MipData1 = NULL;
	tex->Filter = GU_LINEAR; tex->MipFilter = GU_LINEAR_MIPMAP_LINEAR;
	tex->NMipmaps = 0; tex->Swizzle = 0;
	tex->M1_Width = 0;
	tex->M1_Height = 0;	
	tex->M2_Width = 0;
	tex->M2_Height = 0;
	tex->TFX = GU_TFX_MODULATE;
	tex->TCC = GU_TCC_RGBA;
	tex->EnvColor = 0xFFFFFFFF;
	tex->TexFormat = psm;
	tex->U = 0.0f; tex->V = 0.0f;
	tex->X = tex->Y = 0;
	tex->WrapX = GU_REPEAT; tex->WrapY = GU_REPEAT;
	tex->Mapping = GU_TEXTURE_COORDS;
	tex->MappingLights[0] = 2; tex->MappingLights[1] = 3;
	tex->EnvMapRot = 0.0f; tex->EnvMapX = 0.0f; tex->EnvMapY = 0.0f;
	tex->SprColor = 0xFFFFFFFF;
	tex->Rot = 0.0f; tex->ScaleX = 1.0f; tex->ScaleY = 1.0f;
	tex->Width = width; tex->Height = height;
	tex->RWidth = width;tex->RHeight = height;
	tex->rw = tex->Width; tex->rh = tex->Height;
	tex->Next_pow2 = width;
	tex->isVideo = 0;
	tex->DemoEffect_PlasmaFrame = 0;
	tex->Data = (u32*) calloc(AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat),1);
	tex->clut = (u32*) calloc(256, sizeof(u32));
	memset(tex->Data,0xFF,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	memset(tex->Anim,0,64);
	if(load == M3D_IN_VRAM){
		AMG_TransferTextureVram(tex);
		/*
		u32 size = AMG_GetVramSize(tex->Width, tex->Height, psm);
		u32 *vram_ptr = (u32*)oslVramMgrAllocBlock(size);
		if(vram_ptr){	// Si ha habido éxito pasamos la textura a VRAM
			memset(vram_ptr,0, size);
			tex->Data = vram_ptr;
			tex->Load = AMG_TEX_VRAM;
		}
		if (tex->TexFormat == GU_PSM_T8){
			u32 *vram_ptr3 = (u32*)oslVramMgrAllocBlock(256*4);
			if(vram_ptr3){	// Si ha habido éxito pasamos la paleta a VRAM
				memcpy(vram_ptr3, tex->clut, 256*4);
				free(tex->clut); tex->clut = NULL; tex->clut = vram_ptr3;
			}
		}
		if (tex->TexFormat == GU_PSM_T4){
			u32 *vram_ptr3 = (u32*)oslVramMgrAllocBlock(16*4);
			if(vram_ptr3){	// Si ha habido éxito pasamos la paleta a VRAM
				memcpy(vram_ptr3, tex->clut, 16*4);
				free(tex->clut); tex->clut = NULL; tex->clut = vram_ptr3;
			}
		}
		tex->Load = AMG_TEX_VRAM;
		//img = oslCreateImage(width,width,OSL_IN_VRAM,oslib_psm);*/
	}
	//Avoids garbage pixels on textures
	sceKernelDcacheWritebackInvalidateRange(tex->Data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	return tex;
}

M3D_Texture *M3D_TextureCreate(u16 width, u16 height, u32 psm, u8 load){
	AMG_Texture *t = AMG_CreateTexture(width,height,psm,load);
	return (M3D_Texture*)t;
}

AMG_Texture *AMG_CreateRenderTexture(u16 width, u16 height){
	//Create texture for render, height is always 272 for some reason
	if (width > 256 || height > 256) AMG_Error((char*)"Render Texture > 256",(char*)"AMG_CreateRenderTexture");
	AMG_Texture *tex = AMG_CreateTexture(width,height,GU_PSM_5650,M3D_IN_RAM);
	oslVramMgrAllocBlock(width*(height-AMG.ScreenHeight));
	return tex;
}

M3D_Texture *M3D_RenderTextureCreate(u16 width, u16 height){
	//Create texture for render, height is always 272 for some reason
	if (width > 256 || height > 256) AMG_Error((char*)"Render Texture > 256",(char*)"AMG_CreateRenderTexture");
	AMG_Texture *tex = AMG_CreateTexture(width,height,GU_PSM_5650,M3D_IN_VRAM);
	oslVramMgrAllocBlock(width*(height-AMG.ScreenHeight));
	return (M3D_Texture*)tex;
}

// Carga una textura en formato PNG, JPG o DXT
AMG_Texture *AMG_LoadTexture(const char *path, u8 load, u32 psm){
	int i;
	//do not use GU_PSM_DXT1 GU_PSM_DXT3 GU_PSM_DXT5
	// Crea la textura
	AMG_Texture *tex = (AMG_Texture*) calloc (1, sizeof(AMG_Texture));
	tex->clut = (u32*) calloc (256, sizeof(u32));
	// Inicializa la estructura
	tex->NFrames = 1; tex->Frame = 0;
	tex->Speed = 0;
	tex->Tile_count_x = 1;
	tex->Tile_count_y = 1;
	tex->Load = AMG_TEX_RAM;
	tex->TexFormat = GU_PSM_4444;
	tex->Data = NULL;
	tex->Data1 = NULL;
	tex->MipData = NULL;
	tex->MipData1 = NULL;
	tex->Filter = GU_LINEAR; tex->MipFilter = GU_LINEAR_MIPMAP_LINEAR;
	tex->NMipmaps = 0; tex->Swizzle = 0;
	tex->M1_Width = 0;
	tex->M1_Height = 0;	
	tex->M2_Width = 0;
	tex->M2_Height = 0;
	tex->TFX = GU_TFX_MODULATE;
	tex->TCC = GU_TCC_RGBA;
	tex->EnvColor = 0xFFFFFFFF;
	if (psm < 6) tex->TexFormat = psm;// 5650=0;5551=1;4444=2;8888=3;T4=4;T8=5
	else tex->TexFormat = GU_PSM_8888;
	tex->U = tex->V = 0.0f;
	tex->X = tex->Y = 0;
	tex->WrapX = GU_REPEAT; tex->WrapY = GU_REPEAT;
	tex->Mapping = GU_TEXTURE_COORDS;
	tex->MappingLights[0] = 2; tex->MappingLights[1] = 3;
	tex->EnvMapRot = tex->EnvMapX = tex->EnvMapY = 0.0f;
	tex->SprColor = 0xFFFFFFFF;
	tex->Rot = 0.0f; tex->ScaleX = 1.0f; tex->ScaleY = 1.0f;
	tex->Swizzle = 0;
	tex->isVideo = 0;
	tex->DemoEffect_PlasmaFrame = 0;
	
	memset(tex->clut_anim,0,256*4);
	memset(tex->palframe,0,32*4);
	memset(tex->palcounter,0,32*4);
	memset(tex->Anim,0,64);
	
	OSL_IMAGE *img = NULL;
	if(AMG.LoadFrom == AMG_LOAD_RAM){
		OSL_VIRTUALFILENAME ram_files = {(char*)"ram:/file.png", (void*)path, (int)AMG.LoadSize, &VF_MEMORY};
		oslAddVirtualFileList(&ram_files, 1);
		img = oslLoadImageFilePNG((char*)"ram:/file.png", OSL_IN_RAM | OSL_UNSWIZZLED, GU_PSM_4444);
		oslRemoveVirtualFileList(&ram_files, 1);
	}else{
		//is a PNG
		img = oslLoadImageFilePNG((char*)path, OSL_IN_RAM | OSL_UNSWIZZLED, tex->TexFormat);
	}
	if(img == NULL) AMG_Error((const char*)"File not found / Archivo no encontrado",path);
	tex->TexFormat = img->pixelFormat;
	tex->Width = (u32) img->sysSizeX;
	tex->Height = (u32) img->sysSizeY;
	tex->Next_pow2 = tex->Width;
	
	int er = 0;
	switch (tex->TexFormat){
		case GU_PSM_8888: if (tex->Width < 4) er = 1; break;
		case GU_PSM_5650:
		case GU_PSM_5551:
		case GU_PSM_4444: if (tex->Width < 8) er = 1; break;
		case GU_PSM_T8: if (tex->Width < 16) er = 1; break;
		case GU_PSM_T4: if (tex->Width < 32) er = 1; break;
	}
	if (er) AMG_Error((const char*)"Image too small / Imagen muy pequeña",path);
		
	tex->Data = (u32*) calloc(AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat),1);
	
	//Only a few programs export alpha in indexed images, do not use alpha here.
	//Instead, if this finds a pure BLUE color 0xFFFF0000 (ABGR), that will be fully transparent.
	if (psm == GU_PSM_T4 || psm == GU_PSM_T8){//palette from 8 bit images
		int colors = img->palette->nElements;
		for (i = 0; i < colors; i++){
			if (((u32*)img->palette->data)[i] == 0xFFFF0000)
				((u32*)img->palette->data)[i] = 0;
		}
		memcpy(tex->clut,img->palette->data,img->palette->nElements*4);
		memcpy(tex->clut_anim,tex->clut,img->palette->nElements*4);
	}
	memcpy(tex->Data,img->data,AMG_GetVramSize(tex->Width,tex->Height, tex->TexFormat));
	
	// Stride
	if (tex->Width > 512) AMG_Error((const char*)"Texture > 512 / textura > 512",path);
	tex->rw = tex->Width; tex->rh = tex->Height;
	tex->RWidth = img->stretchX;//Actual width of loaded image
	tex->RHeight = img->stretchY;//Actual height of loaded image
	
	// Check if there are Custom mipmaps: name_mip1.png, name_mip2.png 
	int custom_mipmaps = 0;
	u8 len = strlen(path);
	char *mip1_name = (char*) calloc (128, sizeof(char));
	char *mip2_name = (char*) calloc (128, sizeof(char));
	if (AMG_MipMapping){
		//crashes
		strncpy(mip1_name,path,127);
		mip1_name[len-4] = 0;
		strcat(mip1_name,"_mip1.png");
		strncpy(mip2_name,path,127);
		mip2_name[len-4] = 0;
		strcat(mip2_name,"_mip2.png");
		int result1 = access(mip1_name, F_OK);
		int result2 = access(mip2_name, F_OK);
		if (result1 == 0) custom_mipmaps++;
		if (result2 == 0) custom_mipmaps++;
	}
	//Load custom mipmaps,
	if (AMG_MipMapping && custom_mipmaps == 2){
		OSL_IMAGE *im1 = oslLoadImageFilePNG((char*)mip1_name, OSL_IN_RAM | OSL_UNSWIZZLED, tex->TexFormat);
		OSL_IMAGE *im2 = oslLoadImageFilePNG((char*)mip2_name, OSL_IN_RAM | OSL_UNSWIZZLED, tex->TexFormat);
		int format = tex->TexFormat;
		if (im1->pixelFormat != format) AMG_Error((const char*)"mipmap format error/ error formato mipmap",mip1_name);
		if (im2->pixelFormat != format) AMG_Error((const char*)"mipmap format error/ error formato mipmap",mip2_name);
		int er1 = 0;
		switch (tex->TexFormat){
			case GU_PSM_8888: 
				if (im1->sysSizeX < 4) er1 = 1;
				if (im2->sysSizeX < 4) er1 = 2;
			break;
			case GU_PSM_5650:
			case GU_PSM_5551:
			case GU_PSM_4444: 
				if (im1->sysSizeX < 8) er1 = 1; 
				if (im2->sysSizeX < 8) er1 = 2; 
			break;
			case GU_PSM_T8: 
				if (im1->sysSizeX < 16) er1 = 1; 
				if (im2->sysSizeX < 16) er1 = 2; 
			break;
			case GU_PSM_T4:
				if (im1->sysSizeX < 32) er1 = 1; 
				if (im2->sysSizeX < 32) er1 = 2; 
			break;
		}
		if (er1 == 1) AMG_Error((const char*)"Image too small / Imagen muy pequeña",mip1_name);
		if (er1 == 2) AMG_Error((const char*)"Image too small / Imagen muy pequeña",mip2_name);
		
		tex->MipData  = (u32*) calloc(AMG_GetVramSize(im1->sysSizeX,im1->sysSizeY,tex->TexFormat),1);
		tex->MipData1 = (u32*) calloc(AMG_GetVramSize(im2->sysSizeX,im2->sysSizeY,tex->TexFormat),1);
		
		memcpy(tex->MipData ,im1->data,AMG_GetVramSize(im1->sysSizeX,im1->sysSizeY, tex->TexFormat));
		memcpy(tex->MipData1,im2->data,AMG_GetVramSize(im2->sysSizeX,im2->sysSizeY, tex->TexFormat));
		tex->NMipmaps = 2;
		tex->M1_Width = im1->sysSizeX; tex->M1_Height = im1->sysSizeY;
		tex->M2_Width = im2->sysSizeX; tex->M2_Height = im2->sysSizeY;
		oslDeleteImage(im1); oslDeleteImage(im2);
	}
	// If no custom mipmaps: Create automatic mipmap textures
	if (AMG_MipMapping && custom_mipmaps !=2){
	  //Check if mipmaps are worth it
	  int mip = 1;
	  switch (tex->TexFormat){
	  	case GU_PSM_8888: if (tex->Width < 16) mip = 0; break;
	  	case GU_PSM_5650:
	  	case GU_PSM_5551:
	  	case GU_PSM_4444: if (tex->Width < 32) mip = 0; break;
	  	case GU_PSM_T8: if (tex->Width < 64) mip = 0; break;
	  	case GU_PSM_T4: if (tex->Width < 128) mip = 0; break;
	  }
	  if (mip) {
		tex->M1_Width = tex->Width>>1;tex->M1_Height = tex->Height>>1;
		tex->M2_Width = tex->Width>>2;tex->M2_Height = tex->Height>>2;
		u32 *data0 = (u32*) img->data;
		tex->MipData = (u32*) calloc(AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat),1);
		tex->MipData1 = (u32*) calloc(AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat),1);
		u32 x,y,offset;
		
		if (tex->TexFormat == GU_PSM_8888){
			//OK, scan the texture and create the first mipmap, half the size of the texture.
			offset = 0;
			for(y=0; y<tex->Height;y+=2){
				for(x=0; x<tex->Width;x+=2){
					tex->MipData[offset] = data0[x + (y * tex->Width)];
					offset++;
				}
			}

			//Create the second mipmap, half the size of first mipmap.
			offset = 0;
			for(y=0; y<tex->Height;y+=4){
				for(x=0; x<tex->Width;x+=4){
					tex->MipData1[offset] = data0[x + (y * tex->Width)];
					offset++;
				}
			}
			tex->NMipmaps = 2;
		}
		if (tex->TexFormat == GU_PSM_4444){
			//OK, scan the texture and create the first mipmap, half the size of the texture.
			offset = 0;
			for(y=0; y<tex->Height;y+=2){
				for(x=0; x<tex->Width;x+=2){
					((u16*)tex->MipData)[offset] = ((u16*)data0)[x + (y * tex->Width)];
					offset++;
				}
			}

			//Create the second mipmap, half the size of first mipmap.
			offset = 0;
			for(y=0; y<tex->Height;y+=4){
				for(x=0; x<tex->Width;x+=4){
					((u16*)tex->MipData1)[offset] = ((u16*)data0)[x + (y * tex->Width)];
					offset++;
				}
			}
			tex->NMipmaps = 2;
		}
		if (tex->TexFormat == GU_PSM_T8){
			//OK, scan the texture and create the first mipmap, half the size of the texture.
			offset = 0;
			for(y=0; y<tex->Height;y+=2){
				for(x=0; x<tex->Width;x+=2){
					((u8*)tex->MipData)[offset] = ((u8*)data0)[x + (y * tex->Width)];
					offset++;
				}
			}

			//Create the second mipmap, half the size of first mipmap.
			offset = 0;
			for(y=0; y<tex->Height;y+=4){
				for(x=0; x<tex->Width;x+=4){
					((u8*)tex->MipData1)[offset] = ((u8*)data0)[x + (y * tex->Width)];
					offset++;
				}
			}
			tex->NMipmaps = 2;
		}
		if (tex->TexFormat == GU_PSM_T4){
			//OK, scan the texture and create the first mipmap, half the size of the texture.
			offset = 0;
			//00 00 00 00
			for(y=0; y<tex->Height;y+=2){
				for(x=0; x<tex->Width>>1;x+=2){
					u8 pixel = ((u8*)data0)[x + (y * tex->Width>>1)];
					u8 pixel1 = ((u8*)data0)[x +1 + (y * tex->Width>>1)];
					u8 A = pixel>>4;
					u8 B = pixel1&0x0F;
					((u8*)tex->MipData)[offset] = (B<<4)|A;
					offset++;
				}
			}
			
			//Create the second mipmap, half the size of first mipmap.
			offset = 0;
			
			for(y=0; y<tex->Height;y+=4){
				for(x=0; x<tex->Width>>1;x+=4){
					u8 pixel = ((u8*)data0)[x + (y * tex->Width>>1)];
					u8 pixel1 = ((u8*)data0)[x + 1 + (y * tex->Width>>1)];
					u8 A = pixel>>4;
					u8 B = pixel1&0x0F;
					((u8*)tex->MipData1)[offset] = (B<<4)|A;
					offset++;
				}
			}
			tex->NMipmaps = 2;
		}
		//No mipmaps for 5650 textures or 5551 for now
		if ((tex->TexFormat == GU_PSM_5650)||(tex->TexFormat == GU_PSM_5551))tex->NMipmaps = 0;
	  }
	}
	oslDeleteImage(img);
	free(mip1_name);
	free(mip2_name);
	
	AMG_SwizzleTexture(tex);
	if (load == 0) AMG_TransferTextureVram(tex);
	if (load == M3D_IN_VRAM) AMG_TransferTextureVram(tex);
	
	//Avoids garbage pixels on textures
	sceKernelDcacheWritebackInvalidateRange(tex->Data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	if(tex->NMipmaps == 2){
		sceKernelDcacheWritebackInvalidateRange(tex->MipData,AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat));
		sceKernelDcacheWritebackInvalidateRange(tex->MipData1,AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat));
	}
	
	// Devuelve la textura cargada
	return tex;
}

M3D_Texture *M3D_LoadTexture(const char *path, u8 load, u32 psm){
	AMG_Texture *t = AMG_LoadTexture(path,load,psm);
	return (M3D_Texture*)t;
}

// Convierte el formato de una textura
void AMG_ConvertTexture(AMG_Texture *tex, u32 psm){
	if(tex == NULL) return;//Just in case you try to use it on textureless PLY models
	if(tex->TexFormat != GU_PSM_8888) return;
	if(tex->Swizzle) return;
	// Crea el nuevo buffer
	u16 *data = (u16*) calloc (AMG_GetVramSize(tex->Next_pow2, tex->Height, psm), sizeof(u8));
	if(data == NULL) return;
	u32 i; u8 *clr;
	// Convierte la textura, pues
	switch(psm){
		/*case GU_PSM_T8:
			for(i=0;i<(tex->Width*tex->Height);i++){
				// Obten el RGB
				clr = (u8*)&tex->Data[i];
				clr[0] = (clr[0] >> 4) &0xF;
				clr[1] = (clr[1] >> 4) &0xF;
				clr[2] = (clr[2] >> 4) &0xF;
				clr[3] = (clr[3] >> 4) &0xF;
				// Recombínalo a R1G1B1
				data[i] = AMG_RGBA4444(clr[0], clr[1], clr[2]);
			} break;
		*/
		case GU_PSM_4444:
			for(i=0;i<(tex->Next_pow2*tex->Height);i++){
				// Obten el RGB
				clr = (u8*)&tex->Data[i];
				clr[0] = (clr[0] >> 4) &0xF;
				clr[1] = (clr[1] >> 4) &0xF;
				clr[2] = (clr[2] >> 4) &0xF;
				clr[3] = (clr[3] >> 4) &0xF;
				// Recombínalo a R4G4B4A4
				data[i] = AMG_RGBA4444(clr[0], clr[1], clr[2], clr[3]);
			} break;
		case GU_PSM_5650:
			tex->TCC = GU_TCC_RGB;		// Es tontería poner alpha donde no lo hay
			for(i=0;i<(tex->Next_pow2*tex->Height);i++){
				// Obten el RGB
				clr = (u8*)&tex->Data[i];
				clr[0] = (clr[0] >> 3) &0x1F;
				clr[1] = (clr[1] >> 2) &0x3F;
				clr[2] = (clr[2] >> 3) &0x1F;
				// Recombínalo a R5G6B5
				data[i] = AMG_RGBA5650(clr[0], clr[1], clr[2]);
			} break;
		case GU_PSM_5551:
			for(i=0;i<(tex->Next_pow2*tex->Height);i++){
				// Obten el RGB
				clr = (u8*)&tex->Data[i];
				clr[0] = (clr[0] >> 3) &0x1F;
				clr[1] = (clr[1] >> 3) &0x1F;
				clr[2] = (clr[2] >> 3) &0x1F;
				// Recombínalo a R5G5B5A1
				data[i] = AMG_RGBA5551(clr[0], clr[1], clr[2], clr[3]?1:0);
			} break;
		default: return;
	}
	// Actualiza el buffer
	tex->TexFormat = psm;
	if(tex->Load == M3D_IN_RAM){
		free(tex->Data); tex->Data = NULL; tex->Data = (u32*) data;
	}else{
		tex->Load = M3D_IN_RAM;
		AMG_FreeVram(tex->Data, (tex->Width*tex->Height)<<2); tex->Data = (u32*) data;
		AMG_TransferTextureVram(tex);
	}
}

// Transfiere una textura de RAM a VRAM
void AMG_TransferTextureVram(AMG_Texture *tex){
	if(tex == NULL) return;
	if(tex->Load == M3D_IN_VRAM) return;
	u32 size0  = AMG_GetVramSize(tex->Width, tex->Height, tex->TexFormat);
	u32 size01 = AMG_GetVramSize(tex->Next_pow2, tex->Height, tex->TexFormat);
	u32 size1  = AMG_GetVramSize(tex->M1_Width,tex->M1_Height, tex->TexFormat);
	u32 size2  = AMG_GetVramSize(tex->M2_Width,tex->M2_Height, tex->TexFormat);
	//Data Data1 Mip0 Mip1 Palette
	u32 *vram_ptr = NULL, *vram_ptr0 = NULL, *vram_ptr1 = NULL, *vram_ptr2 = NULL, *vram_ptr3 = NULL;

	//Upload main data
	if ((vram_ptr = (u32*)oslVramMgrAllocBlock(size0)) == NULL) goto stay_in_RAM;
	else memcpy(vram_ptr, tex->Data, size0);
	//Upload second part (if a "Huge" image)
	if(tex->Data1 != NULL){
		if ((vram_ptr0 = (u32*)oslVramMgrAllocBlock(size01)) == NULL) goto stay_in_RAM;
		else memcpy(vram_ptr0, tex->Data1, size01);
	} else size01 = 0;
	
	//upload mipmaps
	if(tex->NMipmaps != 0){
		if ((vram_ptr1 = (u32*)oslVramMgrAllocBlock(size1)) == NULL) goto stay_in_RAM;
		else memcpy(vram_ptr1, tex->MipData, size1);
		if ((vram_ptr2 = (u32*)oslVramMgrAllocBlock(size2)) == NULL) goto stay_in_RAM;
		else memcpy(vram_ptr2, tex->MipData1, size2);
	} else {size1 = 0; size2 = 0;}
	
	//upload clut 
	if ((vram_ptr3 = (u32*)oslVramMgrAllocBlock(256*4)) == NULL) goto stay_in_RAM;
	else memcpy(vram_ptr3, tex->clut, 256*4);
	//OK
	free(tex->Data); tex->Data = vram_ptr;
	if(tex->Data1){free(tex->Data1); tex->Data1 = vram_ptr0;}
	if(tex->NMipmaps != 0){
		free(tex->MipData); tex->MipData = vram_ptr1;
		free(tex->MipData1); tex->MipData1 = vram_ptr2;
	}
	free(tex->clut); tex->clut = vram_ptr3;
	tex->Load = M3D_IN_VRAM;
	return;

//If something does not fit in VRAM, everything stays in RAM
stay_in_RAM:
	
	if(vram_ptr  != NULL) AMG_FreeVram(vram_ptr ,size0);
	if(vram_ptr0 != NULL) AMG_FreeVram(vram_ptr0,size01);
	if(vram_ptr1 != NULL) AMG_FreeVram(vram_ptr1,size1);
	if(vram_ptr2 != NULL) AMG_FreeVram(vram_ptr2,size2);
	if(vram_ptr3 != NULL) AMG_FreeVram(vram_ptr3,256*4);
	tex->Load = M3D_IN_RAM;
	return;
}

// Transfiere una textura de VRAM a RAM
void AMG_TransferTextureRam(AMG_Texture *tex){
	if(tex == NULL) return;
	if(tex->Load == M3D_IN_RAM) return;
	u32 size0  = AMG_GetVramSize(tex->Width, tex->Height, tex->TexFormat);
	u32 size01 = AMG_GetVramSize(tex->RWidth, tex->Height, tex->TexFormat);
	u32 size1  = AMG_GetVramSize(tex->M1_Width,tex->M1_Height, tex->TexFormat);
	u32 size2  = AMG_GetVramSize(tex->M2_Width,tex->M2_Height, tex->TexFormat);
	//Data Data1 Mip0 Mip1 Palette
	u32 *ram_ptr = NULL, *ram_ptr0 = NULL, *ram_ptr1 = NULL, *ram_ptr2 = NULL, *ram_ptr3 = NULL;

	//Download main data
	if ((ram_ptr = (u32*)calloc(size0,1)) == NULL) goto stay_in_VRAM;
	else memcpy(ram_ptr, tex->Data, size0);
	//Download second part (if a "Huge" image)
	if(tex->Data1 != NULL){
		if ((ram_ptr0 = (u32*)calloc(size01,1)) == NULL) goto stay_in_VRAM;
		else memcpy(ram_ptr0, tex->Data1, size01);
	} else size01 = 0;
	
	//Download mipmaps
	if(tex->NMipmaps != 0){
		if ((ram_ptr1 = (u32*)calloc(size1,1)) == NULL) goto stay_in_VRAM;
		else memcpy(ram_ptr1, tex->MipData, size1);
		if ((ram_ptr2 = (u32*)calloc(size2,1)) == NULL) goto stay_in_VRAM;
		else memcpy(ram_ptr2, tex->MipData1, size2);
	} else {size1 = 0; size2 = 0;}
	
	//upload clut in case the image is indexed
	if ((ram_ptr3 = (u32*)calloc(256*4,1)) == NULL) goto stay_in_VRAM;
	else memcpy(ram_ptr3, tex->clut, 256*4);

	//OK
	AMG_FreeVram(tex->Data,size0); tex->Data = ram_ptr;
	if(tex->Data1){AMG_FreeVram(tex->Data1,size01); tex->Data1 = ram_ptr0;}
	if(tex->NMipmaps != 0){
		AMG_FreeVram(tex->MipData,size1); tex->MipData = ram_ptr1;
		AMG_FreeVram(tex->MipData1,size2); tex->MipData1 = ram_ptr2;
	}
	AMG_FreeVram(tex->clut,256*4); tex->clut = ram_ptr3;
	
	tex->Load = M3D_IN_RAM;
	return;

//If something does not fit in RAM, everything stays in VRAM
stay_in_VRAM:
	
	if(ram_ptr  != NULL) {free(ram_ptr );ram_ptr  = NULL;}
	if(ram_ptr0 != NULL) {free(ram_ptr0);ram_ptr0 = NULL;}
	if(ram_ptr1 != NULL) {free(ram_ptr1);ram_ptr1 = NULL;}
	if(ram_ptr2 != NULL) {free(ram_ptr2);ram_ptr2 = NULL;}
	if(ram_ptr3 != NULL) {free(ram_ptr3);ram_ptr3 = NULL;}
	tex->Load = AMG_TEX_VRAM;
	return;
}

// Elimina una textura
void AMG_UnloadTexture(AMG_Texture *tex){
	if(tex == NULL) return;
	u32 size0 = AMG_GetVramSize(tex->Width, tex->Height, tex->TexFormat);
	u32 size01 = 0;
	u32 size1 = AMG_GetVramSize(tex->M1_Width,tex->M1_Height, tex->TexFormat);
	u32 size2 = AMG_GetVramSize(tex->M2_Width,tex->M2_Height, tex->TexFormat);
	if(tex->Load == AMG_TEX_RAM){
		free(tex->Data);
		if (tex->Data1 != NULL) free(tex->Data1); 
		if (tex->NMipmaps){free(tex->MipData);free(tex->MipData1);}
		if (tex->clut != NULL) {free(tex->clut);tex->clut = NULL;}
	}else{
		AMG_FreeVram(tex->Data,size0);
		if (tex->Data1 != NULL) {
			size01 = AMG_GetVramSize(tex->RWidth, tex->Height, tex->TexFormat);
			AMG_FreeVram(tex->Data1,size01);
		}
		if(tex->NMipmaps){
			AMG_FreeVram(tex->MipData,size1);
			AMG_FreeVram(tex->MipData1,size2);
		}
		if (tex->clut != NULL) AMG_FreeVram(tex->clut, 256*4);
	}
	tex->Data = NULL;
	tex->Data1 = NULL;
	tex->MipData = NULL;
	tex->MipData1 = NULL;
	tex->clut = NULL;
	free(tex); tex = NULL;
}

void M3D_TextureUnload(M3D_Texture *t){
	AMG_Texture *tex = (AMG_Texture*)t;
	AMG_UnloadTexture(tex);
}

// Load images bigger than 512, up to 768x512
// Stores images in RAM(VRAM if they fit) and swizzled
// PSP GPU is slow when drawing these big images, use only for menus, intros etc
// If you really nees a huge image for a game, use AMG_LoadImage
M3D_Texture *M3D_LoadHugeImage(const char *filename) {
	int width, height;
	png_byte color_type;
	png_byte bit_depth;
	png_bytep *row_pointers = NULL;
	FILE *fp = fopen(filename, "rb");
	if (!fp)AMG_Error((char*)"File not found / Archivo no encontrado",filename);
	int y;
	
	u32 texture_offset = 0;
	AMG_Texture *Image = (AMG_Texture*) calloc(1,sizeof(AMG_Texture));
	png_structp png = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
	if(!png) AMG_Error((char*)"PNG error",filename);
	png_infop info = png_create_info_struct(png);
	if(!info) AMG_Error((char*)"PNG info error",filename);
	if(setjmp(png_jmpbuf(png))) abort();
	png_init_io(png, fp);
	png_read_info(png, info);
	width      = png_get_image_width(png, info);
	height     = png_get_image_height(png, info);
	color_type = png_get_color_type(png, info);
	bit_depth  = png_get_bit_depth(png, info);

	if (height > 512) AMG_Error((char*)"Height > 512 / Altura > 512",filename);
	if (width > 768) AMG_Error((char*)"Width > 768 / Anchura > 768",filename);
	if (width < 512) AMG_Error((char*)"Small image / imagen pequeña",filename);

	//if(bit_depth == 16) png_set_strip_16(png);
	if(color_type == PNG_COLOR_TYPE_PALETTE) {
		if (bit_depth == 4) Image->TexFormat = GU_PSM_T4;
		if (bit_depth == 8) Image->TexFormat = GU_PSM_T8;
	}
	// PNG_COLOR_TYPE_GRAY_ALPHA is always 8 or 16bit depth.
	//if(color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8) png_set_expand_gray_1_2_4_to_8(png);
	if(png_get_valid(png, info, PNG_INFO_tRNS)) png_set_tRNS_to_alpha(png);
	// These color_type don't have an alpha channel then fill it with 0xff.
	if(color_type == PNG_COLOR_TYPE_RGB || color_type == PNG_COLOR_TYPE_GRAY){
		png_set_filler(png, 0xFF, PNG_FILLER_AFTER);
		Image->TexFormat = GU_PSM_8888;
	}
	if(color_type == PNG_COLOR_TYPE_GRAY || color_type == PNG_COLOR_TYPE_GRAY_ALPHA){
		png_set_gray_to_rgb(png);
		Image->TexFormat = GU_PSM_8888;
	}
	if (color_type == PNG_COLOR_TYPE_RGBA) {
		Image->TexFormat = GU_PSM_8888;
	}
	
	//Read png
	png_read_update_info(png, info);
	if (row_pointers) abort();
	row_pointers = (png_bytep*)malloc(sizeof(png_bytep) * height);
	for(y = 0; y < height; y++) row_pointers[y] = (png_byte*)malloc(png_get_rowbytes(png,info));
	png_read_image(png, row_pointers);

	//Copy to AMG_Texture
	Image->Width = width;
	Image->RWidth = width-512;
	Image->Height = height;
	Image->clut = (u32*) calloc(256,4);
	memset(Image->clut,0,256*4);
	memset(Image->clut_anim,0,256*4);
	memset(Image->palframe,0,32*4);
	memset(Image->palcounter,0,32*4);
	u32 v = Image->RWidth;
	v-=1; v|=(v>>1); v|=(v>>2); v|=(v>>4); v|=(v>>8); v|=(v>>16);
	Image->Next_pow2 = v+1;
	
	if(Image->TexFormat == GU_PSM_8888){
		Image->Data = (u32*) calloc((512*512),4);
		Image->Data1 = (u32*) calloc(Image->Next_pow2*height,4);
		texture_offset = 0;
		for(y = 0; y < height; y++) {
			memcpy(&Image->Data[texture_offset],row_pointers[y],512*4);
			texture_offset+=512;
		}
		texture_offset = 0;
		for(y = 0; y < height; y++) {
			memcpy(&Image->Data1[texture_offset],row_pointers[y]+(512*4),Image->Next_pow2*4);
			texture_offset+=Image->Next_pow2;
		}
	}
	
	if(Image->TexFormat == GU_PSM_T8){
		Image->Data = (u32*) calloc((512*512),1);
		Image->Data1 = (u32*) calloc(Image->Next_pow2*height,1);
		
		png_colorp png_palette;
		int num_colors;
		png_get_PLTE(png, info, &png_palette, &num_colors);
		for(y = 0; y < num_colors; y++) {
			u32 color = 0xFF000000 | (png_palette[y].blue<<16) | (png_palette[y].green<<8) | png_palette[y].red;
			Image->clut[y] = color;
		}
		
		texture_offset = 0;
		for(y = 0; y < height; y++) {
			memcpy(&Image->Data[texture_offset],row_pointers[y],512);
			texture_offset+=(512>>2);
		}
		texture_offset = 0;
		for(y = 0; y < height; y++) {
			memcpy(&Image->Data1[texture_offset],row_pointers[y]+512,Image->Next_pow2);
			texture_offset+=Image->Next_pow2>>2;
		}
	}

	if(Image->TexFormat == GU_PSM_T4){
		Image->Data = (u32*) calloc((256*512),1);
		Image->Data1 = (u32*) calloc((Image->Next_pow2>>1)*height,1);
		
		png_colorp png_palette;
		int num_colors;
		png_get_PLTE(png, info, &png_palette, &num_colors);
		for(y = 0; y < num_colors; y++) {
			u32 color = 0xFF000000 | (png_palette[y].blue<<16) | (png_palette[y].green<<8) | png_palette[y].red;
			Image->clut[y] = color;
		}
		
		//Wrong nibble order in PSP texture
		texture_offset = 0;
		for(y = 0; y < height; y++) {
			memcpy(&Image->Data[texture_offset],row_pointers[y],512);
			texture_offset+=(512>>3);
		}
		texture_offset = 0;
		for(y = 0; y < height; y++) {
			memcpy(&Image->Data1[texture_offset],row_pointers[y]+(512>>1),Image->Next_pow2>>1);
			texture_offset+=Image->Next_pow2>>3;
		}
	}

	memcpy(Image->clut_anim,Image->clut,256*4);
	
	//Use OSLib to swizzle the image, it will be rendered much MUCH faster from RAM.
	OSL_IMAGE *img = oslCreateImage(512,Image->Height,OSL_IN_RAM,Image->TexFormat);
	OSL_IMAGE *img1 = oslCreateImage(Image->Next_pow2,Image->Height,OSL_IN_RAM,Image->TexFormat);
	memcpy(img->data,Image->Data,AMG_GetVramSize(512,Image->Height,Image->TexFormat));
	memcpy(img1->data,Image->Data1,AMG_GetVramSize(Image->Next_pow2,Image->Height,Image->TexFormat));
	oslSwizzleImage(img);
	oslSwizzleImage(img1);
	memcpy(Image->Data,img->data,AMG_GetVramSize(512,Image->Height,Image->TexFormat));
	memcpy(Image->Data1,img1->data,AMG_GetVramSize(Image->Next_pow2,Image->Height,Image->TexFormat));
	oslDeleteImage(img);
	oslDeleteImage(img1);

	Image->Load = AMG_TEX_RAM;
	Image->Swizzle = 1;

	//Free ram
	for(int y = 0; y < height; y++) free(row_pointers[y]);
	free(row_pointers);
	fclose(fp);
	png_destroy_read_struct(&png, &info, NULL);
	
	//Try to upload to VRAM. it will only fit if not 8888 mode, and/or if it is a paletted image,
	// or in 4MB VRAM mode (PSP 2000+)
	AMG_TransferTextureVram(Image);
	
	//Avoids garbage pixels on textures
	sceKernelDcacheWritebackInvalidateRange(Image->Data,AMG_GetVramSize(Image->Width,Image->Height,Image->TexFormat));
	sceKernelDcacheWritebackInvalidateRange(Image->Data1,AMG_GetVramSize(Image->Width,Image->Height,Image->TexFormat));
	
	return (M3D_Texture*)Image;
}

// Draw 
void M3D_DrawHugeImage(M3D_Texture *i, s16 x, s16 y) {
	AMG_Texture *image = (AMG_Texture*)i; 
	if (!image) return;
	//Define two quads (u v x y z, u v x y z)
	s16 data0[] = {0,0,    x,y,0,          512,(s16)image->Height,(s16)(             x+512),(s16)(image->Height+y),0};
	s16 data1[] = {0,0,(s16)(x+512),y,0,(s16)image->RWidth,(s16)image->Height,(s16)(x+512+image->RWidth),(s16)(image->Height+y),0}; 
	s16 *QUAD0 = (s16*) sceGuGetMemory(10*sizeof(s16));
	s16 *QUAD1 = (s16*) sceGuGetMemory(10*sizeof(s16));
	memcpy(QUAD0,data0,10*sizeof(s16));
	memcpy(QUAD1,data1,10*sizeof(s16));
	
	if(image->TexFormat == GU_PSM_T4){
		sceGuClutMode(GU_PSM_8888,0,0x0f,0);
		sceGuClutLoad(16/8,image->clut); // upload 16 rgba colours
	}
	if(image->TexFormat == GU_PSM_T8){
		sceGuClutMode(GU_PSM_8888,0,0xff,0);
		sceGuClutLoad(256/8,image->clut); // upload 256 rgba colours
	}
	
	// setup texture
	sceGuEnable(GU_TEXTURE_2D);
	sceGuTexFunc(GU_TFX_MODULATE,GU_TCC_RGBA);
	sceGuTexFilter(GU_NEAREST,GU_NEAREST);
	sceGuTexMapMode(GU_TEXTURE_COORDS,0,1);
	sceGuTexMode(image->TexFormat,0,0,image->Swizzle);
	sceGuColor(0xFFFFFFFF);
	
	//Draw 512 * Height part
	sceGuTexImage(0,512,image->Height<<1,512,image->Data);
	sceGuDrawArray(GU_SPRITES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),2, 0,QUAD0);
	
	//Draw RWidth (Width-512) * Height part
	sceGuTexImage(0,image->Next_pow2,image->Height<<1,image->Next_pow2,image->Data1);
	sceGuDrawArray(GU_SPRITES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),2, 0,QUAD1);
}

// Can load images bigger than 512, up to 768x512,
// stores them ONLY in RAM and UNSWIZZLED.
// Use this to copy huge images very fast to framebuffer without any slowdowns.
// This could be usefull for a desktop wallpaper or a static image in a game.
// GPU is not involved in the drawing/copying of the data, so any gpu related 
// function won't work and won't be modified (dithering, alpha buffer, depth buffer)
// Image will be loaded in the PSM format set by AMG_OSL_Init().
M3D_Texture *M3D_LoadRawImage(const char *path){
	int width, height;
	png_byte color_type;
	png_byte bit_depth;
	png_bytep *row_pointers = NULL;
	FILE *fp = fopen(path, "rb");
	if (!fp)AMG_Error((char*)"File not found / Archivo no encontrado",path);
	int y;
	
	u32 texture_offset = 0;
	AMG_Texture *Image = (AMG_Texture*) calloc(1,sizeof(AMG_Texture));
	
	png_structp png = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
	if(!png) AMG_Error((char*)"PNG error",path);
	png_infop info = png_create_info_struct(png);
	if(!info) AMG_Error((char*)"PNG info error",path);
	if(setjmp(png_jmpbuf(png))) abort();
	png_init_io(png, fp);
	png_read_info(png, info);
	width      = png_get_image_width(png, info);
	height     = png_get_image_height(png, info);
	color_type = png_get_color_type(png, info);
	bit_depth  = png_get_bit_depth(png, info);

	if (height > 512) AMG_Error((char*)"Height > 512 / Altura > 512",path);
	if (width > 768) AMG_Error((char*)"Width > 768 / Anchura > 768",path);

	//if(bit_depth == 16) png_set_strip_16(png);
	if( color_type == PNG_COLOR_TYPE_PALETTE) {
		png_set_palette_to_rgb(png);
		Image->TexFormat = GU_PSM_8888;
	}
	if (color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8){
		// PNG_COLOR_TYPE_GRAY_ALPHA is always 8 or 16bit depth.
		png_set_expand_gray_1_2_4_to_8(png);
	}
	if(png_get_valid(png, info, PNG_INFO_tRNS)) png_set_tRNS_to_alpha(png);
	// These color_type don't have an alpha channel then fill it with 0xff.
	if(color_type == PNG_COLOR_TYPE_RGB || color_type == PNG_COLOR_TYPE_GRAY){
		png_set_filler(png, 0xFF, PNG_FILLER_AFTER);
		Image->TexFormat = GU_PSM_8888;
	}
	if(color_type == PNG_COLOR_TYPE_GRAY || color_type == PNG_COLOR_TYPE_GRAY_ALPHA){
		png_set_gray_to_rgb(png);
		Image->TexFormat = GU_PSM_8888;
	}
	if (color_type == PNG_COLOR_TYPE_RGBA) {
		Image->TexFormat = GU_PSM_8888;
	} //AMG_Error((char*)"WRONG FORMAT / FORMATO NO VALIDO",path);
	
	//Read png
	png_read_update_info(png, info);
	if (row_pointers) abort();
	row_pointers = (png_bytep*)malloc(sizeof(png_bytep) * height);
	for(y = 0; y < height; y++) row_pointers[y] = (png_byte*)malloc(png_get_rowbytes(png,info));
	png_read_image(png, row_pointers);

	//Copy to AMG_Texture
	Image->Width = width;
	Image->Height = height;
	Image->clut = (u32*) calloc(256,4);
	memset(Image->clut,0,256*4);
	memset(Image->clut_anim,0,256*4);
	memset(Image->palframe,0,32*4);
	memset(Image->palcounter,0,32*4);
	u32 v = Image->Width;
	v-=1; v|=(v>>1); v|=(v>>2); v|=(v>>4); v|=(v>>8); v|=(v>>16);
	Image->Next_pow2 = v+1;
	
	//8888 image
	Image->Data = (u32*) calloc(Image->Next_pow2*height,4);
	for(y = 0; y < height; y++) {
		memcpy(&Image->Data[texture_offset],row_pointers[y],width*4);
		texture_offset+=Image->Next_pow2;
	}
	//Convert the pixels to framebuffer format
	Image->Load = M3D_IN_RAM;
	if (AMG.PSM != GU_PSM_8888) AMG_ConvertTexture(Image,AMG.PSM);
	Image->Swizzle = 0;
	Image->NMipmaps = 0;

	//Free ram
	for(int y = 0; y < height; y++) free(row_pointers[y]);
	free(row_pointers);
	fclose(fp);
	png_destroy_read_struct(&png, &info, NULL);
	
	//sceKernelDcacheWritebackInvalidateRange(Image->Data,AMG_GetVramSize(Image->Next_pow2,Image->Height,AMG.PSM));
	
	return (M3D_Texture*)Image;
}

//Draws an image loaded with AMG_LoadImage. This function is VERY fast but
//it is not GPU related: alpha, depth, or dither won't have any effect.
//Also image will wrap around if it reaches the end of the framebuffer
void M3D_DrawImage(M3D_Texture *t, int x, int y){
	AMG_Texture *tex = (AMG_Texture*)t; 
	if (!tex) return;
	sceGuCopyImage(AMG.PSM,0,0,tex->Width,tex->Height,tex->Next_pow2,tex->Data,x,y,AMG.ScreenStride,osl_curDrawBuf);
	sceGuTexSync();
	sceGuClear(GU_DEPTH_BUFFER_BIT);
	sceGuClear(GU_STENCIL_BUFFER_BIT);
}

// Dibuja un Sprite 2D sin posibilidad de rotacion ni escalado (más rápido)
void M3D_DrawSprite(M3D_Texture *t, int x, int y, int tile_size_x, int tile_size_y, u8 *anim, float speed){
	AMG_Texture *tex = (AMG_Texture*)t; 
	if(tex == NULL) {sceGuDisable(GU_TEXTURE_2D);return;}
	u16 U0 = 0; u16 V0  = 0;
	u16 U1 = tex->RWidth;u16 V1 = tex->RHeight;
	u16 width = tex->RWidth;u16 height = tex->RHeight;
	
	//Animate
	if ((tile_size_x)&&(tile_size_y)){
		u8 frame = 0;
		tex->Frame+=speed;
		if (anim){
			if ((u8)tex->Frame == anim[0]) tex->Frame = 0;
			frame = anim[1+(u8)(tex->Frame)];
		}
		int x_frames = (tex->RWidth/tile_size_x);
		int y_frames = (tex->RHeight/tile_size_y);
		if (frame > (x_frames*y_frames)) frame = 0;
		int x_frame = frame%x_frames;
		int y_frame = frame/x_frames;
		U0 = (tile_size_x*x_frame);
		V0 = (tile_size_y*y_frame);
		U1 = U0+tile_size_x;
		V1 = V0+tile_size_y;
		width = tile_size_x;
		height = tile_size_y;
	}
	
	//Define line to draw a quad
	AMG_Vertex_intTV *data2D = (AMG_Vertex_intTV*) sceGuGetMemory(2 * sizeof(AMG_Vertex_intTV));
	data2D[0].u = U0; 
	data2D[0].v = V0;
	data2D[0].x =  x; data2D[0].y = y;
	data2D[1].u = U1; 
	data2D[1].v = V1;
	data2D[1].x = x+width; data2D[1].y = y+height;
	
	//Enable texture
	sceGuEnable(GU_TEXTURE_2D);
	
	if(tex->isVideo) tex->TCC = GU_TCC_RGB;

	sceGuClutMode(GU_PSM_8888,0,0xff,0);
	sceGuClutLoad(256/8,tex->clut);
	sceGuTexFunc(tex->TFX, tex->TCC);
	sceGuTexFilter(GU_NEAREST,GU_NEAREST);
	sceGuTexMapMode(tex->Mapping, tex->MappingLights[0], tex->MappingLights[1]);
	sceGuTexMode(tex->TexFormat,0, 0, tex->Swizzle);
	sceGuTexWrap(GU_CLAMP,GU_CLAMP);
	sceGuTexImage(0, tex->rw, tex->rh, tex->Width,tex->Data);
	//draw
	sceGuColor(tex->SprColor);
	sceGumDrawArray(GU_SPRITES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),2, 0, data2D);

	if(tex->isVideo) tex->TCC = GU_TCC_RGBA;
}

// Dibuja un Sprite 2D con posibilidad de rotacion y escalado (más lento)
void M3D_DrawSpriteScaleRot(M3D_Texture *t, int x, int y, float rot, float scale, int tile_size_x, int tile_size_y, u8 *anim, float speed){
	AMG_Texture *tex = (AMG_Texture*)t; 
	if(tex == NULL) return;
	float w2 = (float)(tex->RWidth >> 1);
	float h2 = (float)(tex->RHeight >> 1);
	u16 U0 = 0; u16 V0  = 0;
	u16 U1 = tex->RWidth; u16 V1 = 0;
	u16 U2 = 0; u16 V2 = tex->RHeight;
	u16 U3 = tex->RWidth; u16 V3 = tex->RHeight;

	//Animate
	if ((tile_size_x)&&(tile_size_y)){
		tex->Frame+=speed;
		if ((u8)tex->Frame == anim[0]) tex->Frame = 0;
		u8 frame = anim[1+(u8)(tex->Frame)];
		int x_frames = (tex->RWidth/tile_size_x);
		int y_frames = (tex->RHeight/tile_size_y);
		if (frame > (x_frames*y_frames)) frame = 0;
		int x_frame = frame%x_frames;
		int y_frame = frame/x_frames;
		U0 = (tile_size_x*x_frame);V0 = (tile_size_y*y_frame);
		U1 = U0+tile_size_x;V1 = V0;
		U2 = U0;V2 = V0+tile_size_y;
		U3 = U1;V3 = V2;
		w2 = (float)(tile_size_x>>1);
		h2 = (float)(tile_size_y>>1);
	}
	//VFPU rotate, translate and scale
	ScePspFMatrix4 transform = {{scale,0,0,(float)x},{0,scale,0,(float)y},{0,0,scale,0},{0,0,0,scale}};
	ScePspFMatrix4 t0 = {{-w2, w2,-w2, w2},{-h2,-h2, h2, h2},{1,1,1,1},{1,1,1,1}};
	gumRotateZ(&t0,-M3D_Deg2Rad(rot));
	gumMultMatrix(&t0,&t0,&transform);

	AMG_Vertex_intTV *data2D = (AMG_Vertex_intTV*) sceGuGetMemory(sizeof(AMG_Vertex_intTV) * 4);
	data2D[0].u = U0; data2D[0].v = V0; data2D[1].u = U1; data2D[1].v = V1;
	data2D[2].u = U2; data2D[2].v = V2; data2D[3].u = U3; data2D[3].v = V3;
	data2D[0].x = t0.x.x; data2D[1].x = t0.x.y; data2D[2].x = t0.x.z; data2D[3].x = t0.x.w; 
	data2D[0].y = t0.y.x; data2D[1].y = t0.y.y; data2D[2].y = t0.y.z; data2D[3].y = t0.y.w;
	
	//Enable texture
	sceGuEnable(GU_TEXTURE_2D);
	sceGuTexFilter(GU_NEAREST,GU_NEAREST);//tex->Filter, tex->Filter);
	if(tex->TexFormat == GU_PSM_T4){
		sceGuClutMode(GU_PSM_8888,0,0x0f,0);
		sceGuClutLoad(16/8,tex->clut); // upload 16 rgba colours
	}
	if(tex->TexFormat == GU_PSM_T8){
		sceGuClutMode(GU_PSM_8888,0,0xff,0);
		sceGuClutLoad(256/8,tex->clut); // upload 256 rgba colours
	}
	sceGuTexFunc(tex->TFX, tex->TCC);
	sceGuTexMapMode(tex->Mapping, tex->MappingLights[0], tex->MappingLights[1]);
	sceGuTexMode(tex->TexFormat,0, 0, tex->Swizzle);
	sceGuTexWrap(GU_CLAMP,GU_CLAMP);
	sceGuTexImage(0, tex->rw, tex->rh, tex->Width,tex->Data);
	
	//draw
	sceGuColor(0xFFFFFFFF);
	sceGuDrawArray(GU_TRIANGLE_STRIP, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D), 4, 0, data2D);
}

// Dibuja un Sprite 2D con posibilidad de rotacion y escalado (más lento)
void M3D_DrawGradientRect(int x, int y, int w, int h, u32 col1, u32 col2, u32 col3, u32 col4){
	OSL_LINE_VERTEX* data2D;
	data2D = (OSL_LINE_VERTEX*)sceGuGetMemory(4 * sizeof(OSL_LINE_VERTEX));
	sceGuShadeModel(GU_SMOOTH);
	data2D[0].color = col1;
	data2D[0].x = x;data2D[0].y = y; data2D[0].z = 0;
	data2D[1].color = col2;
	data2D[1].x = x+w;data2D[1].y = y; data2D[1].z = 0;
	data2D[2].color = col3;
	data2D[2].x = x;data2D[2].y = y+h; data2D[2].z = 0;
	data2D[3].color = col4;
	data2D[3].x = x+w;data2D[3].y = y+h; data2D[3].z = 0;
	
	sceGuDisable(GU_TEXTURE_2D);
	sceGuColor(0xFFFFFFFF);
	sceGuDrawArray(GU_TRIANGLE_STRIP, GU_COLOR_8888 | GU_VERTEX_16BIT | GU_TRANSFORM_2D, 4, 0, data2D);
	sceKernelDcacheWritebackRange(data2D, 4 * 10);
	sceGuEnable(GU_TEXTURE_2D);
}


// Super Fast Printf (With retro demo waves if you want)
void AMG_Print(AMG_Texture *tex, int x, int y, u32 color, int wave_amp, int wave_speed, float wave_val, char *text){
	
}

void M3D_Print(M3D_Texture *texture, int x, int y, u32 color, int wave_amp, int wave_speed, float wave_val, char *text){
	AMG_Texture *tex = (AMG_Texture*) texture;
	//tex->Filter = GU_NEAREST; 
	if (!tex) tex = (AMG_Texture*)M3D_GetFont(0);
	// Obtén la cadena de texto
	u32 l = strlen(text);
	u32 i = 0; u32 j = 0;
	AMG_Vertex_intTV *data2D = (AMG_Vertex_intTV*) sceGuGetMemory((l << 1) * sizeof(AMG_Vertex_intTV));
	// Parámetros de la fuente de texto
	u16 fontw = (tex->Width >> 4);
	u16 fonth = (tex->Height >> 4);
	s16 _x = x; s16 line_jump = y;
	unsigned char c = 0;
	// Calcula la cadena de texto
	while( j < l){
		c = text[j++];
		if(c == '\n'){	// Si es un salto de línea...
			line_jump += fonth;
			_x = (x - fontw);
			c = 0;
		}
		//if(c == -61) c = 0;//UTF-8 two byte character
		//if(c < 0) c += 128;//
		if(c ==  32) c = 0; //Space
		if(c !=   0){
			s16 _y = line_jump + (M3D_Sin(wave_val)*wave_amp);
			data2D[i].u = ((c &0xF)*fontw);
			data2D[i].v = ((c &0xF0)>>4)*fonth;
			data2D[i].x = _x;
			data2D[i].y = _y;
			data2D[i].z = 0;
			data2D[i+1].u = ((c &0xF)*fontw) + fontw;
			data2D[i+1].v = (((c &0xF0)>>4)*fonth) + fonth;
			data2D[i+1].x = _x+fontw;
			data2D[i+1].y = _y+fonth;
			data2D[i+1].z = 0;
			i+=2;
		}
		_x += fontw;
		float sp = wave_speed;
		wave_val += (float)(sp/10);
	}
	
	// Dibuja la cadena de texto
	AMG_EnableTexture(tex);
	sceGuColor(color);
	sceGuDrawArray(GU_SPRITES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),i, 0, data2D);
	sceGuColor(0xFFFFFFFF);
}


// Enable animated texture
void AMG_Texture3D_Animate(AMG_Texture *tex, u8 xframes, u8 yframes, u8 *anim, float speed){
	int i;
	if(tex == NULL) return;
	tex->NFrames = xframes*yframes;
	tex->Frame = 0;
	tex->Speed = speed;
	tex->Tile_count_x = xframes;
	tex->Tile_count_y = yframes;
	memset(tex->Anim,2,64);
	if (anim[0]){
		i = anim[0];
		if (i < 64) memcpy(tex->Anim,anim,i+1);
	}
}

void M3D_Texture3D_Animate(M3D_Texture *t, u8 xframes, u8 yframes, u8 *anim, float speed){
	AMG_Texture *tex = (AMG_Texture*)t;
	int i;
	if(tex == NULL) return;
	tex->NFrames = xframes*yframes;
	tex->Frame = 0;
	tex->Speed = speed;
	tex->Tile_count_x = xframes;
	tex->Tile_count_y = yframes;
	memset(tex->Anim,2,64);
	if (anim[0]){
		i = anim[0];
		if (i < 64) memcpy(tex->Anim,anim,i+1);
	}
}

//swizzle/unswizzle functions from oslib
void AMG_SwizzleTexture(AMG_Texture *tex){
	if(tex == NULL) return;
	if(tex->Load == M3D_IN_VRAM) return;
	if(tex->Swizzle) return;
	if(!tex->Data)AMG_Error((char*)"Texture Swizzle error",(char*)" ");
	
	OSL_IMAGE *img = NULL;
	OSL_IMAGE *mip = NULL;
	OSL_IMAGE *mip1 = NULL;

	img = oslCreateImage(tex->Width,tex->Height,OSL_IN_RAM,tex->TexFormat);
	memcpy(img->data,tex->Data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	oslSwizzleImage(img);
	memcpy(tex->Data,img->data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	tex->Swizzle = 1;
	sceKernelDcacheWritebackInvalidateRange(tex->Data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	
	if (tex->NMipmaps == 2){
		mip = oslCreateImage(tex->M1_Width,tex->M1_Height,OSL_IN_RAM,tex->TexFormat);
		mip1 = oslCreateImage(tex->M2_Width,tex->M2_Height,OSL_IN_RAM,tex->TexFormat);
		
		memcpy(mip->data,tex->MipData,AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat));
		oslSwizzleImage(mip);
		memcpy(tex->MipData,mip->data,AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat));
		sceKernelDcacheWritebackInvalidateRange(tex->MipData,AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat));
		
		memcpy(mip1->data,tex->MipData1,AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat));
		oslSwizzleImage(mip1);
		memcpy(tex->MipData1,mip1->data,AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat));
		sceKernelDcacheWritebackInvalidateRange(tex->MipData1,AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat));
		
		oslDeleteImage(mip);
		oslDeleteImage(mip1);
	}
	oslDeleteImage(img);
}

// Quita Swizzle a una textura para acceder a los pixeles
// Also textures with mip maps
void AMG_UnswizzleTexture(AMG_Texture *tex){
	if(tex == NULL) return;
	if(tex->Swizzle == 0) return;

	OSL_IMAGE *img = NULL;
	OSL_IMAGE *mip = NULL;
	OSL_IMAGE *mip1 = NULL;

	img = oslCreateImage(tex->Width,tex->Height,OSL_IN_RAM,tex->TexFormat);
	memcpy(img->data,tex->Data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	img->totalSize = AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat);
	oslImageIsSwizzledSet(img, 1);
	oslUnswizzleImage(img);
	tex->Swizzle = 0;
	memcpy(tex->Data,img->data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
	
	if (tex->NMipmaps == 2){
		mip = oslCreateImage(tex->M1_Width,tex->M1_Height,OSL_IN_RAM,tex->TexFormat);
		mip1 = oslCreateImage(tex->M2_Width,tex->M2_Height,OSL_IN_RAM,tex->TexFormat);
		
		memcpy(mip->data,tex->MipData,AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat));
		oslImageIsSwizzledSet(mip, 1);
		oslUnswizzleImage(mip);
		memcpy(tex->MipData,mip->data,AMG_GetVramSize(tex->M1_Width,tex->M1_Height,tex->TexFormat));

		memcpy(mip1->data,tex->MipData1,AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat));
		oslImageIsSwizzledSet(mip, 1);
		oslUnswizzleImage(mip1);
		memcpy(tex->MipData1,mip1->data,AMG_GetVramSize(tex->M2_Width,tex->M2_Height,tex->TexFormat));

		oslDeleteImage(mip);
		oslDeleteImage(mip1);
	}
	oslDeleteImage(img);
}


// Haz una screenshot en formato BMP24
void AMG_Screenshot(const char *path){
	// Obten el framebuffer
	void *fbv; int w, pf;
	u8 *data = (u8*) calloc (AMG.ScreenWidth*AMG.ScreenHeight*4, sizeof(u8));
	sceDisplayWaitVblankStart();
	sceDisplayGetFrameBuf(&fbv, &w, &pf, PSP_DISPLAY_SETBUF_NEXTFRAME);
	u8 *fb = (u8*) fbv;
	
	// Transforma la imagen a RGB32
	if(data == NULL) return;
	u32 x, y;
	u16 *fb16 = (u16*) fb; u16 clr;
	switch(AMG.PSM){
		case GU_PSM_8888:
			for(y=0;y<AMG.ScreenHeight;y++){
				for(x=0;x<AMG.ScreenWidth;x++){
					data[((x+(y*AMG.ScreenWidth))<<2)] = fb[((x+(y*AMG.ScreenStride))<<2)];
					data[((x+(y*AMG.ScreenWidth))<<2)+1] = fb[((x+(y*AMG.ScreenStride))<<2)+1];
					data[((x+(y*AMG.ScreenWidth))<<2)+2] = fb[((x+(y*AMG.ScreenStride))<<2)+2];
					data[((x+(y*AMG.ScreenWidth))<<2)+3] = 0xFF;
				}
			} break;
		case GU_PSM_5551:
			for(y=0;y<AMG.ScreenHeight;y++){
				for(x=0;x<AMG.ScreenWidth;x++){
					clr = fb16[(x+(y*AMG.ScreenStride))];
					data[((x+(y*AMG.ScreenWidth))<<2)] = (clr &0x1F) << 3;
					data[((x+(y*AMG.ScreenWidth))<<2)+1] = ((clr >> 5) &0x1F) << 3;
					data[((x+(y*AMG.ScreenWidth))<<2)+2] = ((clr >> 10) &0x1F) << 3;
					data[((x+(y*AMG.ScreenWidth))<<2)+3] = 0xFF;
				}
			} break;
		case GU_PSM_4444:
			for(y=0;y<AMG.ScreenHeight;y++){
				for(x=0;x<AMG.ScreenWidth;x++){
					clr = fb16[(x+(y*AMG.ScreenStride))];
					data[((x+(y*AMG.ScreenWidth))<<2)] = (clr &0xF) << 4;
					data[((x+(y*AMG.ScreenWidth))<<2)+1] = ((clr >> 4) &0xF) << 4;
					data[((x+(y*AMG.ScreenWidth))<<2)+2] = ((clr >> 8) &0xF) << 4;
					data[((x+(y*AMG.ScreenWidth))<<2)+3] = 0xFF;
				}
			} break;
		case GU_PSM_5650:
			for(y=0;y<AMG.ScreenHeight;y++){
				for(x=0;x<AMG.ScreenWidth;x++){
					clr = fb16[(x+(y*AMG.ScreenStride))];
					data[((x+(y*AMG.ScreenWidth))<<2)] = (clr &0x1F) << 3;
					data[((x+(y*AMG.ScreenWidth))<<2)+1] = ((clr >> 5) &0x3F) << 2;
					data[((x+(y*AMG.ScreenWidth))<<2)+2] = ((clr >> 11) &0x1F) << 3;
					data[((x+(y*AMG.ScreenWidth))<<2)+3] = 0xFF;
				}
			} break;
		default: free(data); data = NULL; return;
	}
	
	// Abre el archivo y guarda la imagen
	//int error = lodepng_encode32_file(path, data, AMG.ScreenWidth, AMG.ScreenHeight);
	//if(error) return;
	free(data); data = NULL;
}

//#endif

// Establece el mapeo de una textura
void AMG_SetTextureMapping(AMG_Texture *tex, u32 mapping, u8 l0, u8 l1){
	// Mapea la textura correspondiente
	if(tex == NULL) return;
	tex->Mapping = mapping;
	tex->MappingLights[0] = l0;
	tex->MappingLights[1] = l1;
}

void M3D_TextureSetMapping(M3D_Texture *t, u32 mapping, u8 l0, u8 l1){
	AMG_Texture *tex = (AMG_Texture *)t; 
	// Mapea la textura correspondiente
	if(tex == NULL) return;
	tex->Mapping = mapping;
	tex->MappingLights[0] = l0;
	tex->MappingLights[1] = l1;
}


// Activa el Render To Texture
void AMG_EnableRenderToTexture(AMG_Texture *tex){
	if(tex == NULL) return;
	if(tex->Swizzle) AMG_UnswizzleTexture(tex);
	if(tex->Load != M3D_IN_VRAM) return;
	if (!skip){
		AMG_Push_Perspective_Matrix(tex->Width,tex->Height,50);
		sceGuDrawBufferList(tex->TexFormat, (void*)((u32)tex->Data), tex->Width);
		sceGuOffset(256 - (tex->Width>>1), 256 - (tex->Height>>1));
		sceGuViewport(256, 256, tex->Width, tex->Height);
		sceGuScissor(0, 0, tex->Width, tex->Height);
		//sceGuClearColor(0x00000000);
		sceGuClear(/*GU_COLOR_BUFFER_BIT |*/ GU_DEPTH_BUFFER_BIT | GU_STENCIL_BUFFER_BIT);
	}	
}

void M3D_RenderToTextureEnable(M3D_Texture *t){
	AMG_Texture *tex = (AMG_Texture*)t;
	if(tex == NULL) return;
	if(tex->Swizzle) AMG_UnswizzleTexture(tex);
	if(tex->Load != M3D_IN_VRAM) return;
	if (!skip){
		AMG_Push_Perspective_Matrix(tex->Width,tex->Height,50);
		sceGuDrawBufferList(tex->TexFormat, (void*)((u32)tex->Data), tex->Width);
		sceGuOffset(256 - (tex->Width>>1), 256 - (tex->Height>>1));
		sceGuViewport(256, 256, tex->Width, tex->Height);
		sceGuScissor(0, 0, tex->Width, tex->Height);
		//sceGuClearColor(0x00000000);
		sceGuClear(/*GU_COLOR_BUFFER_BIT |*/ GU_DEPTH_BUFFER_BIT | GU_STENCIL_BUFFER_BIT);
	}	
}

// Desactiva el Render To Texture
void AMG_DisableRenderToTexture(void){
	if (!skip){
		sceGuScissor(0, 0, AMG.ScreenWidth, AMG.ScreenHeight);
		sceGuDrawBufferList(AMG.PSM, osl_curDrawBuf, AMG.ScreenStride);
		sceGuOffset(2048 - (AMG.ScreenWidth >> 1), 2048 - (AMG.ScreenHeight >> 1));
		sceGuViewport(2048, 2048, AMG.ScreenWidth, AMG.ScreenHeight);
		sceGuClearColor(0x00000000);
		sceGuClear(/*GU_COLOR_BUFFER_BIT |*/ GU_DEPTH_BUFFER_BIT | GU_STENCIL_BUFFER_BIT);
		AMG_Pop_Perspective_Matrix();
	}
}

void M3D_RenderToTextureDisable(void){
	if (!skip){
		sceGuScissor(0, 0, AMG.ScreenWidth, AMG.ScreenHeight);
		sceGuDrawBufferList(AMG.PSM, osl_curDrawBuf, AMG.ScreenStride);
		sceGuOffset(2048 - (AMG.ScreenWidth >> 1), 2048 - (AMG.ScreenHeight >> 1));
		sceGuViewport(2048, 2048, AMG.ScreenWidth, AMG.ScreenHeight);
		sceGuClearColor(0x00000000);
		sceGuClear(/*GU_COLOR_BUFFER_BIT |*/ GU_DEPTH_BUFFER_BIT | GU_STENCIL_BUFFER_BIT);
		AMG_Pop_Perspective_Matrix();
	}
}


void AMG_SetTextureFilter(AMG_Texture *tex, int filter){
	if (filter == 0){
		tex->Filter = GU_NEAREST; 
		tex->MipFilter = GU_NEAREST_MIPMAP_LINEAR;
	}
	if (filter == 1){
		tex->Filter = GU_LINEAR;
		tex->MipFilter = GU_LINEAR_MIPMAP_LINEAR;
	}
}

void M3D_TextureSetFilter(M3D_Texture *t, int filter){
	AMG_Texture *tex = (AMG_Texture *)t; 
	if (filter == 0){
		tex->Filter = GU_NEAREST; 
		tex->MipFilter = GU_NEAREST_MIPMAP_LINEAR;
	}
	if (filter == 1){
		tex->Filter = GU_LINEAR;
		tex->MipFilter = GU_LINEAR_MIPMAP_LINEAR;
	}
}
ScePspSVector2 M3D_TextureGetSize(M3D_Texture *t){
	AMG_Texture *tex = (AMG_Texture *)t;
	ScePspSVector2 v;
	v.x = tex->Width;
	v.y = tex->Height;
	return v;
}

// Cambia el pixel de una textura
void AMG_ChangeTexturePixel(AMG_Texture *tex, u32 x, u32 y, u32 color){
	if(tex == NULL) return;
	if(tex->Swizzle) return;
	if((x >= tex->Width) || (y >= tex->Height)) return;
	u32 offset = (x + (y * tex->Width));
	if(tex->TexFormat == GU_PSM_8888) tex->Data[offset] = color;
	else ((u16*)tex->Data)[offset] = (color &0xFFFF);
}

// Obtén un pixel de una textura
u32 AMG_GetTexturePixel(AMG_Texture *tex, u32 x, u32 y){
	if(tex == NULL) return 0;
	if((tex->Swizzle) || (x >= tex->Width) || (y >= tex->Height)) return 0;
	u32 offset = (x + (y * tex->Width));
	if(tex->TexFormat == GU_PSM_8888) return tex->Data[offset];
	return ((((u16*)tex->Data)[offset]) &0xFFFF);
}


//Draw health bar
void M3D_DrawHealthBar(int x, int y, int health, u32 color, int sizex, int sizey, M3D_Texture *t){
	AMG_Texture *tex = (AMG_Texture*)t;
	//tex->Filter = GU_NEAREST; 
	AMG_Vertex_intTV *data2D = (AMG_Vertex_intTV*) sceGuGetMemory( 2 * sizeof(AMG_Vertex_intTV));
	s16 _x = x; s16 _y = y;
	s16 tw = 1; s16 th = 1;
	if (tex){tw = tex->Width; th = tex->Height;}
	u32 col = 0xFFFFFFFF;
	data2D[0].u = 0;
	data2D[0].v = 0;
	data2D[0].x = _x;
	data2D[0].y = _y;
	data2D[0].z = 0;
	data2D[1].u = health*tw;
	data2D[1].v = th;
	data2D[1].x = _x+(health*sizex);
	data2D[1].y = _y+sizey;
	data2D[1].z = 0;

	//Draw
	if (tex) AMG_EnableTexture(tex);
	else { sceGuDisable(GU_TEXTURE_2D); col = color;}
	
	sceGuColor(col);
	sceGuDrawArray(GU_SPRITES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),2, 0, data2D);

}


//Load tiled TMX map "1.10.1" in CSV format
M3D_MAP *M3D_LoadMapTMX(const char *path, u8 mode, u8 load, u32 psm){
	char tiles_relative_path[64];
	char tiles_full_path[64];
	FILE *f = fopen(path,"r");
	u16 index = 0;
	char line[256];
	char name[64]; //name of the layer in TILED
	int id = 0;
	int dummy = 0;
	int width = 0;
	int height = 0;
	int tilewidth = 0;
	int tileheight = 0;
	int tilecount = 0;
	int i;
	
	if(!f) AMG_Error((char*)"File not found / Archivo no encontrado",path);
	fseek(f, 0, SEEK_SET);
	//read size
	fgets(line,256,f);
	fgets(line,256,f);
	fgets(line,256,f);
	sscanf(line," <tileset firstgid=\"%i\" name=\"%[^\"]\" tilewidth=\"%i\" tileheight=\"%i\" tilecount=\"%i\"",&id,name,&tilewidth,&tileheight,&tilecount);
	fgets(line,256,f);
	sscanf(line,"  <image source=\"%[^\"]\" width=\"%i\" height=\"%i\"/>",tiles_relative_path,&dummy,&dummy);
	fgets(line,256,f);
	fgets(line,256,f);
	sscanf(line," <layer id=\"%i\" name=\"%[^\"]\" width=\"%i\" height=\"%i\">",&id,name,&width,&height);
 	fgets(line,256,f);
	sscanf(line," <data encoding=\"csv\">");
	
	AMG_MAP *m = (AMG_MAP*) calloc(1,sizeof(AMG_MAP));

	m->map = (unsigned short*) calloc (width*height, sizeof(unsigned short));
	//read tile array
	for (index = 0; index < width*height; index++){
		int tile = 0;
		fscanf(f,"%i,",&tile);
		m->map[index] = (unsigned short)(tile-1);
	}

	//skip 5 lines
	/*skip_lines(f,5);
	//read collision array
	for (index = 0; index < LT_map_ntiles-1; index++){
		tile = _sscanf(f,0x2C);
		LT_map_collision[index] = tile -tilecount;
	}*/
	fclose(f);
	
	//Get complete path for tiles
	int t = strlen(path);
	memcpy(tiles_full_path,path,t);
	char *pos = strrchr(tiles_full_path,'/');
	t = strlen(tiles_relative_path);
	memcpy(&pos[1],tiles_relative_path,t);
	pos[t+1] = 0;//end of string
	
	if (psm < 6) ;// 5650=0;5551=1;4444=2;8888=3;T4=4;T8=5
	else psm = GU_PSM_4444;
	
	//Does not allow tile animation
	if (mode == 1) m->tiles = oslLoadImageFilePNG((char*)tiles_full_path, load | OSL_SWIZZLED, psm);
	//To easily animate tiles
	if (mode == 0) m->tiles = oslLoadImageFilePNG((char*)tiles_full_path, load | OSL_UNSWIZZLED, psm);
	
	//Only a few programs export alpha in indexed images, do not use alpha here.
	//Instead, if this finds a pure BLUE color 0xFFFF0000 (ABGR), that will be fully transparent.
	if (psm == GU_PSM_T4 || psm == GU_PSM_T8){//palette from 8 bit images
		int colors = m->tiles->palette->nElements;
		for (i = 0; i < colors; i++){
			if (((u32*)m->tiles->palette->data)[i] == 0xFFFF0000)
				((u32*)m->tiles->palette->data)[i] = 0;
		}
		if (load == OSL_IN_VRAM){
			OSL_PALETTE *pal = oslCreatePaletteEx(colors,OSL_IN_VRAM,GU_PSM_8888);
			memcpy(pal->data,m->tiles->palette->data,colors*4);
			free(m->tiles->palette->data); free(m->tiles->palette);
			m->tiles->palette = pal;
		}
	}
	osl_colorKeyEnabled = 0;
	if(m->tiles==NULL) AMG_Error((char*)"File not found / Archivo no encontrado",tiles_full_path);
	m->omap = oslCreateMap(m->tiles,m->map,tilewidth,tileheight,width,height,OSL_MF_U16);
	return (M3D_MAP*)m;
}

void M3D_MapSetScroll(M3D_MAP *map, int x, int y){
	AMG_MAP *m = (AMG_MAP*)map;
	if(m==NULL) return;
	m->omap->scrollX = x;
	m->omap->scrollY = y;
}

void M3D_MapAnimateTiles(M3D_MAP *m, int slot, int tile, int start_tile, u8 anim_size, float speed){
	AMG_MAP *map = (AMG_MAP*)m;
	if(map==NULL) return;
	int psm = map->omap->img->pixelFormat;
	u8 *data = (u8*)map->omap->img->data;
	u8 *src;
	u8 *dst;
	int twidth = map->omap->tileX;
	int theight = map->omap->tileY;
	int iwidth = map->omap->img->sizeX;
	int tilesY = map->omap->img->sizeX/twidth;
	int i;
	int tile_new = 0;

	//animate
	int frame = (int) AMG_MAP_Anim_Slot[slot];
	if (frame == anim_size) AMG_MAP_Anim_Slot[slot] = 0;
	if (frame <          0) AMG_MAP_Anim_Slot[slot] = anim_size;
	tile_new = start_tile + (int)AMG_MAP_Anim_Slot[slot];
	AMG_MAP_Anim_Slot[slot]+=speed;
	
	//Calculate offsets
	switch(psm){
		case OSL_PF_4BIT: twidth >>= 1; iwidth >>= 1; break;
		case OSL_PF_8BIT:               break;
		case OSL_PF_5650:
		case OSL_PF_5551:
		case OSL_PF_4444: twidth <<= 1; iwidth <<= 1; break;
		case OSL_PF_8888: twidth <<= 2; iwidth <<= 2; break;
		default: return;
	}
	
	//Source
	int spx = (tile_new*twidth)%iwidth;
	int spy = (tile_new/tilesY)*iwidth*theight;
	src = &data[spy+spx];
	//Destination
	int dpx = (tile*twidth)%iwidth;
	int dpy = (tile/tilesY)*iwidth*theight;
	dst = &data[dpy+dpx];
	//PSP has no VRAM to VRAM copy, so...
	//oslLockImage(map->img);
	for (i = 0; i<theight;i++){
		memcpy(&dst[i*iwidth],&src[i*iwidth],twidth);
	}
	//oslUnlockImage(map->img);
}

void M3D_DrawMap(M3D_MAP *map){
	AMG_MAP *m = (AMG_MAP*)map;
	if(m==NULL) return;
	oslDrawMapSimple(m->omap);
}

void M3D_MapUnload(M3D_MAP *map){
	AMG_MAP *m = (AMG_MAP*)map;
	if(m==NULL) return;
	free(m->omap->map); m->omap->map = NULL;
	//if (m->omap->img->location == OSL_IN_RAM){}
	oslDeleteImage(m->omap->img);
	oslDeleteMap(m->omap);
	free(m); m = NULL;
}


extern u32 AMG_Font1_PAL[];
extern u32 AMG_Font2_PAL[];
extern unsigned char AMG_Font1_Data[];
extern unsigned char AMG_Font2_Data[];

void AMG_InitFont(){
	if(!AMG_Font1) AMG_Font1 = AMG_CreateTexture(128,128,GU_PSM_T4,AMG_TEX_RAM);
	if(!AMG_Font2) AMG_Font2 = AMG_CreateTexture(256,256,GU_PSM_T4,AMG_TEX_RAM);
	//(Re)Populate font data
	memcpy(AMG_Font1->Data,AMG_Font1_Data,8192);
	memcpy(AMG_Font1->clut,AMG_Font1_PAL,16*(sizeof(u32)));
	memcpy(AMG_Font2->Data,AMG_Font2_Data,32768);
	memcpy(AMG_Font2->clut,AMG_Font2_PAL,16*(sizeof(u32)));
	//Raw data is unswizzled
	AMG_Font1->Swizzle = 0;
	AMG_Font2->Swizzle = 0;
	AMG_SwizzleTexture(AMG_Font1);
	AMG_SwizzleTexture(AMG_Font2);
	//Create VRAM pointers (if they don't exist)
	AMG_TransferTextureVram(AMG_Font1);
	AMG_TransferTextureVram(AMG_Font2);
}

M3D_Texture *M3D_GetFont(int n){
	if (n == 0) return (M3D_Texture*)AMG_Font1;
	if (n == 1) return (M3D_Texture*)AMG_Font2;
	return 0;
}

void AMG_LoadFont(int slot, char *path, u8 load, u32 psm){
	if (slot == 1){
		AMG_UnloadTexture(AMG_Font1);
		AMG_Font1 = AMG_LoadTexture(path,AMG_TEX_RAM,psm);
		AMG_SwizzleTexture(AMG_Font1);
		if (load == M3D_IN_VRAM) AMG_TransferTextureVram(AMG_Font1);
	}
	if (slot == 2){
		AMG_UnloadTexture(AMG_Font2);
		AMG_Font2 = AMG_LoadTexture(path,AMG_TEX_RAM,psm);
		AMG_SwizzleTexture(AMG_Font2);
		if (load == M3D_IN_VRAM) AMG_TransferTextureVram(AMG_Font2);
	}
}

//Default Fonts (8x8 and 16x16)
u32 AMG_Font1_PAL[16] = {
	0x00000000,0xff000000,0xff532b1d,0xff53257e,
	0xff4d00ff,0xff4f575f,0xff3652ab,0xff518700,
	0xffffad29,0xffa877ff,0xff36e400,0xff00a3ff,
	0xffc7c3c2,0xffaaccff,0xff27ecff,0xffe8f1ff
};

u32 AMG_Font2_PAL[16] = {
	0x00000000,0xff000000,0xff7d7d7d,0xff878787,
	0xff919191,0xff9b9b9b,0xffa5a5a5,0xffafafaf,
	0xffb9b9b9,0xffc3c3c3,0xffcdcdcd,0xffd7d7d7,
	0xffe1e1e1,0xffebebeb,0xfff5f5f5,0xffffffff
};

//FONT DATA (4BIT / 16 COLORS)
unsigned char AMG_Font1_Data[8192] = {
	0x00, 0x00, 0x00, 0x00, 0xEE, 0x06, 0xE6, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x77, 0x07, 0x00,
	0x00, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x90, 0x99, 0x00, 0x00, 0xF0, 0x8F, 0x00, 0x00, 0xFF, 0xFF, 0x0F,
	0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x6E, 0x6E, 0x0E,
	0x64, 0x40, 0x60, 0x04, 0x30, 0x03, 0x33, 0x00, 0x00, 0x82, 0x02, 0x00,
	0x00, 0xA7, 0x07, 0x00, 0x00, 0xDB, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFC, 0xFF, 0xFF, 0xCF, 0x00, 0xF0, 0x0F, 0x00, 0xFF, 0x0F, 0xF0, 0xFF,
	0x00, 0x00, 0xDD, 0x0D, 0x00, 0x09, 0x00, 0x09, 0x00, 0x80, 0x00, 0x00,
	0x00, 0x0F, 0x00, 0x08, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE0, 0xDD, 0xED, 0x00, 0x40, 0x46, 0x46, 0x00, 0xF3, 0x34, 0x44, 0x03,
	0x20, 0x8F, 0x28, 0x00, 0x77, 0x70, 0x70, 0x07, 0xB0, 0xDD, 0xBD, 0x00,
	0x00, 0x90, 0x09, 0x00, 0xFC, 0x0C, 0xC0, 0xCF, 0x00, 0x0F, 0xF0, 0x00,
	0xFF, 0xC0, 0x0C, 0xFF, 0x00, 0x00, 0xD0, 0x0D, 0x00, 0x09, 0x00, 0x09,
	0x00, 0x80, 0x00, 0x00, 0x00, 0x8F, 0x88, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF2, 0xDA, 0xFA, 0x02, 0x64, 0x64, 0x64, 0x04,
	0x43, 0x44, 0x44, 0x03, 0x82, 0x88, 0x88, 0x02, 0xA7, 0x77, 0xA7, 0x07,
	0xB0, 0xDD, 0xBD, 0x00, 0x00, 0x49, 0x94, 0x00, 0xFC, 0x00, 0x00, 0xCF,
	0xF0, 0x00, 0x00, 0x0F, 0x0F, 0xFC, 0xCF, 0xF0, 0x00, 0x00, 0x0D, 0x0D,
	0x00, 0x09, 0x00, 0x09, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x0F,
	0xFF, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xD6, 0xD7, 0xD7, 0x06,
	0xF4, 0x58, 0xF8, 0x04, 0x30, 0x44, 0x34, 0x00, 0x20, 0x88, 0x28, 0x00,
	0x77, 0x70, 0x70, 0x07, 0xB0, 0xDB, 0xBB, 0x00, 0x00, 0x49, 0x94, 0x00,
	0xFC, 0x00, 0x00, 0xCF, 0xF0, 0x00, 0x00, 0x0F, 0x0F, 0xFC, 0xCF, 0xF0,
	0xD0, 0xDD, 0x00, 0x00, 0x00, 0x90, 0x99, 0x00, 0x00, 0x80, 0x00, 0x00,
	0x00, 0x0F, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x6E, 0xDD, 0x6D, 0x0E, 0xD6, 0xD2, 0xD2, 0x06, 0x00, 0x43, 0x03, 0x00,
	0x00, 0x82, 0x02, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x00,
	0x00, 0x90, 0x09, 0x00, 0xFC, 0x0C, 0xC0, 0xCF, 0x00, 0x0F, 0xF0, 0x00,
	0xFF, 0xC0, 0x0C, 0xFF, 0x0D, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00,
	0x00, 0x80, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x0F, 0xF0, 0xF0, 0xF0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xE0, 0x06, 0xE6, 0x00, 0x60, 0xDD, 0x6D, 0x00,
	0x00, 0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x77, 0x07, 0x00,
	0x00, 0xBB, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xCF,
	0x00, 0xF0, 0x0F, 0x00, 0xFF, 0x0F, 0xF0, 0xFF, 0x0D, 0xD0, 0x00, 0x00,
	0x00, 0x99, 0x99, 0x09, 0xF0, 0x8F, 0x00, 0x00, 0xFF, 0x08, 0xFF, 0x08,
	0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
	0xD0, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x80, 0x88, 0x00, 0x00,
	0x88, 0x08, 0x88, 0x08, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x55, 0x00, 0x50, 0x05, 0x00, 0x00, 0x0F, 0x0F, 0x00,
	0x00, 0xFF, 0xFF, 0x0F, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x55, 0x55, 0x55, 0x55,
	0xF5, 0x55, 0x00, 0x00, 0x00, 0x00, 0x55, 0x5F, 0x00, 0xF5, 0x5F, 0x00,
	0x00, 0x0F, 0x0F, 0x00, 0xF0, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x50, 0x05, 0x00,
	0xF5, 0xFF, 0xFF, 0x5F, 0xF5, 0xFF, 0x55, 0x00, 0x00, 0x55, 0xFF, 0x5F,
	0x50, 0xFF, 0xFF, 0x05, 0x00, 0x0F, 0x0F, 0x00, 0xF0, 0xFF, 0xF0, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x0F,
	0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0xF0, 0x0F,
	0x00, 0xF5, 0x5F, 0x00, 0x50, 0xFF, 0xFF, 0x05, 0xF5, 0xFF, 0xFF, 0x55,
	0x55, 0xFF, 0xFF, 0x5F, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x0F, 0x0F, 0x00,
	0x00, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF5, 0x5F, 0x00, 0x50, 0xFF, 0xFF, 0x05,
	0xF5, 0xFF, 0xFF, 0x55, 0x55, 0xFF, 0xFF, 0x5F, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00,
	0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xF0, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0xFF, 0xFF, 0x05,
	0x00, 0xF5, 0x5F, 0x00, 0xF5, 0xFF, 0x55, 0x00, 0x00, 0x55, 0xFF, 0x5F,
	0x50, 0xFF, 0xFF, 0x05, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0xF0, 0xF0, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0xF0, 0xFF, 0x5F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xF0, 0x0F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0xF0, 0x0F,
	0xF0, 0x0F, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F,
	0x50, 0xFF, 0xFF, 0x05, 0x00, 0xF5, 0x5F, 0x00, 0xF5, 0x55, 0x00, 0x00,
	0x00, 0x00, 0x55, 0x5F, 0x00, 0xF5, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00, 0xF0, 0x55, 0x55, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0xF0, 0x00, 0xF5, 0xFF, 0xFF, 0x5F, 0x00, 0x50, 0x05, 0x00,
	0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x50, 0x05, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55,
	0x00, 0x50, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xFF, 0xF5, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xF0, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x05, 0xF0, 0x5F, 0xF0, 0x5F,
	0xFF, 0xFF, 0xFF, 0x0F, 0xF0, 0x5F, 0x55, 0x55, 0xF0, 0x5F, 0xFF, 0x55,
	0xF0, 0xFF, 0xF5, 0x0F, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0xFF, 0x55, 0x05,
	0x00, 0xF5, 0x0F, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x5F, 0x05,
	0x00, 0x55, 0x00, 0x55, 0xF0, 0x5F, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xF5, 0x5F, 0x05, 0xFF, 0xF5, 0xFF, 0x55, 0x00, 0xFF, 0x55, 0x00,
	0xF0, 0x5F, 0x05, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xEB, 0x0B, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x55, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0F,
	0x00, 0x50, 0xF5, 0x0F, 0x00, 0xFF, 0xF5, 0x0F, 0xFF, 0x55, 0xFF, 0x05,
	0x00, 0x50, 0x05, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x05,
	0xEE, 0xFE, 0xEE, 0x0E, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x5F, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x5F, 0xFF, 0x55, 0xF0, 0xFF, 0xFF, 0x55, 0xF0, 0x5F, 0xF5, 0x5F,
	0xF0, 0xFF, 0xF5, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
	0x00, 0xF0, 0x5F, 0x05, 0x60, 0xEE, 0x6E, 0x00, 0x00, 0xF5, 0x5F, 0x55,
	0x00, 0xF0, 0x0F, 0x00, 0x50, 0x55, 0x55, 0x55, 0x00, 0xF0, 0x0F, 0x00,
	0xF0, 0xFF, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x50, 0x05, 0x00, 0xF5, 0x5F, 0x05,
	0x00, 0x55, 0x00, 0x55, 0x00, 0x55, 0x05, 0x55, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x50, 0xFF, 0x00, 0xF0, 0x5F, 0x55, 0x00, 0xB0, 0xBE, 0xBE, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x55, 0x00, 0x00,
	0xE0, 0x06, 0xE6, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0xFF, 0x55, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x55, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xF0, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x55, 0xF5, 0x0F,
	0x00, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0xF5, 0x0F, 0x00, 0x55, 0xFF, 0x55,
	0x00, 0xF0, 0x5F, 0x55, 0xF0, 0x5F, 0x55, 0x55, 0x00, 0xFF, 0x55, 0x05,
	0x00, 0x55, 0xF5, 0x5F, 0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xF5, 0x0F,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x55,
	0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xF5, 0x0F, 0x00, 0xF0, 0x5F, 0xF5, 0x0F,
	0xFF, 0xF5, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0x55, 0xF5, 0x5F,
	0x00, 0xF0, 0x5F, 0x05, 0x00, 0xFF, 0xF5, 0x0F, 0xF0, 0xFF, 0xFF, 0x00,
	0xF0, 0x5F, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0x55,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00,
	0xF0, 0x5F, 0x55, 0x00, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0xF5, 0x0F,
	0x00, 0x55, 0xF0, 0x5F, 0xFF, 0xF5, 0xF5, 0x5F, 0x00, 0xF0, 0x5F, 0x00,
	0x00, 0xF0, 0x5F, 0x55, 0x00, 0x00, 0xF5, 0x0F, 0xF0, 0x5F, 0xF5, 0x5F,
	0x00, 0x55, 0xF5, 0x0F, 0xF0, 0x5F, 0xF0, 0x0F, 0x00, 0xFF, 0xFF, 0x05,
	0xF0, 0x5F, 0xF5, 0x0F, 0x00, 0xFF, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF5, 0x0F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xF0, 0x5F, 0x55, 0x00, 0xF0, 0x5F, 0x55, 0xFF, 0x05, 0xF5, 0x5F,
	0x00, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x55, 0x00, 0xF0, 0x0F, 0xF0, 0x5F,
	0xF0, 0xFF, 0xFF, 0x5F, 0xF0, 0x0F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0x00, 0xFF, 0x55, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0x50, 0xFF, 0x55,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0xF5, 0x0F,
	0x00, 0x55, 0x55, 0x55, 0xF0, 0x5F, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00,
	0xF0, 0xFF, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xFF, 0xFF, 0x55, 0x00, 0x55, 0xF5, 0x5F, 0x00, 0xFF, 0xFF, 0x55,
	0x00, 0xFF, 0xFF, 0x55, 0xF0, 0x5F, 0x05, 0x00, 0x00, 0xFF, 0xFF, 0x55,
	0x00, 0xFF, 0x5F, 0x05, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x55, 0x00,
	0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x55, 0x55, 0x05, 0x00, 0x50, 0x55, 0x05,
	0x00, 0x55, 0x55, 0x55, 0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x00, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x05, 0x00, 0x55, 0x00, 0x00,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00,
	0x00, 0x5F, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0xF0, 0xFF, 0x0F, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x0F, 0xF0, 0x0F,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0xFF, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F,
	0xF0, 0x0F, 0x00, 0x00, 0xFF, 0x00, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x50, 0xF5, 0x00, 0x00, 0xF0, 0xF5, 0x5F,
	0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0x55, 0x55, 0xF0, 0x5F, 0xFF, 0x00,
	0xF0, 0x5F, 0x55, 0x55, 0xF0, 0x5F, 0x55, 0x55, 0xF0, 0x5F, 0x55, 0x05,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x05, 0x00, 0x00, 0xF5, 0x5F,
	0xF0, 0x5F, 0xFF, 0x55, 0xF0, 0x5F, 0x00, 0x00, 0xFF, 0x0F, 0xFF, 0x5F,
	0xF0, 0xFF, 0xF0, 0x5F, 0xF0, 0x5F, 0xF5, 0x0F, 0x0F, 0xF5, 0x0F, 0x0F,
	0x00, 0xFF, 0xF5, 0x5F, 0xF0, 0x5F, 0xFF, 0x55, 0xF0, 0x5F, 0x00, 0x00,
	0xF0, 0x5F, 0xF0, 0x0F, 0xF0, 0x5F, 0xFF, 0x00, 0xF0, 0x5F, 0xFF, 0x00,
	0xF0, 0x5F, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x5F, 0x00, 0xF0, 0x5F, 0x00,
	0x00, 0x00, 0xF0, 0x5F, 0xF0, 0xFF, 0x5F, 0x05, 0xF0, 0x5F, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0x5F, 0xF0, 0xFF, 0xFF, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0x5F, 0x0F, 0x5F, 0x5F, 0x00, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xF0, 0x0F,
	0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x50, 0x05,
	0xF0, 0x5F, 0x50, 0x05, 0xF0, 0x5F, 0xFF, 0x0F, 0xF0, 0x5F, 0xF5, 0x5F,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0xFF, 0x5F, 0x00,
	0xF0, 0x5F, 0x00, 0x00, 0xFF, 0xF5, 0xF5, 0x5F, 0xF0, 0x5F, 0xFF, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0x5F, 0xFF, 0xFF, 0x55, 0xF0, 0xFF, 0xFF, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xFF, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x00, 0xF0, 0x0F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xFF, 0x00, 0xF0, 0x5F, 0x00, 0x0F, 0xFF, 0x05, 0xF5, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x50, 0x55, 0x05,
	0xF0, 0x55, 0xF0, 0x5F, 0x00, 0xF5, 0xFF, 0x55, 0x00, 0xF0, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0x0F, 0xF0, 0x5F, 0x00, 0x00,
	0x00, 0xFF, 0xFF, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x55, 0xF0, 0x5F, 0xF0, 0x0F, 0xF0, 0xFF, 0xFF, 0x5F,
	0xFF, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0x55,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0x05, 0x00, 0x55, 0x00, 0x00, 0x55, 0x05,
	0x00, 0x00, 0x55, 0x55, 0x00, 0x55, 0x55, 0x05, 0x00, 0x50, 0x55, 0x55,
	0x00, 0x55, 0x00, 0x00, 0x00, 0x50, 0x55, 0x55, 0x00, 0x55, 0x00, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x05, 0x00, 0x55, 0x00, 0x55,
	0x00, 0x55, 0x55, 0x55, 0x50, 0x05, 0x00, 0x55, 0x00, 0x55, 0x00, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xFF, 0x0F,
	0xFF, 0x00, 0xFF, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x0F, 0x00, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x5F, 0xF5, 0x0F, 0xF0, 0x5F, 0xF5, 0x0F, 0xF0, 0x5F, 0xF5, 0x0F,
	0xF0, 0x5F, 0x55, 0x55, 0x00, 0x55, 0x55, 0x55, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xFF, 0x05, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0x55,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x55, 0xFF, 0x55, 0x00, 0xFF, 0x55, 0x05,
	0xF0, 0xFF, 0x00, 0x00, 0x00, 0x50, 0xFF, 0x05, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xFF, 0x55, 0xFF, 0x05, 0xF0, 0x5F,
	0x00, 0xF0, 0x5F, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xF5, 0x5F, 0x05,
	0x00, 0xFF, 0x05, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0x05,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x5F, 0xFF, 0x55,
	0x00, 0xFF, 0xFF, 0x55, 0xF0, 0xFF, 0x0F, 0x55, 0x00, 0xFF, 0xFF, 0x0F,
	0x00, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0xFF, 0x5F, 0x05,
	0xFF, 0xF5, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0xFF, 0xFF, 0x55,
	0x00, 0xFF, 0x55, 0x00, 0x00, 0xFF, 0x05, 0x00, 0x00, 0xF0, 0xFF, 0x00,
	0x00, 0x00, 0xFF, 0x05, 0xF0, 0x5F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x5F, 0x50, 0x05, 0x00, 0xF0, 0x5F, 0x05, 0xF0, 0x5F, 0xFF, 0x00,
	0x00, 0x50, 0xF5, 0x5F, 0x00, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0xFF, 0x5F,
	0xF0, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xF0, 0x5F, 0x05, 0xF0, 0x5F, 0x05, 0x0F, 0x00, 0xFF, 0x05, 0x00,
	0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x05, 0xFF, 0x55, 0xF0, 0x0F,
	0x00, 0x00, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0xF0, 0x5F, 0xF0, 0x0F, 0xF0, 0xFF, 0xFF, 0x55, 0x00, 0xF0, 0x5F, 0x00,
	0x00, 0xFF, 0xF0, 0x5F, 0xF0, 0x5F, 0x05, 0x00, 0xF0, 0x5F, 0xFF, 0x5F,
	0xF0, 0x5F, 0xF5, 0x0F, 0x00, 0xF0, 0x5F, 0x00, 0xF0, 0xFF, 0xFF, 0x5F,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0x05,
	0x50, 0x05, 0x00, 0x55, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x55, 0x00, 0x00,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x55, 0x00, 0x55, 0x00, 0x55, 0x55, 0x05,
	0x00, 0x00, 0x55, 0x00, 0x00, 0x50, 0x05, 0x55, 0x00, 0x55, 0x00, 0x00,
	0x00, 0x55, 0x50, 0x55, 0x00, 0x55, 0x00, 0x55, 0x00, 0x00, 0x55, 0x00,
	0x00, 0x55, 0x55, 0x55, 0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x00, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0x00,
	0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x05,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x5F, 0x55,
	0x00, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x55, 0x00,
	0x00, 0x00, 0x50, 0x05, 0xF0, 0x5F, 0xF0, 0x0F, 0x00, 0xF0, 0x5F, 0x00,
	0xFF, 0x0F, 0xFF, 0x00, 0xF0, 0x0F, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0x00, 0xFF, 0x05, 0x00, 0x50, 0xF5, 0x0F, 0xF0, 0x5F, 0xF0, 0x0F,
	0xF0, 0x5F, 0x55, 0x05, 0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xF5, 0x0F,
	0x00, 0xFF, 0xFF, 0x0F, 0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xF5, 0x0F,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0xF0, 0x5F, 0xFF, 0x55,
	0x00, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0xF0, 0x0F,
	0xF0, 0x5F, 0xF5, 0x0F, 0x00, 0x00, 0xF0, 0x05, 0x00, 0xFF, 0xFF, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0xFF, 0xFF, 0x5F, 0x00, 0xF0, 0x5F, 0x55, 0x00, 0xFF, 0xFF, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0xFF, 0x05,
	0xF0, 0xFF, 0x5F, 0x05, 0x00, 0xF0, 0x5F, 0x00, 0xFF, 0xF5, 0xF5, 0x5F,
	0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x05,
	0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xFF, 0x55, 0xF0, 0x5F, 0x00, 0x00,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x55, 0x55, 0x00, 0xF0, 0x5F, 0x00,
	0x00, 0x50, 0xF5, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x00,
	0x00, 0x00, 0xFF, 0x05, 0xF0, 0x5F, 0xFF, 0x00, 0x00, 0xF0, 0x5F, 0x00,
	0xFF, 0x05, 0xF5, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x5F, 0xF0, 0xFF, 0x5F, 0x05,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0xFF, 0xFF, 0x55, 0xF0, 0x5F, 0xF0, 0x5F,
	0x00, 0xF0, 0x5F, 0x00, 0xF0, 0xFF, 0x5F, 0x05, 0xF0, 0x5F, 0xF0, 0x0F,
	0x00, 0xF0, 0xFF, 0x00, 0xFF, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0x00, 0xFF, 0xFF, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x55, 0x55,
	0x00, 0x55, 0x55, 0x00, 0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x55, 0x00, 0x00, 0x50, 0x55, 0x05,
	0x00, 0x55, 0x00, 0x55, 0x00, 0x00, 0x55, 0x00, 0x00, 0x55, 0x55, 0x00,
	0x00, 0x55, 0x00, 0x55, 0x00, 0x00, 0x55, 0x05, 0x50, 0x05, 0x00, 0x55,
	0x00, 0x55, 0x00, 0x55, 0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x00,
	0xF0, 0x0F, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xFF, 0x00, 0xF0, 0x0F,
	0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xF0, 0x5F, 0x05, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0xF0, 0xFF, 0x00, 0x00, 0xF0, 0x55, 0xF5, 0x00, 0xF0, 0x5F, 0xF5, 0x0F,
	0xFF, 0x55, 0xFF, 0x05, 0xF0, 0xFF, 0xF5, 0x0F, 0xF0, 0x5F, 0x55, 0x05,
	0x00, 0xFF, 0x55, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xFF, 0x55,
	0xFF, 0x05, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0x55, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x55, 0xFF, 0x55, 0x00, 0xFF, 0x5F, 0x00, 0x00, 0x00, 0x5F, 0x00,
	0x00, 0xF0, 0xFF, 0x00, 0xFF, 0xF5, 0x0F, 0xFF, 0x5F, 0xFF, 0x5F, 0x0F,
	0xF0, 0xFF, 0xFF, 0x55, 0xF0, 0xFF, 0xFF, 0x05, 0xF0, 0x5F, 0x55, 0x55,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x05, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0xFF, 0x5F, 0x05, 0xFF, 0xF5, 0xF0, 0x5F, 0x00, 0xF0, 0x5F, 0x05,
	0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xF5, 0x5F, 0x05, 0x00, 0xFF, 0x5F, 0x00,
	0x00, 0x00, 0x50, 0x00, 0x00, 0xF0, 0xFF, 0x05, 0x50, 0x05, 0xFF, 0x5F,
	0x5F, 0x5F, 0x55, 0x0F, 0xF0, 0x5F, 0x55, 0x05, 0x00, 0x55, 0xFF, 0x05,
	0xF0, 0x5F, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0xFF, 0x05, 0x00,
	0xF0, 0x5F, 0xFF, 0x5F, 0xF0, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0xFF, 0x5F,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0x50, 0xF5, 0x5F, 0x00, 0xFF, 0x55, 0x0F,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x5F, 0x05,
	0x00, 0x00, 0x50, 0x55, 0x5F, 0xFF, 0x5F, 0x0F, 0xF0, 0x5F, 0x00, 0x00,
	0x00, 0xF0, 0xFF, 0x0F, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0xFF, 0x5F, 0x05,
	0x00, 0xF0, 0xFF, 0x00, 0x00, 0xFF, 0xF5, 0x5F, 0xF0, 0x5F, 0x05, 0x00,
	0xF0, 0x5F, 0xFF, 0x5F, 0xF0, 0x5F, 0xF5, 0x0F, 0x00, 0xFF, 0xFF, 0x55,
	0xF0, 0xFF, 0xFF, 0x5F, 0x00, 0x50, 0xFF, 0x05, 0x00, 0x00, 0x5F, 0x00,
	0x00, 0xFF, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x55, 0xF5, 0x00,
	0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x55, 0x00, 0x00,
	0x00, 0x55, 0x55, 0x00, 0x00, 0x00, 0x55, 0x05, 0x00, 0x50, 0x05, 0x55,
	0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x50, 0x55, 0x00, 0x55, 0x00, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x50, 0x05,
	0x00, 0x00, 0x50, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00,
	0x00, 0x0F, 0xF0, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x0F,
	0x00, 0x50, 0x00, 0x05, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x0F, 0x0F, 0x00,
	0x00, 0x50, 0x00, 0x05, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x50, 0x00, 0x05,
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0F, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0xFF, 0x0F, 0x00, 0xF0, 0xF0, 0x00,
	0xF0, 0x5F, 0x55, 0x55, 0xF0, 0x0F, 0xF0, 0x0F, 0x00, 0xFF, 0xFF, 0x55,
	0xF0, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x50, 0xFF, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x05, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0xF0, 0xF5, 0x5F,
	0x00, 0xF0, 0xFF, 0x0F, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF5, 0x0F, 0x00, 0x55, 0xFF, 0x00, 0x00, 0x50, 0xF5, 0x0F,
	0x00, 0x50, 0xF5, 0x0F, 0x00, 0x50, 0xF5, 0x0F, 0xF0, 0x5F, 0x55, 0x05,
	0xF0, 0x5F, 0xF5, 0x0F, 0xF0, 0x5F, 0xF5, 0x0F, 0xF0, 0x5F, 0xF5, 0x0F,
	0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0xFF, 0xF5, 0x5F, 0x00, 0xFF, 0xF5, 0x5F, 0xF0, 0x5F, 0xF0, 0x00,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0xFF, 0x05,
	0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x5F,
	0xF0, 0x5F, 0x5F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0x5F, 0xF5, 0x5F, 0x00, 0x5F, 0xF5, 0x5F,
	0xF0, 0x5F, 0xF0, 0x05, 0xF0, 0x5F, 0xFF, 0x5F, 0xF0, 0x5F, 0x55, 0x05,
	0xFF, 0x55, 0xFF, 0x05, 0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xF5, 0x5F,
	0xF0, 0x5F, 0xF5, 0x5F, 0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x5F, 0x55, 0x05,
	0xF0, 0x5F, 0x55, 0x05, 0xF0, 0x5F, 0x55, 0x05, 0x00, 0xF0, 0x5F, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0xF0, 0xFF, 0xFF, 0x5F,
	0xF0, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xF0, 0x5F,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x05, 0x00, 0xFF, 0xFF, 0x5F,
	0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x5F, 0x00, 0x50, 0x5F, 0x05,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x5F, 0x00,
	0xF0, 0x55, 0xF0, 0x5F, 0xF0, 0x55, 0xF0, 0x5F, 0x00, 0x00, 0xF0, 0x05,
	0x00, 0x50, 0x05, 0x55, 0x00, 0x50, 0x55, 0x05, 0x00, 0x55, 0x55, 0x05,
	0x00, 0x50, 0x55, 0x55, 0x00, 0x50, 0x55, 0x55, 0x00, 0x50, 0x55, 0x55,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x05,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00,
	0x00, 0x00, 0x55, 0x00, 0x00, 0x05, 0x00, 0x55, 0x00, 0x05, 0x00, 0x55,
	0x00, 0x00, 0xC0, 0xCC, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00,
	0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xFF, 0xFF, 0xFF, 0x00,
	0x00, 0x00, 0x0F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00,
	0x0F, 0xF5, 0x55, 0x55, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x50, 0x00, 0x05,
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00,
	0x00, 0x50, 0x00, 0x05, 0x00, 0xFF, 0xFF, 0x05, 0xF0, 0x0F, 0xF0, 0x0F,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0x0F, 0x00,
	0x0F, 0x00, 0x00, 0x0F, 0x00, 0xF0, 0xF0, 0x00, 0xF0, 0x5F, 0x55, 0x55,
	0xF0, 0xFF, 0xFF, 0x00, 0x5F, 0xF0, 0x05, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0x0F, 0x00, 0xF0, 0x0F, 0xF0, 0x0F,
	0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x5F, 0xF5, 0x0F,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0xF0, 0x5F, 0xFF, 0x00, 0x0F, 0xF5, 0x55, 0x0F, 0xFF, 0xFF, 0xFF, 0x00,
	0xF0, 0x5F, 0xF5, 0x0F, 0xF0, 0x5F, 0xF5, 0x0F, 0xFF, 0x55, 0xFF, 0x00,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0xF0, 0x00, 0x00,
	0xF0, 0xFF, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x0F, 0x0F, 0x00, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0xF0, 0x5F, 0x50, 0x05, 0x5F, 0xF0, 0xFF, 0x5F,
	0x5F, 0xF5, 0x55, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x0F,
	0xFF, 0x05, 0xFF, 0x05, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0x00, 0xFF, 0xFF, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x0F, 0xFF, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x5F, 0x00, 0x00,
	0x5F, 0xF0, 0x55, 0x55, 0x5F, 0xF0, 0x05, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x0F, 0xFF, 0x05, 0xFF, 0x05, 0xF0, 0x5F, 0xFF, 0x5F,
	0xF0, 0x5F, 0xFF, 0x5F, 0x00, 0x50, 0xF5, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xFF, 0x5F, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0xF0, 0xFF, 0xFF, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0xFF, 0xFF, 0x0F, 0xF0, 0x0F, 0xFF, 0x0F, 0x5F, 0xF0, 0xFF, 0x0F,
	0x00, 0xFF, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0x05, 0xF0, 0xFF, 0x5F, 0x05,
	0x00, 0xFF, 0xF5, 0x5F, 0x00, 0xFF, 0xF5, 0x5F, 0x00, 0xFF, 0xFF, 0x55,
	0x00, 0xFF, 0xFF, 0x55, 0x00, 0xFF, 0xF5, 0x5F, 0x00, 0xF0, 0x00, 0x00,
	0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x0F, 0x00,
	0xF0, 0xF0, 0x00, 0x00, 0x00, 0x50, 0x55, 0x55, 0x00, 0x55, 0x50, 0x55,
	0x50, 0x00, 0x55, 0x55, 0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x05,
	0x00, 0x55, 0x55, 0x00, 0x00, 0x50, 0x05, 0x55, 0x00, 0x50, 0x05, 0x55,
	0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x55, 0x05, 0x00, 0x50, 0x05, 0x55,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0xF0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFF,
	0x00, 0x00, 0xF0, 0x05, 0x00, 0x50, 0x55, 0x05, 0xF0, 0x5F, 0xF5, 0x0F,
	0xF0, 0x50, 0x5F, 0x00, 0x00, 0x0F, 0xF5, 0x00, 0x00, 0xF0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x0F, 0x05,
	0x5F, 0x00, 0x0F, 0x05, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xFF, 0xF0, 0x0F,
	0xF0, 0x0F, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x55, 0x00, 0xF0, 0x5F, 0x55,
	0x00, 0xFF, 0xFF, 0x55, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xFF, 0x00,
	0xF0, 0xFF, 0xF0, 0x5F, 0xF0, 0x05, 0x5F, 0x00, 0x00, 0x5F, 0xF0, 0x05,
	0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x5F, 0xF0, 0x50, 0x00, 0x5F, 0xF0, 0x50, 0x00, 0x00, 0x00, 0x55, 0x00,
	0xF0, 0x5F, 0xFF, 0x55, 0x00, 0xFF, 0xF0, 0x0F, 0x00, 0x50, 0xF5, 0x0F,
	0x00, 0x00, 0x55, 0x00, 0xF0, 0x5F, 0xF5, 0x0F, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0xFF, 0xF0, 0x0F, 0xF0, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0xF0, 0x00,
	0x00, 0xF0, 0x0F, 0x05, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0xFF, 0xFF, 0x0F,
	0xF0, 0xFF, 0xFF, 0x0F, 0x50, 0x0F, 0xFF, 0x00, 0x50, 0x0F, 0xF5, 0x00,
	0x00, 0xF0, 0x0F, 0x00, 0xFF, 0xF5, 0x5F, 0x05, 0x00, 0xF0, 0x0F, 0xFF,
	0x00, 0xFF, 0xFF, 0x5F, 0x00, 0xFF, 0x0F, 0x00, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF5, 0x5F, 0xF0, 0x5F, 0xFF, 0x5F,
	0x00, 0x50, 0x05, 0x05, 0x00, 0x00, 0x55, 0x00, 0xF0, 0x5F, 0x55, 0x00,
	0xF0, 0x55, 0x55, 0x55, 0x00, 0x55, 0x55, 0x5F, 0xF0, 0x50, 0x50, 0x0F,
	0xF0, 0x50, 0xFF, 0x05, 0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x0F, 0xFF, 0x00,
	0x00, 0xFF, 0xF5, 0x5F, 0xF0, 0x5F, 0xF5, 0x5F, 0x00, 0xF0, 0x5F, 0x00,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xFF, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x5F, 0xF0, 0x0F, 0xF0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F,
	0x0F, 0x05, 0xF0, 0x50, 0x0F, 0xF5, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0x05,
	0x00, 0xFF, 0xF0, 0x0F, 0xF0, 0x5F, 0xFF, 0x55, 0x00, 0xFF, 0xFF, 0x5F,
	0x00, 0xF0, 0x5F, 0x00, 0x00, 0xFF, 0xFF, 0x55, 0x00, 0xFF, 0xF0, 0x5F,
	0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0xF0, 0x5F, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x55, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x50, 0x50, 0x00, 0xFF, 0x0F, 0x50, 0x00, 0xF5, 0x55,
	0x00, 0xF0, 0x5F, 0x05, 0x00, 0x50, 0x05, 0x55, 0x00, 0x55, 0x50, 0x05,
	0x00, 0x50, 0x55, 0x55, 0x00, 0x00, 0x55, 0x00, 0x00, 0x50, 0x55, 0x05,
	0x00, 0x50, 0x05, 0x55, 0x00, 0x55, 0x00, 0x55, 0x00, 0x55, 0x00, 0x55,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x55, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x55,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF, 0xFF, 0x8F, 0xF1, 0xFF, 0xFF, 0xAF,
	0xF1, 0xFF, 0xFF, 0x9F, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x51, 0xFC, 0xCF, 0x15,
	0x11, 0x01, 0x00, 0x00, 0x51, 0xFC, 0xCF, 0x15, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xF1, 0x88, 0x88, 0x28,
	0xF1, 0xAA, 0xAA, 0x7A, 0xF1, 0x99, 0x99, 0x39, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x51, 0xFC, 0xCF, 0x15, 0x55, 0x15, 0x01, 0x00, 0xC5, 0xFC, 0xCF, 0x15,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x81, 0x22, 0x22, 0x22, 0xC1, 0x77, 0x77, 0x77, 0x91, 0x33, 0x33, 0x33,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x51, 0xFC, 0xCF, 0x15, 0xCC, 0x5C, 0x15, 0x00,
	0xCC, 0xFF, 0xCC, 0x15, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x51, 0xFC, 0xCF, 0x15,
	0xFF, 0xCC, 0x5C, 0x01, 0xFF, 0xFF, 0x5C, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0x8F, 0xF1, 0xFF,
	0xFF, 0xAF, 0xF1, 0xFF, 0xFF, 0x9F, 0xF1, 0xFF, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x51, 0xFC, 0xCF, 0x15, 0xFF, 0xFF, 0x5C, 0x01, 0xFF, 0xCC, 0x5C, 0x01,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x88, 0x28, 0xF1, 0x88, 0xAA, 0x7A, 0xF1, 0xAA, 0x99, 0x39, 0xF1, 0x99,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x51, 0xFC, 0xCF, 0x15, 0xCC, 0xFF, 0xCC, 0x15,
	0xCC, 0x5C, 0x15, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x81, 0x22, 0x77, 0x77, 0xA1, 0x77,
	0x33, 0x33, 0x91, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x51, 0xFC, 0xCF, 0x15,
	0xC5, 0xFC, 0xCF, 0x15, 0x55, 0x15, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x51, 0xFC, 0xCF, 0x15, 0x51, 0xFC, 0xCF, 0x15, 0x11, 0x01, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x51, 0xFC, 0xCF, 0x15,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x51, 0xFC, 0xCF, 0x5C, 0x00, 0x10, 0x51, 0x55, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x55, 0x55,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x51, 0xCC, 0xFF, 0xCC, 0x00, 0x51, 0xC5, 0xCC,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0xCC, 0xCC, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0xC5, 0xFF, 0xFF,
	0x10, 0xC5, 0xCC, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0xC5, 0xCC, 0xFF, 0x10, 0xC5, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xFF, 0xFF, 0xFF,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x51, 0xC5, 0xCC, 0x51, 0xCC, 0xFF, 0xCC,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0xCC, 0xCC, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x10, 0x51, 0x55,
	0x51, 0xFC, 0xCF, 0x5C, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x55, 0x55, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x10, 0x11, 0x51, 0xFC, 0xCF, 0x15, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0xF1, 0xFF, 0xFF, 0xCF, 0x00, 0x00, 0x00, 0x00,
	0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xCF, 0xF1, 0xFF, 0xFF, 0xCF,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xF1, 0xCC, 0xCC, 0x5C,
	0x00, 0x00, 0x00, 0x00, 0xF1, 0xCC, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x5C,
	0xF1, 0xCC, 0xCC, 0x5C, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0xC1, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x55, 0x00, 0x00,
	0x00, 0x00, 0x55, 0x55, 0xC1, 0x55, 0x55, 0x55, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xCF, 0xF1, 0xFF,
	0xFF, 0xCF, 0xF1, 0xFF, 0xFF, 0xCF, 0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0xCC, 0x5C, 0xF1, 0xCC, 0xCC, 0x5C, 0xF1, 0xCC, 0xCC, 0x5C, 0x00, 0x00,
	0x00, 0x00, 0xF1, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0xC1, 0x55, 0x55, 0x55, 0xC1, 0x55,
	0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x55, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00,
	0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
	0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0xF0, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0xF0, 0xFF, 0x0F, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00,
	0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF,
	0x0F, 0x00, 0x00, 0x0F, 0xF0, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0xFF, 0x00, 0x00,
	0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0xF0, 0xF0, 0x00, 0xF0, 0x00, 0x00, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0xF0, 0x00, 0xF0, 0xF0, 0xFF, 0x00,
	0xF0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0x0F, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x00, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x0F, 0x00, 0x00, 0x0F,
	0x00, 0xFF, 0x0F, 0x00, 0x0F, 0xF0, 0x0F, 0xF0, 0xF0, 0xF0, 0xF0, 0x00,
	0xF0, 0xFF, 0x0F, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0xF0, 0x00,
	0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00,
	0xF0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x0F,
	0x00, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0x0F, 0xF0, 0x0F, 0xF0,
	0xF0, 0xF0, 0xF0, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00, 0xF0, 0x00,
	0x0F, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0xF0, 0x00,
	0x0F, 0x00, 0xF0, 0x0F, 0x00, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0xF0, 0x00, 0x0F, 0x00,
	0xF0, 0x0F, 0xF0, 0x0F, 0x00, 0xFF, 0x0F, 0x00, 0xF0, 0x00, 0x00, 0x00,
	0xF0, 0x00, 0xF0, 0x00, 0xF0, 0xFF, 0x0F, 0x0F, 0xF0, 0xF0, 0xFF, 0x00,
	0xFF, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0xFF, 0xFF, 0xFF, 0x0F,
	0xF0, 0xFF, 0x0F, 0x00, 0xFF, 0xFF, 0x0F, 0x0F, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0xFF, 0x0F, 0xFF, 0x0F,
	0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0xFF, 0xF1, 0xFF, 0xFF, 0xCF,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0xF0,
	0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0xF0,
	0xF1, 0xCC, 0xCC, 0x5C, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0xFF, 0xFF, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x0F, 0x00, 0x0F, 0x0F, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
	0x00, 0x00, 0xF0, 0xFF, 0xC1, 0x55, 0x55, 0x55, 0x0F, 0x00, 0x00, 0xF0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00,
	0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x0F, 0x00, 0x00, 0xF0, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0F, 0xF0, 0xF0, 0x00, 0xF0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0xF0, 0xFF,
	0xFF, 0xCF, 0xF1, 0xFF, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x0F, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xCC, 0x5C, 0xF1, 0xCC, 0x0F, 0x00, 0x00, 0xF0,
	0x00, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xFF, 0x00,
	0xF0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x0F, 0xF0, 0x00, 0x00,
	0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0xC1, 0x55,
	0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
	0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0xFF, 0xFF, 0xFF, 0xFF
};

unsigned char AMG_Font2_Data[32768] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11,
	0x11, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x00, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0xF1, 0x1F, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x11, 0xFF, 0xFF, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0xF1,
	0x1F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0xFF, 0xFF,
	0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF, 0xFF, 0xFF, 0x1F,
	0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x10, 0x11, 0x01, 0xF1,
	0x1F, 0x10, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE1, 0x1E, 0x11, 0x11, 0x11, 0x11, 0xE1, 0x1E, 0xE1, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x1E, 0x10, 0xE1, 0xEE, 0x11, 0x11, 0xEE, 0x1E, 0x01,
	0x00, 0x00, 0x11, 0xEE, 0xEE, 0x11, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE,
	0xEE, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE, 0xEE, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10,
	0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x10,
	0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00,
	0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE, 0xEE, 0x1E, 0x00, 0x10, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0x11, 0xE1, 0x1E, 0x11, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0x11, 0x11, 0x00,
	0x00, 0x11, 0x11, 0x1D, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x1D,
	0x11, 0xDD, 0xDD, 0x1D, 0xD1, 0xDD, 0xDD, 0x11, 0x00, 0x10, 0xD1, 0xDD,
	0xDD, 0x1D, 0x01, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0x1D, 0x00, 0x00,
	0x00, 0x10, 0xD1, 0xDD, 0xDD, 0x1D, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x11, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD,
	0x01, 0x11, 0xDD, 0xDD, 0xDD, 0xDD, 0x11, 0x10, 0xDD, 0xDD, 0x11, 0x11,
	0x11, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0x01,
	0x00, 0x10, 0xDD, 0x11, 0x11, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0xD1,
	0xDD, 0x11, 0xD1, 0x1D, 0x00, 0x10, 0xDD, 0x1D, 0x11, 0xD1, 0xDD, 0x01,
	0x10, 0xDD, 0x1D, 0xD1, 0x1D, 0xD1, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC1, 0xC1, 0x1C, 0x00, 0x00, 0xC1, 0x1C, 0x1C,
	0xC1, 0x1C, 0xC1, 0xCC, 0xCC, 0x1C, 0xC1, 0x1C, 0xC1, 0xCC, 0xCC, 0xCC,
	0xCC, 0xCC, 0xCC, 0x1C, 0x00, 0x11, 0xCC, 0xCC, 0xCC, 0xCC, 0x11, 0x00,
	0x10, 0x11, 0xC1, 0xCC, 0xCC, 0x1C, 0x11, 0x01, 0x00, 0x11, 0xCC, 0xCC,
	0xCC, 0xCC, 0x11, 0x00, 0x00, 0x10, 0xC1, 0xCC, 0xCC, 0x1C, 0x01, 0x10,
	0xCC, 0xCC, 0x1C, 0x11, 0x11, 0xC1, 0xCC, 0xCC, 0x01, 0xC1, 0xCC, 0xCC,
	0xCC, 0xCC, 0x1C, 0x10, 0xCC, 0x1C, 0x01, 0x00, 0x00, 0x10, 0xC1, 0xCC,
	0x01, 0x11, 0x11, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x00, 0x10, 0xCC, 0x01,
	0x10, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xCC, 0x11, 0xC1, 0x1C,
	0x00, 0x10, 0xCC, 0x1C, 0x11, 0xC1, 0xCC, 0x01, 0x10, 0xC1, 0xCC, 0xCC,
	0xCC, 0xCC, 0x1C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xB1, 0xB1, 0x1B, 0x00, 0x00, 0xB1, 0x1B, 0x1B, 0xB1, 0x1B, 0xB1, 0xBB,
	0xBB, 0x1B, 0xB1, 0x1B, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B,
	0x10, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x01, 0x11, 0xBB, 0x1B, 0xBB,
	0xBB, 0xB1, 0xBB, 0x11, 0x10, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x01,
	0x00, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x11, 0x00,
	0x00, 0x11, 0xBB, 0xBB, 0x01, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x10,
	0xBB, 0x1B, 0x10, 0x11, 0x11, 0x01, 0xB1, 0xBB, 0x01, 0xB1, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x10, 0xBB, 0x01, 0x10, 0xBB, 0x01, 0x00,
	0x00, 0x00, 0x00, 0xB1, 0xBB, 0xBB, 0xBB, 0x1B, 0x00, 0x10, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA1, 0xA1, 0x1A, 0x00,
	0x00, 0xA1, 0x1A, 0x1A, 0xA1, 0x1A, 0xA1, 0xAA, 0xAA, 0x1A, 0xA1, 0x1A,
	0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x11, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x11, 0xA1, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x1A,
	0x11, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x11, 0x00, 0x10, 0xAA, 0xAA,
	0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA,
	0x01, 0xA1, 0xAA, 0x11, 0x11, 0xAA, 0x1A, 0x10, 0xAA, 0x1A, 0x10, 0xAA,
	0xAA, 0x01, 0xA1, 0xAA, 0x01, 0xA1, 0xAA, 0xAA, 0xAA, 0x1A, 0xAA, 0x01,
	0x00, 0x10, 0xAA, 0x11, 0x11, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0xA1,
	0xAA, 0xAA, 0xAA, 0x1A, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x11, 0x11, 0xAA, 0x1A, 0xA1, 0xAA, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x91, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x19,
	0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x19, 0x91, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x19, 0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x19,
	0x91, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x19, 0x91, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x19, 0x00, 0x10, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10,
	0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x91, 0x99, 0x01,
	0x10, 0x99, 0x19, 0x10, 0x99, 0x19, 0x10, 0x99, 0x99, 0x01, 0x91, 0x99,
	0x01, 0x91, 0x19, 0x11, 0x91, 0x19, 0x99, 0x01, 0x00, 0x10, 0x99, 0x99,
	0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x91, 0x99, 0x11, 0x11, 0x11,
	0x00, 0x10, 0x99, 0x19, 0x11, 0x91, 0x99, 0x01, 0x91, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x81, 0x01, 0x11, 0x11, 0x11, 0x11, 0x10, 0x18, 0x81, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x18, 0x11, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x11,
	0x81, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x18, 0x81, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x18, 0x81, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x18,
	0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x00,
	0x00, 0x10, 0x88, 0x88, 0x01, 0x81, 0x88, 0x01, 0x10, 0x88, 0x18, 0x10,
	0x88, 0x18, 0x10, 0x88, 0x88, 0x01, 0x81, 0x88, 0x01, 0x81, 0x18, 0x00,
	0x81, 0x18, 0x11, 0x01, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00,
	0x00, 0x10, 0x11, 0x81, 0x88, 0x01, 0x00, 0x00, 0x00, 0x10, 0x88, 0x18,
	0x00, 0x81, 0x88, 0x01, 0x81, 0x88, 0x88, 0x11, 0x11, 0x88, 0x88, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x01, 0x71, 0x77,
	0x77, 0x17, 0x10, 0x17, 0x71, 0x77, 0x17, 0x11, 0x11, 0x71, 0x77, 0x17,
	0x10, 0x71, 0x77, 0x77, 0x77, 0x77, 0x17, 0x01, 0x11, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x11, 0x71, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x17,
	0x71, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x17, 0x00, 0x10, 0x77, 0x77,
	0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77,
	0x01, 0x71, 0x77, 0x11, 0x11, 0x77, 0x17, 0x10, 0x77, 0x17, 0x10, 0x77,
	0x77, 0x01, 0x71, 0x77, 0x01, 0x71, 0x17, 0x00, 0x71, 0x17, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x71, 0x17, 0x11, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x00, 0x10, 0x77, 0x17, 0x11, 0x71, 0x77, 0x01,
	0x11, 0x11, 0x77, 0x17, 0x71, 0x77, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x61, 0x01, 0x61, 0x66, 0x66, 0x16, 0x10, 0x16,
	0x61, 0x66, 0x16, 0x01, 0x10, 0x61, 0x66, 0x16, 0x00, 0x11, 0x66, 0x66,
	0x66, 0x66, 0x11, 0x00, 0x10, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16, 0x01,
	0x11, 0x66, 0x16, 0x66, 0x66, 0x61, 0x66, 0x11, 0x11, 0x66, 0x66, 0x16,
	0x61, 0x66, 0x66, 0x11, 0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x01, 0x10,
	0x66, 0x66, 0x11, 0x00, 0x00, 0x11, 0x66, 0x66, 0x01, 0x61, 0x66, 0x66,
	0x66, 0x66, 0x16, 0x10, 0x66, 0x16, 0x10, 0x11, 0x11, 0x01, 0x61, 0x66,
	0x01, 0x61, 0x16, 0x11, 0x61, 0x16, 0x00, 0x00, 0x00, 0x00, 0x11, 0x61,
	0x16, 0x11, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x66, 0x16, 0x61, 0x66, 0x66, 0x01, 0x00, 0x11, 0x66, 0x66,
	0x66, 0x66, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x51, 0x01, 0x11, 0x55, 0x55, 0x11, 0x10, 0x15, 0x51, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x15, 0x00, 0x10, 0x51, 0x55, 0x55, 0x15, 0x01, 0x00,
	0x00, 0x11, 0x55, 0x55, 0x55, 0x55, 0x11, 0x00, 0x10, 0x11, 0x51, 0x55,
	0x55, 0x15, 0x11, 0x01, 0x10, 0x51, 0x55, 0x51, 0x15, 0x55, 0x15, 0x01,
	0x00, 0x10, 0x51, 0x55, 0x55, 0x15, 0x01, 0x10, 0x55, 0x55, 0x15, 0x11,
	0x11, 0x51, 0x55, 0x55, 0x01, 0x51, 0x55, 0x55, 0x55, 0x55, 0x15, 0x10,
	0x55, 0x15, 0x01, 0x00, 0x00, 0x10, 0x51, 0x55, 0x01, 0x51, 0x55, 0x55,
	0x55, 0x15, 0x00, 0x00, 0x00, 0x00, 0x51, 0x55, 0x55, 0x15, 0x00, 0x00,
	0x00, 0x10, 0x55, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x15,
	0x51, 0x55, 0x55, 0x01, 0x10, 0x51, 0x55, 0x55, 0x55, 0x55, 0x15, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x11, 0x10, 0x11,
	0x11, 0x01, 0x11, 0x14, 0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14,
	0x00, 0x00, 0x11, 0x44, 0x44, 0x11, 0x00, 0x00, 0x00, 0x10, 0x41, 0x44,
	0x44, 0x14, 0x01, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44, 0x14, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x44, 0x44, 0x11, 0x11, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x11, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x01, 0x11, 0x44, 0x44, 0x44, 0x44, 0x11, 0x10, 0x44, 0x44, 0x11, 0x11,
	0x11, 0x11, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x44, 0x14, 0x00, 0x00,
	0x00, 0x00, 0x41, 0x44, 0x44, 0x14, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x10, 0x44, 0x44, 0x14, 0x41, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x14, 0x41, 0x14, 0x41, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x31, 0x13, 0x11, 0x11, 0x11, 0x11, 0x31, 0x13,
	0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13, 0x00, 0x00, 0x10, 0x31,
	0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x33, 0x33, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x31, 0x33,
	0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
	0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x31,
	0x13, 0x11, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x10, 0x33, 0x33, 0x13, 0x31, 0x33, 0x33, 0x01, 0x10, 0x33, 0x11, 0x31,
	0x13, 0x11, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x11, 0x11, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x11, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x21, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x22,
	0x22, 0x11, 0x00, 0x00, 0x00, 0x00, 0x21, 0x22, 0x22, 0x12, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x22, 0x12,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x01, 0x21, 0x12, 0x10, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0xF1,
	0x1F, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xF1, 0x1F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xF1,
	0x1F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x01,
	0x10, 0xEE, 0xEE, 0xEE, 0x1E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xE1,
	0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x11, 0xEE, 0xEE, 0x11, 0x00, 0x00,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE,
	0xEE, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE, 0xEE, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xE1, 0x1E, 0x01, 0x00, 0x00,
	0x10, 0xEE, 0x11, 0x00, 0x00, 0x11, 0xEE, 0x01, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x00, 0x10, 0xD1, 0xDD, 0xDD, 0x1D, 0x01, 0x00, 0x10, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xD1, 0xDD, 0xDD, 0x1D, 0x01, 0x00,
	0x00, 0x10, 0xD1, 0xDD, 0xDD, 0x1D, 0x01, 0x00, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0x1D, 0x01, 0x00,
	0x00, 0x10, 0xD1, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01, 0x10, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x11, 0xDD, 0xDD, 0x11, 0x00, 0x00, 0x10, 0xDD, 0x1D, 0x01,
	0x10, 0xD1, 0xDD, 0x01, 0x10, 0xC1, 0xCC, 0xCC, 0xCC, 0x1C, 0x01, 0x00,
	0x00, 0x10, 0xC1, 0xCC, 0xCC, 0xCC, 0x1C, 0x01, 0x00, 0x10, 0xCC, 0xCC,
	0xCC, 0xCC, 0x01, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0x11, 0xCC, 0x1C, 0xC1, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x11, 0xCC, 0xCC,
	0xCC, 0xCC, 0x11, 0x00, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0xCC, 0xCC, 0x11, 0x00, 0x00, 0x11, 0xCC, 0xCC,
	0x11, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0xCC, 0x01, 0x10, 0xCC, 0x11, 0x00, 0x00, 0x10, 0xC1, 0xCC,
	0xCC, 0x1C, 0x01, 0x00, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0x00, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x00, 0x00, 0x11, 0xBB, 0xBB,
	0xBB, 0xBB, 0x11, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x00,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0x11, 0xBB,
	0x1B, 0xB1, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0xBB,
	0xBB, 0x11, 0x01, 0x00, 0x00, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x00,
	0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0xB1, 0xBB, 0x1B, 0x01, 0x10, 0xB1, 0xBB, 0x1B, 0x11, 0x11, 0x11, 0x11,
	0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xB1, 0xBB, 0x11,
	0x11, 0xBB, 0x1B, 0x01, 0x00, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x00,
	0x10, 0xBB, 0xBB, 0x1B, 0xB1, 0xBB, 0xBB, 0x01, 0x00, 0x10, 0xA1, 0xAA,
	0xAA, 0xAA, 0x1A, 0x01, 0x10, 0xA1, 0xAA, 0xAA, 0xAA, 0x1A, 0x01, 0x00,
	0x00, 0x10, 0x11, 0xAA, 0xAA, 0x11, 0x01, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0x11, 0xAA, 0x1A, 0xA1, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00,
	0x00, 0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x00, 0x00, 0x11, 0x11, 0xAA,
	0xAA, 0x11, 0x11, 0x00, 0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x11,
	0x11, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x10, 0xAA, 0xAA, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x11, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x11,
	0x10, 0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x11, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x99, 0x19, 0x91, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x19,
	0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x91, 0x19, 0x99,
	0x99, 0x91, 0x19, 0x00, 0x00, 0x91, 0x11, 0x99, 0x99, 0x11, 0x19, 0x00,
	0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x19, 0x91, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x19, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x19, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x00, 0x00, 0x11, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x18, 0x81, 0x88, 0x01, 0x10, 0x88, 0x88, 0x11, 0x11, 0x88, 0x88, 0x01,
	0x81, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00, 0x10, 0x11, 0x88,
	0x88, 0x11, 0x01, 0x00, 0x00, 0x81, 0x11, 0x88, 0x88, 0x11, 0x18, 0x00,
	0x00, 0x81, 0x18, 0x88, 0x88, 0x81, 0x18, 0x00, 0x81, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x18, 0x81, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x18,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x81, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x18, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00, 0x10, 0x71, 0x77,
	0x77, 0x77, 0x17, 0x01, 0x10, 0x71, 0x77, 0x77, 0x77, 0x17, 0x01, 0x00,
	0x00, 0x10, 0x11, 0x77, 0x77, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x77, 0x17, 0x71, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x71, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x17, 0x00, 0x10, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00,
	0x00, 0x11, 0x11, 0x77, 0x77, 0x11, 0x11, 0x00, 0x00, 0x71, 0x77, 0x77,
	0x77, 0x77, 0x17, 0x00, 0x71, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x11,
	0x11, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x17, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x11,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x10, 0x71, 0x77, 0x77,
	0x77, 0x77, 0x17, 0x01, 0x00, 0x11, 0x66, 0x66, 0x66, 0x66, 0x11, 0x00,
	0x00, 0x11, 0x66, 0x66, 0x66, 0x66, 0x11, 0x00, 0x00, 0x10, 0x66, 0x66,
	0x66, 0x66, 0x01, 0x00, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x10, 0x66, 0x16, 0x61, 0x66, 0x01, 0x10, 0x66, 0x66, 0x66,
	0x66, 0x66, 0x66, 0x01, 0x61, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x16,
	0x00, 0x10, 0x61, 0x66, 0x66, 0x16, 0x01, 0x00, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x00, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x61, 0x66, 0x16, 0x01, 0x10, 0x61, 0x66, 0x16,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x66, 0x66, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x61, 0x66, 0x11, 0x11, 0x66, 0x16, 0x01, 0x10, 0x66, 0x66, 0x16,
	0x61, 0x66, 0x66, 0x01, 0x00, 0x11, 0x66, 0x66, 0x66, 0x66, 0x11, 0x00,
	0x10, 0x51, 0x55, 0x55, 0x55, 0x15, 0x01, 0x00, 0x00, 0x10, 0x51, 0x55,
	0x55, 0x55, 0x15, 0x01, 0x00, 0x10, 0x55, 0x55, 0x55, 0x55, 0x01, 0x00,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55,
	0x15, 0x51, 0x55, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x51, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00, 0x00, 0x11, 0x55,
	0x55, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00,
	0x00, 0x11, 0x55, 0x55, 0x55, 0x55, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x55, 0x55, 0x11, 0x00, 0x00, 0x11, 0x55, 0x55, 0x11, 0x00, 0x00, 0x00,
	0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00, 0x00, 0x11, 0x55, 0x01,
	0x10, 0x55, 0x11, 0x00, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x10, 0x51, 0x55, 0x55, 0x15, 0x01, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x00, 0x10, 0x41, 0x44, 0x44, 0x14, 0x01, 0x00, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x01, 0x00, 0x00, 0x10, 0x44, 0x14, 0x41, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x14, 0x00, 0x00, 0x11, 0x41, 0x14, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x10, 0x41, 0x44,
	0x44, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x41, 0x44, 0x14, 0x01, 0x00,
	0x00, 0x10, 0x41, 0x44, 0x14, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x14, 0x00, 0x00, 0x10, 0x11, 0x01, 0x10, 0x11, 0x01, 0x00,
	0x10, 0x44, 0x14, 0x01, 0x10, 0x41, 0x44, 0x01, 0x00, 0x00, 0x11, 0x44,
	0x44, 0x11, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33, 0x13, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x31, 0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x11, 0x33,
	0x33, 0x11, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x00, 0x00, 0x10, 0x33, 0x13, 0x31, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33,
	0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x33, 0x33, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x11, 0x00,
	0x00, 0x11, 0x33, 0x01, 0x00, 0x00, 0x10, 0x31, 0x13, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x21, 0x12, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x22,
	0x22, 0x12, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x22, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x21, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0xF1, 0xFF, 0x01, 0x10, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xF1, 0x1F,
	0xF1, 0x1F, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00,
	0x00, 0xE1, 0xEE, 0x1E, 0xE1, 0xEE, 0x1E, 0x00, 0x11, 0xE1, 0xEE, 0x11,
	0x11, 0xEE, 0x1E, 0x11, 0x10, 0x11, 0xE1, 0x1E, 0xE1, 0x1E, 0x11, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xE1, 0x1E, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x11, 0xEE, 0xEE, 0x1E, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE,
	0xEE, 0x11, 0x00, 0x00, 0x00, 0x11, 0x11, 0xE1, 0x1E, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xE1, 0x1E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0x1D,
	0xD1, 0xDD, 0x1D, 0x00, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x1D,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01,
	0x11, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00,
	0x00, 0x00, 0x10, 0xD1, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD,
	0xDD, 0x1D, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0x1D, 0x00, 0x00,
	0x00, 0xD1, 0x1D, 0xD1, 0x1D, 0xD1, 0x1D, 0x00, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xDD, 0xDD, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xCC,
	0xCC, 0x01, 0x00, 0x00, 0x00, 0xC1, 0xCC, 0x1C, 0xC1, 0xCC, 0x1C, 0x00,
	0xC1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x1C, 0x10, 0xCC, 0xCC, 0xCC,
	0xCC, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11, 0xC1, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x11, 0xCC,
	0xCC, 0x1C, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xCC, 0x1C, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x11, 0xC1, 0xCC, 0x1C, 0x00, 0x00, 0x00, 0xC1, 0xCC, 0xC1,
	0x1C, 0xCC, 0x1C, 0x00, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0xC1, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x00, 0xB1, 0xBB, 0x1B, 0xB1, 0xBB, 0x1B, 0x00, 0xB1, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x1B, 0x10, 0xBB, 0xBB, 0x11, 0x11, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x11, 0xBB, 0xBB, 0x1B, 0x01, 0x10, 0xBB, 0xBB, 0x11,
	0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0xB1, 0xBB, 0xBB, 0x11, 0x00, 0x00,
	0x00, 0x00, 0xB1, 0xBB, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB1,
	0xBB, 0x1B, 0x00, 0x00, 0x00, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x00,
	0x10, 0x11, 0x11, 0xBB, 0xBB, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0xBB, 0xBB, 0x1B, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0xA1, 0xAA, 0x1A,
	0xA1, 0xAA, 0x1A, 0x00, 0x11, 0xA1, 0xAA, 0x11, 0x11, 0xAA, 0x1A, 0x11,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0xA1,
	0xAA, 0xAA, 0x11, 0x00, 0x10, 0xAA, 0xAA, 0x11, 0xAA, 0x1A, 0x11, 0x01,
	0x00, 0x00, 0xA1, 0xAA, 0x1A, 0x01, 0x00, 0x00, 0x00, 0x00, 0xA1, 0xAA,
	0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA1, 0xAA, 0x1A, 0x00, 0x00,
	0x10, 0x11, 0xA1, 0xAA, 0xAA, 0x1A, 0x11, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xA1, 0xAA, 0xAA, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x00, 0x91, 0x99, 0x19, 0x91, 0x99, 0x19, 0x00,
	0x00, 0x91, 0x99, 0x01, 0x10, 0x99, 0x19, 0x00, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x11, 0x99, 0x99, 0x19, 0x01, 0x00,
	0x10, 0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x11, 0x99,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x99, 0x19, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x91, 0x99, 0x19, 0x00, 0x00, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x11, 0x99, 0x99, 0x19, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x81, 0x88, 0x01,
	0x10, 0x88, 0x18, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x10, 0x81, 0x88, 0x88, 0x11, 0x00, 0x00, 0x10, 0x81, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x81, 0x88, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
	0x88, 0x18, 0x00, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x81, 0x88,
	0x88, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x71, 0x77, 0x11, 0x11, 0x77, 0x17, 0x11,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x77, 0x77, 0x01, 0x00, 0x11, 0x77, 0x77,
	0x17, 0x11, 0x11, 0x01, 0x10, 0x77, 0x77, 0x11, 0x77, 0x77, 0x17, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x77,
	0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x77, 0x17, 0x00, 0x00,
	0x10, 0x11, 0x71, 0x77, 0x77, 0x17, 0x11, 0x01, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x11, 0x77, 0x11, 0x00, 0x00,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x11, 0x77, 0x77, 0x17, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x61, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x16, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x66, 0x66, 0x01, 0x10, 0x61, 0x66, 0x66, 0x11, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x66, 0x66, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x66, 0x16, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x61, 0x66, 0x16, 0x00, 0x00, 0x00, 0x11, 0x66, 0x66,
	0x66, 0x66, 0x11, 0x00, 0x10, 0x11, 0x11, 0x66, 0x66, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x10, 0x61, 0x66, 0x16, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x10, 0x61, 0x66, 0x66, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x15, 0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x15, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11,
	0x55, 0x55, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x51, 0x55, 0x15, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x51,
	0x55, 0x15, 0x00, 0x00, 0x00, 0x51, 0x55, 0x51, 0x15, 0x55, 0x15, 0x00,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x55,
	0x55, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x15,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x11,
	0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x44,
	0x44, 0x14, 0x00, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44, 0x14, 0x00, 0x00,
	0x00, 0x41, 0x14, 0x41, 0x14, 0x41, 0x14, 0x00, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x10, 0x44, 0x44, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33,
	0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x31, 0x33, 0x11, 0x11, 0x33, 0x13, 0x11, 0x10, 0x11, 0x31, 0x13,
	0x31, 0x13, 0x11, 0x01, 0x10, 0x31, 0x13, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x33, 0x33, 0x13, 0x00, 0x00,
	0x00, 0x00, 0x31, 0x33, 0x33, 0x11, 0x00, 0x00, 0x00, 0x11, 0x11, 0x31,
	0x13, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x31, 0x33, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x10, 0x31, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x22, 0x01,
	0x10, 0x22, 0x12, 0x00, 0x00, 0x00, 0x21, 0x12, 0x21, 0x12, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x22,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0xE1, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE,
	0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE, 0xEE, 0x1E, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE,
	0x11, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0xD1, 0xDD, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xD1, 0xDD, 0xDD, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0xDD, 0xDD, 0x1D, 0x01, 0x00, 0x00,
	0x10, 0xDD, 0xDD, 0x11, 0x11, 0xDD, 0xDD, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x00, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0xCC,
	0xCC, 0x1C, 0x01, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0x1C, 0x00,
	0x00, 0x10, 0xC1, 0xCC, 0xCC, 0x11, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x01, 0x10, 0xBB, 0xBB, 0x11, 0xB1, 0xBB, 0xBB, 0x01,
	0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0xB1, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB,
	0xBB, 0x01, 0x00, 0x00, 0x00, 0x10, 0xB1, 0xBB, 0xBB, 0x11, 0x00, 0x00,
	0x00, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x00, 0x00, 0x00, 0x11, 0xBB,
	0xBB, 0x1B, 0x01, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0xBB, 0xBB, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA,
	0xAA, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x00, 0x10, 0x11, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x11,
	0xAA, 0xAA, 0x1A, 0x01, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x11, 0xAA, 0xAA, 0x1A, 0x01, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA,
	0xAA, 0xAA, 0x1A, 0x00, 0x00, 0x00, 0x10, 0xA1, 0xAA, 0xAA, 0x11, 0x00,
	0x00, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0x99, 0x99, 0x91,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x00, 0x10, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x91, 0x99, 0x99, 0x11, 0x00,
	0x10, 0x91, 0x99, 0x99, 0x99, 0x99, 0x19, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x91, 0x99, 0x99,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x99, 0x99, 0x19, 0x00, 0x00, 0x00, 0x10, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x10, 0x88, 0x88, 0x88, 0x18, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x10, 0x88, 0x88, 0x18, 0x01, 0x00, 0x10, 0x81, 0x88, 0x88,
	0x88, 0x88, 0x18, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x81,
	0x88, 0x18, 0x00, 0x00, 0x00, 0x81, 0x88, 0x88, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x88, 0x88, 0x18, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x11, 0x11, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x11, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x77, 0x77, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x77, 0x77, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77,
	0x77, 0x11, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x77, 0x77, 0x17, 0x00, 0x00,
	0x00, 0x11, 0x77, 0x77, 0x17, 0x01, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77,
	0x77, 0x77, 0x17, 0x00, 0x00, 0x00, 0x10, 0x71, 0x77, 0x77, 0x11, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x16,
	0x11, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x61, 0x66, 0x66, 0x16, 0x00, 0x00, 0x00, 0x10, 0x61, 0x66,
	0x66, 0x11, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x16, 0x00,
	0x00, 0x00, 0x11, 0x66, 0x66, 0x16, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55,
	0x55, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x55, 0x55, 0x15, 0x01, 0x00,
	0x00, 0x10, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00, 0x00, 0x10, 0x51, 0x55,
	0x55, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x14, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x41, 0x44, 0x44, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x44, 0x44, 0x14, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x44, 0x44, 0x01, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x33, 0x33, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x31, 0x33, 0x33, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33,
	0x33, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x22, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x1E, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0xE1, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01,
	0x00, 0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE1, 0xEE, 0xEE, 0x1E, 0xE1, 0xEE, 0xEE, 0x01, 0x11, 0xEE, 0xEE, 0x01,
	0xE1, 0xEE, 0xEE, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x11,
	0x11, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0xD1, 0x1D, 0x11, 0x11,
	0x11, 0x11, 0xD1, 0x1D, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0xD1, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0xD1, 0xDD, 0xDD,
	0xDD, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0x1D,
	0xD1, 0xDD, 0xDD, 0x11, 0xD1, 0xDD, 0xDD, 0x01, 0xD1, 0xDD, 0xDD, 0x1D,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x1D, 0xD1, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x11, 0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0xC1, 0x1C, 0x11, 0x11, 0x11, 0x11, 0xC1, 0x1C,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x11, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0x11, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x11, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x11, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x01, 0x00, 0x11, 0x11, 0xCC, 0xCC, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x11,
	0xCC, 0xCC, 0x1C, 0x01, 0x11, 0xCC, 0xCC, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x1C,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0xB1, 0x1B, 0xB1, 0xBB, 0xBB, 0x1B, 0xB1, 0x1B, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xB1, 0xBB, 0xBB, 0x11, 0x00,
	0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0x11, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0xA1, 0x1A, 0xA1, 0xAA,
	0xAA, 0x1A, 0xA1, 0x1A, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0x11, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA,
	0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x01, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0x1A, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x91, 0x19, 0x91, 0x19, 0x91, 0x19, 0x91, 0x19,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x19, 0x01, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x19, 0x00, 0x00, 0x10, 0x99, 0x99, 0x99, 0x99, 0x19, 0x00, 0x00,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x11, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x81, 0x18, 0x81, 0x18, 0x81, 0x18, 0x81, 0x18, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x18, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00, 0x00, 0x10, 0x88, 0x88, 0x11,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x11, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x81,
	0x18, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x71, 0x17, 0x71, 0x77,
	0x77, 0x77, 0x77, 0x17, 0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11,
	0x11, 0x11, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11, 0x77, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x17, 0x01, 0x00, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x71, 0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x61, 0x16, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x61,
	0x66, 0x66, 0x11, 0x00, 0x10, 0x66, 0x66, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x11,
	0x66, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x51, 0x15, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x11, 0x55, 0x55, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x11, 0x55, 0x55, 0x15, 0x01,
	0x11, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x51, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x41, 0x14, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01, 0x00, 0x41, 0x44, 0x44,
	0x44, 0x44, 0x14, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x41, 0x44, 0x44, 0x11, 0x41, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x01, 0x11, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x00, 0x31, 0x33, 0x33, 0x33, 0x33, 0x13, 0x00,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x01,
	0x11, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x21, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x12, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0xF1, 0x1F, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x10, 0xE1, 0x1E, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00,
	0x00, 0x00, 0x11, 0xEE, 0xEE, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0xD1, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x11,
	0x11, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x11, 0x11, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x10, 0xDD, 0xDD,
	0xDD, 0xDD, 0x01, 0x00, 0x10, 0xDD, 0xDD, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xD1, 0xDD,
	0xDD, 0x1D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x11, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0x11, 0xCC,
	0xCC, 0x11, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x1C, 0xC1, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x1C, 0xC1, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0xC1, 0xCC, 0xCC, 0x01, 0x00, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0x01, 0x00,
	0x10, 0xCC, 0xCC, 0x1C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0xCC, 0xCC, 0x01, 0x00, 0x00, 0x11, 0xCC, 0xCC, 0xCC, 0xCC, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0x11, 0x11, 0xBB, 0xBB, 0x11, 0x11, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x01, 0x10, 0xB1, 0xBB, 0xBB,
	0xBB, 0xBB, 0x1B, 0x01, 0x10, 0x11, 0x11, 0x11, 0xBB, 0xBB, 0x1B, 0x01,
	0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x10, 0xB1, 0xBB, 0xBB,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00,
	0x10, 0xB1, 0xBB, 0x1B, 0xB1, 0xBB, 0x1B, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x00, 0x11, 0xAA, 0xAA,
	0xAA, 0xAA, 0x11, 0x00, 0x00, 0x11, 0xAA, 0xAA, 0xAA, 0xAA, 0x11, 0x00,
	0x00, 0x00, 0x10, 0xA1, 0xAA, 0xAA, 0x11, 0x00, 0x00, 0x10, 0xAA, 0xAA,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0xAA, 0xAA, 0x1A, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x91,
	0x19, 0x99, 0x99, 0x01, 0x00, 0x10, 0x91, 0x99, 0x99, 0x19, 0x01, 0x00,
	0x00, 0x10, 0x91, 0x99, 0x99, 0x19, 0x01, 0x00, 0x00, 0x00, 0x11, 0x99,
	0x99, 0x19, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x91, 0x99, 0x99, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x99, 0x99, 0x01, 0x00, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x18,
	0x81, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x10, 0x81, 0x88, 0x88, 0x18, 0x01, 0x00, 0x00, 0x00, 0x11, 0x88,
	0x88, 0x11, 0x00, 0x00, 0x00, 0x10, 0x81, 0x88, 0x88, 0x11, 0x00, 0x00,
	0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x88,
	0x88, 0x18, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x17, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x71, 0x77, 0x77, 0x77, 0x77, 0x17, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00, 0x11, 0x77, 0x77,
	0x77, 0x77, 0x11, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00,
	0x00, 0x11, 0x77, 0x77, 0x17, 0x01, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x71, 0x77, 0x77, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x61, 0x66, 0x66, 0x11, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x00, 0x11, 0x66, 0x66, 0x66, 0x66, 0x11, 0x00, 0x10, 0x66, 0x66, 0x66,
	0x66, 0x66, 0x66, 0x01, 0x10, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16, 0x01,
	0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x61, 0x66, 0x66,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x66, 0x66, 0x16, 0x01, 0x00, 0x00, 0x00, 0x10,
	0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x55, 0x55, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01,
	0x11, 0x55, 0x55, 0x11, 0x55, 0x55, 0x15, 0x01, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x00, 0x10, 0x11, 0x55, 0x55, 0x11, 0x01, 0x00,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x00, 0x10, 0x51, 0x55,
	0x55, 0x15, 0x01, 0x00, 0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x15, 0x51, 0x55, 0x55, 0x01, 0x00, 0x00, 0x11, 0x55,
	0x55, 0x11, 0x00, 0x00, 0x10, 0x55, 0x55, 0x15, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x10, 0x55, 0x55, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x51, 0x55, 0x55, 0x01, 0x00, 0x10, 0x11, 0x11, 0x55, 0x55, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44, 0x14, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x11,
	0x41, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x11, 0x44, 0x44, 0x11, 0x00, 0x00,
	0x10, 0x41, 0x44, 0x14, 0x41, 0x44, 0x14, 0x01, 0x10, 0x44, 0x44, 0x11,
	0x11, 0x44, 0x44, 0x01, 0x00, 0x00, 0x41, 0x44, 0x44, 0x14, 0x00, 0x00,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x10, 0x44, 0x44,
	0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x44, 0x44, 0x01,
	0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x31, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x01, 0x11, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x00, 0x10, 0x33, 0x33,
	0x33, 0x33, 0x01, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x00, 0x00, 0x10, 0x31, 0x13, 0x01, 0x00, 0x00, 0x00, 0x11, 0x33, 0x11,
	0x11, 0x33, 0x11, 0x00, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x00, 0x00, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x31, 0x13, 0x01, 0x00, 0x10, 0x33, 0x33,
	0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x22, 0x22, 0x01,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01, 0x10, 0x11, 0x01, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xE1, 0x1E, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0xE1, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0xDD, 0xDD, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD1, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xDD, 0xDD, 0x01, 0xD1, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xCC, 0xCC,
	0x1C, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x11, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x11, 0xCC,
	0xCC, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0xB1, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x10, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xB1, 0xBB, 0xBB, 0x1B, 0x10, 0xBB, 0xBB, 0x11,
	0xB1, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x10, 0xBB, 0xBB, 0x11, 0x11, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x00, 0x00, 0x11, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x11, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x1A, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x00, 0x10, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xA1, 0xAA, 0xAA, 0x1A, 0x10, 0xAA, 0xAA, 0x11, 0xAA, 0xAA, 0x1A, 0x01,
	0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x1A,
	0xA1, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0x91,
	0x19, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x91, 0x99, 0x99, 0x99,
	0x19, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x11,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x00, 0x10, 0x11, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x99, 0x99, 0x11,
	0x10, 0x99, 0x99, 0x91, 0x99, 0x99, 0x11, 0x00, 0x00, 0x00, 0x10, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x81, 0x88, 0x88, 0x88, 0x18, 0x00, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x11, 0x11, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x18, 0x01, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x11, 0x77, 0x77, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x66, 0x66, 0x16, 0x01, 0x00, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x61, 0x16, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x11, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x51,
	0x55, 0x55, 0x11, 0x00, 0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x14, 0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x14, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x41, 0x44, 0x44, 0x14, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00, 0x10, 0x44, 0x44, 0x11,
	0x11, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x11, 0x44, 0x44, 0x14, 0x01,
	0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13,
	0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x31, 0x33, 0x33, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x31, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x00, 0x31, 0x33, 0x33,
	0x33, 0x33, 0x13, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x31, 0x33, 0x33, 0x11, 0x31, 0x33, 0x33, 0x01, 0x00, 0x31, 0x33, 0x33,
	0x33, 0x33, 0x13, 0x00, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x01, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x01, 0x11, 0x11, 0x11, 0x01,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE,
	0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xE1, 0xEE, 0xEE, 0x01, 0x00,
	0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE,
	0x1E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xE1, 0x1E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xD1, 0xDD, 0x1D, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xDD,
	0xDD, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0xCC, 0xCC, 0x1C, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0xCC,
	0xCC, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x11, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x11, 0xCC, 0x1C,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC1, 0xCC, 0xCC, 0x1C, 0x01, 0x00,
	0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x1B, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0xB1, 0xBB, 0xBB,
	0xBB, 0xBB, 0x1B, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x11, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB,
	0xBB, 0x11, 0x00, 0x00, 0x10, 0xB1, 0xBB, 0xBB, 0x11, 0x10, 0x11, 0x01,
	0x00, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x00, 0xA1, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A,
	0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x00, 0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x00,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x00, 0x10, 0xA1, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA,
	0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x1A, 0x01, 0x00,
	0x11, 0xAA, 0xAA, 0xAA, 0x1A, 0x11, 0xAA, 0x01, 0x10, 0xA1, 0xAA, 0x1A,
	0xA1, 0xAA, 0x1A, 0x01, 0x11, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x91, 0x99, 0x19, 0x11, 0x11, 0x00, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x91, 0x19, 0x99, 0x99, 0x01, 0x10, 0x91, 0x99, 0x19,
	0x91, 0x99, 0x19, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x11, 0x11, 0x91, 0x99, 0x99, 0x19, 0x01, 0x00, 0x10, 0x99, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x99, 0x99, 0x99, 0x01, 0x00, 0x91, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x81, 0x88,
	0x18, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x18, 0x81, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x00, 0x11, 0x88, 0x88, 0x88, 0x88, 0x11, 0x00,
	0x10, 0x88, 0x88, 0x11, 0x11, 0x88, 0x88, 0x01, 0x00, 0x00, 0x11, 0x88,
	0x88, 0x88, 0x11, 0x00, 0x00, 0x10, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88,
	0x88, 0x88, 0x01, 0x00, 0x81, 0x18, 0x11, 0x88, 0x88, 0x88, 0x18, 0x01,
	0x10, 0x88, 0x18, 0x01, 0x10, 0x81, 0x88, 0x01, 0x10, 0x77, 0x77, 0x11,
	0x11, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x00, 0x00, 0x71, 0x77, 0x17, 0x00, 0x00, 0x00,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x71, 0x77, 0x77,
	0x77, 0x77, 0x17, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x00, 0x10, 0x71, 0x77, 0x77, 0x17, 0x01, 0x00, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x00, 0x10, 0x71, 0x77, 0x77, 0x17, 0x01, 0x00,
	0x00, 0x10, 0x71, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x17, 0x01, 0x00,
	0x11, 0x11, 0x10, 0x71, 0x77, 0x77, 0x11, 0x00, 0x10, 0x77, 0x17, 0x11,
	0x11, 0x71, 0x77, 0x01, 0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x61, 0x66, 0x16, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x00, 0x11, 0x66, 0x66, 0x66, 0x66, 0x11, 0x00,
	0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01, 0x00, 0x11, 0x66, 0x66,
	0x66, 0x66, 0x11, 0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01,
	0x00, 0x11, 0x66, 0x66, 0x66, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x66, 0x66, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x66, 0x16, 0x01, 0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01,
	0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x01, 0x11, 0x55, 0x55, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x01, 0x00, 0x00, 0x51, 0x55,
	0x15, 0x11, 0x11, 0x00, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x10, 0x51, 0x55, 0x55, 0x15, 0x01, 0x00, 0x10, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x01, 0x10, 0x51, 0x55, 0x15, 0x51, 0x55, 0x15, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x51, 0x55, 0x55,
	0x15, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x55,
	0x55, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00,
	0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01, 0x11, 0x44, 0x44, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x11,
	0x41, 0x44, 0x44, 0x14, 0x00, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x41, 0x44, 0x44, 0x44, 0x14, 0x00,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x11, 0x44,
	0x44, 0x11, 0x00, 0x00, 0x10, 0x41, 0x44, 0x14, 0x41, 0x44, 0x14, 0x01,
	0x10, 0x44, 0x44, 0x11, 0x11, 0x44, 0x44, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x00, 0x00, 0x10, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x31, 0x33, 0x33, 0x13, 0x31, 0x33, 0x33, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x00, 0x00, 0x31, 0x33, 0x33, 0x33, 0x13, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x31, 0x13, 0x01, 0x00, 0x00,
	0x00, 0x11, 0x33, 0x11, 0x11, 0x33, 0x11, 0x00, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x31,
	0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x33, 0x33, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x21, 0x22, 0x22, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x21, 0x22, 0x22, 0x12, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x01,
	0x10, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x10, 0x22, 0x22, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0xFF, 0xFF, 0x01,
	0x10, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x11, 0xFF, 0xFF, 0x01, 0x00,
	0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0xF1, 0xFF, 0x1F,
	0xF1, 0xFF, 0x1F, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0x11, 0x00, 0x00, 0x00,
	0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,
	0x00, 0xF1, 0xFF, 0x1F, 0xF1, 0xFF, 0x1F, 0x00, 0x00, 0x10, 0xFF, 0xFF,
	0x11, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,
	0x00, 0xF1, 0xFF, 0x1F, 0xF1, 0xFF, 0x1F, 0x00, 0x00, 0x10, 0xFF, 0xFF,
	0x11, 0x00, 0x00, 0x00, 0x00, 0xF1, 0xFF, 0x1F, 0xF1, 0xFF, 0x1F, 0x00,
	0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x00, 0xE1, 0xEE, 0x1E, 0xE1, 0xEE, 0x1E, 0x00,
	0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x1E,
	0xE1, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0xE1, 0xEE, 0x1E,
	0xE1, 0xEE, 0x1E, 0x00, 0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x00,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0xE1, 0xEE, 0x1E,
	0xE1, 0xEE, 0x1E, 0x00, 0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x00,
	0x00, 0xE1, 0xEE, 0x1E, 0xE1, 0xEE, 0x1E, 0x00, 0x10, 0xEE, 0xEE, 0x1E,
	0xE1, 0xEE, 0xEE, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x11, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x11, 0x11, 0xDD, 0xDD, 0x01,
	0x00, 0xD1, 0xDD, 0x1D, 0xD1, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x11, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x1D, 0xD1, 0xDD, 0xDD, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x11,
	0x11, 0xDD, 0xDD, 0x01, 0x00, 0xD1, 0xDD, 0x1D, 0xD1, 0xDD, 0x1D, 0x00,
	0x00, 0x00, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x11,
	0x11, 0xDD, 0xDD, 0x01, 0x00, 0xD1, 0xDD, 0x1D, 0xD1, 0xDD, 0x1D, 0x00,
	0x00, 0x00, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0xDD, 0xDD, 0x1D, 0xD1, 0xDD, 0xDD, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0xCC, 0xCC, 0x1C, 0xC1, 0xCC, 0xCC, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x00, 0x10, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB,
	0xBB, 0x01, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x10, 0xAA, 0xAA,
	0xAA, 0x01, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00,
	0x00, 0x10, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x00, 0x10, 0x11, 0x99, 0x99, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x81, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88,
	0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01, 0x10, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x11, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x11,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x11, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x11, 0x10, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x55,
	0x55, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x14, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x41, 0x44, 0x44,
	0x44, 0x44, 0x14, 0x00, 0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00,
	0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x11, 0x11, 0x33, 0x33, 0x11, 0x11, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x13, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13, 0x10, 0x11, 0x11, 0x33,
	0x33, 0x11, 0x11, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x31, 0x33, 0x33, 0x33, 0x33, 0x13, 0x00,
	0x00, 0x31, 0x33, 0x33, 0x33, 0x33, 0x13, 0x00, 0x00, 0x31, 0x33, 0x33,
	0x33, 0x33, 0x13, 0x00, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x22,
	0x12, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0x22, 0x12, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x00, 0xF1, 0xFF, 0x1F, 0xF1, 0xFF, 0x1F, 0x00, 0x10, 0xFF, 0xFF, 0x01,
	0x10, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0xF1,
	0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0x01, 0x00, 0xF1, 0xFF, 0x1F, 0xF1, 0xFF, 0x1F, 0x00,
	0x00, 0x10, 0xFF, 0xFF, 0x11, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x10, 0xFF, 0xFF, 0x11, 0x00, 0x00, 0x00,
	0x10, 0xFF, 0xFF, 0x01, 0x10, 0xFF, 0xFF, 0x01, 0x00, 0xF1, 0xFF, 0x1F,
	0xF1, 0xFF, 0x1F, 0x00, 0x10, 0xFF, 0xFF, 0x01, 0x10, 0xFF, 0xFF, 0x01,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x10, 0xFF,
	0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0xE1, 0xEE, 0x1E, 0xE1, 0xEE, 0x1E, 0x00, 0x00, 0x10, 0xE1, 0xEE,
	0x1E, 0x01, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0xEE,
	0xEE, 0x01, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0x01, 0xE1, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0x01, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x11, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0xD1, 0xDD, 0x1D,
	0xD1, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0x00,
	0x10, 0xDD, 0xDD, 0x11, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x11, 0xDD,
	0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0x01, 0x10, 0x11, 0x11, 0xDD, 0xDD, 0x11, 0x11, 0x01,
	0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0x11,
	0x11, 0xDD, 0xDD, 0x01, 0x11, 0xDD, 0xDD, 0x11, 0x11, 0xDD, 0xDD, 0x01,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0xC1, 0xCC, 0xCC, 0xCC,
	0xCC, 0xCC, 0xCC, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0xCC, 0x1C, 0xC1, 0xCC, 0x11, 0xCC, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0xCC, 0xCC, 0xCC,
	0xCC, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01, 0x00, 0x10, 0xCC, 0xCC,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x1C, 0xC1, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x10, 0xCC,
	0xCC, 0x11, 0x01, 0x00, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0x1B, 0xB1,
	0xBB, 0x11, 0x11, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x11, 0x11, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x10, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x01,
	0x10, 0xB1, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x01, 0x10, 0xBB, 0xBB, 0x11,
	0x11, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00,
	0x11, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0x1A, 0xA1, 0xAA, 0x11, 0x11, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0x11, 0xAA, 0xAA, 0x11, 0x11, 0x01, 0x00, 0x00, 0x11, 0xAA, 0xAA,
	0xAA, 0xAA, 0x11, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x00, 0x10, 0x11, 0xAA, 0xAA, 0x11, 0x01, 0x00, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x99, 0x19, 0x91, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x01, 0x00, 0x00, 0x11, 0x91, 0x99, 0x99, 0x19, 0x11, 0x00,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x00, 0x10, 0x99, 0x99,
	0x99, 0x99, 0x01, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x11,
	0x11, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00,
	0x00, 0x81, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00, 0x10, 0x88, 0x88, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x17, 0x00, 0x00, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x10, 0x77, 0x17, 0x71, 0x77, 0x11, 0x11, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x11, 0x77, 0x77, 0x11, 0x11, 0x01, 0x00, 0x00, 0x11, 0x11, 0x77,
	0x77, 0x11, 0x11, 0x00, 0x10, 0x77, 0x77, 0x71, 0x77, 0x77, 0x77, 0x01,
	0x00, 0x10, 0x11, 0x77, 0x77, 0x11, 0x01, 0x00, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x66, 0x11, 0x66, 0x16, 0x11, 0x11, 0x01,
	0x10, 0x66, 0x16, 0x61, 0x66, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x01, 0x10, 0x61, 0x66, 0x66,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16, 0x00,
	0x10, 0x66, 0x66, 0x61, 0x66, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x11, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x11, 0x55, 0x15, 0x51, 0x55, 0x01, 0x10, 0x55, 0x15, 0x51,
	0x55, 0x11, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x15, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00, 0x10, 0x55, 0x55, 0x11,
	0x51, 0x55, 0x11, 0x01, 0x00, 0x10, 0x11, 0x55, 0x55, 0x01, 0x00, 0x00,
	0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x14, 0x41, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x11, 0x11, 0x44, 0x44, 0x11, 0x11, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x41, 0x44,
	0x44, 0x14, 0x00, 0x00, 0x11, 0x44, 0x44, 0x01, 0x41, 0x44, 0x01, 0x00,
	0x00, 0x10, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00, 0x31, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x13, 0x31, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00,
	0x31, 0x33, 0x33, 0x01, 0x31, 0x33, 0x01, 0x00, 0x00, 0x10, 0x33, 0x33,
	0x33, 0x01, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x21, 0x22, 0x22, 0x01,
	0x21, 0x22, 0x01, 0x00, 0x00, 0x10, 0x22, 0x22, 0x22, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x01, 0x11, 0x11, 0x00, 0x00, 0x00, 0x11, 0x11, 0x01, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0xF1, 0xFF, 0x11, 0xF1, 0x1F, 0x00,
	0x00, 0x10, 0xF1, 0xFF, 0x11, 0xF1, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xFF, 0xFF, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x11, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11,
	0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0xFF, 0xFF, 0x01, 0x00,
	0x00, 0x11, 0xFF, 0xFF, 0x1F, 0xFF, 0x1F, 0x00, 0x00, 0x11, 0xFF, 0xFF,
	0x1F, 0xFF, 0x1F, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0xFF,
	0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00,
	0x00, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x00, 0x00, 0x10, 0xE1,
	0xEE, 0x1E, 0x01, 0x00, 0x00, 0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00,
	0x00, 0x00, 0x10, 0xE1, 0xEE, 0x1E, 0x01, 0x00, 0x00, 0xE1, 0xEE, 0xE1,
	0xEE, 0xEE, 0x11, 0x00, 0x00, 0xE1, 0xEE, 0xE1, 0xEE, 0xEE, 0x11, 0x00,
	0x00, 0x11, 0xEE, 0xEE, 0xEE, 0xEE, 0x1E, 0x00, 0x00, 0xE1, 0xEE, 0xEE,
	0xEE, 0xEE, 0x1E, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0xE1, 0x1E, 0x00, 0x10, 0xE1, 0x1E, 0x01,
	0x00, 0xE1, 0x1E, 0x00, 0x10, 0xE1, 0x1E, 0x01, 0x00, 0x00, 0x10, 0xEE,
	0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0xEE, 0x1E, 0x11, 0xEE, 0x1E,
	0xE1, 0xEE, 0x11, 0xE1, 0xEE, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0x11, 0x00, 0x00, 0x00, 0xD1, 0x1D, 0x11, 0xDD, 0x1D, 0x01, 0x00,
	0x00, 0xD1, 0x1D, 0x11, 0xDD, 0x1D, 0x01, 0x00, 0x00, 0xD1, 0xDD, 0xDD,
	0xDD, 0xDD, 0x1D, 0x00, 0x00, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0x1D, 0x00,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x00, 0xD1, 0x1D, 0x00, 0x11, 0xDD, 0xDD, 0x01, 0x00, 0xD1, 0x1D, 0x00,
	0x11, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00,
	0x00, 0x10, 0xD1, 0xDD, 0x11, 0xD1, 0xDD, 0x11, 0x11, 0xDD, 0x1D, 0x11,
	0xDD, 0x1D, 0x01, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0xC1, 0xCC, 0x1C, 0xC1, 0xCC, 0x1C, 0x00,
	0x00, 0xC1, 0xCC, 0x1C, 0xC1, 0xCC, 0x1C, 0x00, 0x00, 0x00, 0x10, 0xCC,
	0xCC, 0x01, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01, 0x00, 0xC1, 0x1C, 0x10,
	0xC1, 0xCC, 0xCC, 0x01, 0x00, 0xC1, 0x1C, 0x10, 0xC1, 0xCC, 0xCC, 0x01,
	0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x11, 0xCC, 0x1C,
	0x11, 0xCC, 0x1C, 0x01, 0x10, 0xC1, 0xCC, 0x11, 0xC1, 0xCC, 0x11, 0x00,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x10, 0xBB, 0xBB,
	0xBB, 0x01, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x1B, 0x11, 0xBB, 0xBB, 0x01,
	0x00, 0xB1, 0xBB, 0x1B, 0xB1, 0xBB, 0x1B, 0x00, 0x00, 0xB1, 0xBB, 0x1B,
	0xB1, 0xBB, 0x1B, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x10, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0xBB, 0xBB, 0x01, 0x00, 0xB1, 0x1B, 0x11, 0xBB, 0xBB, 0x1B, 0x01,
	0x00, 0xB1, 0x1B, 0x11, 0xBB, 0xBB, 0x1B, 0x01, 0x00, 0x00, 0x10, 0xBB,
	0xBB, 0x01, 0x00, 0x00, 0x10, 0xB1, 0xBB, 0x11, 0xB1, 0xBB, 0x11, 0x00,
	0x00, 0x11, 0xBB, 0x1B, 0x11, 0xBB, 0x1B, 0x01, 0x10, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0x01, 0x00, 0x00,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0xAA, 0x11, 0xAA, 0xAA, 0x01, 0x00, 0xA1, 0xAA, 0x1A,
	0xA1, 0xAA, 0x1A, 0x00, 0x00, 0xA1, 0xAA, 0x1A, 0xA1, 0xAA, 0x1A, 0x00,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x00, 0xA1, 0x1A, 0xA1, 0xAA, 0xAA, 0x11, 0x00, 0x00, 0xA1, 0x1A, 0xA1,
	0xAA, 0xAA, 0x11, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x11, 0xAA, 0x1A, 0x11, 0xAA, 0x1A, 0x01, 0x00, 0x00, 0x10, 0xA1, 0xAA,
	0x11, 0xA1, 0xAA, 0x11, 0x10, 0x11, 0x11, 0x11, 0x11, 0x99, 0x99, 0x01,
	0x00, 0x10, 0x11, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01,
	0x10, 0x99, 0x99, 0x11, 0x11, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x99,
	0x19, 0x99, 0x99, 0x01, 0x00, 0x91, 0x99, 0x99, 0x99, 0x99, 0x19, 0x00,
	0x00, 0x91, 0x99, 0x99, 0x99, 0x99, 0x19, 0x00, 0x10, 0x11, 0x11, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x11, 0x11, 0x99,
	0x99, 0x19, 0x01, 0x00, 0x00, 0x11, 0x11, 0x99, 0x99, 0x19, 0x11, 0x01,
	0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x91, 0x99, 0x11, 0x91,
	0x99, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x99, 0x19, 0x11, 0x99, 0x19,
	0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88,
	0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x11, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00, 0x00, 0x81, 0x88, 0x88,
	0x88, 0x88, 0x18, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x10, 0x81, 0x88, 0x88, 0x11, 0x11, 0x01,
	0x00, 0x10, 0x81, 0x88, 0x88, 0x81, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88,
	0x88, 0x01, 0x00, 0x00, 0x81, 0x88, 0x11, 0x81, 0x88, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x11, 0x88, 0x18, 0x11, 0x88, 0x18, 0x10, 0x77, 0x77, 0x77,
	0x77, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x11, 0x77, 0x77, 0x17, 0x77, 0x77, 0x01, 0x00, 0x11, 0x77, 0x77,
	0x17, 0x77, 0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00,
	0x11, 0x77, 0x17, 0x11, 0x77, 0x17, 0x01, 0x00, 0x00, 0x10, 0x71, 0x77,
	0x11, 0x71, 0x77, 0x11, 0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x61,
	0x66, 0x66, 0x66, 0x01, 0x00, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16, 0x00,
	0x00, 0x61, 0x66, 0x66, 0x66, 0x66, 0x16, 0x00, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x10, 0x61, 0x66, 0x66,
	0x11, 0x61, 0x66, 0x01, 0x10, 0x61, 0x66, 0x66, 0x61, 0x66, 0x66, 0x01,
	0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x61, 0x66, 0x11,
	0x61, 0x66, 0x11, 0x00, 0x00, 0x11, 0x66, 0x16, 0x11, 0x66, 0x16, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x11, 0x00, 0x11, 0x11, 0x55,
	0x55, 0x11, 0x11, 0x00, 0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x11, 0x55, 0x55, 0x55, 0x01,
	0x00, 0x51, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00, 0x00, 0x51, 0x55, 0x55,
	0x55, 0x55, 0x15, 0x00, 0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x55, 0x55, 0x15, 0x51, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x15, 0x51, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55,
	0x55, 0x01, 0x00, 0x00, 0x00, 0x11, 0x55, 0x15, 0x11, 0x55, 0x15, 0x01,
	0x10, 0x51, 0x55, 0x11, 0x51, 0x55, 0x11, 0x00, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x14, 0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x11, 0x41, 0x44, 0x44, 0x01, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x44, 0x44, 0x11, 0x11, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x44, 0x44, 0x11, 0x41, 0x44, 0x11, 0x01, 0x10, 0x44, 0x44, 0x11,
	0x11, 0x11, 0x44, 0x01, 0x00, 0x00, 0x10, 0x44, 0x44, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x41, 0x44, 0x11, 0x41, 0x44, 0x11, 0x11, 0x44, 0x14, 0x11,
	0x44, 0x14, 0x01, 0x00, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13,
	0x00, 0x31, 0x33, 0x33, 0x33, 0x33, 0x13, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01,
	0x11, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x31, 0x13, 0x01,
	0x31, 0x33, 0x33, 0x01, 0x10, 0x31, 0x13, 0x01, 0x00, 0x10, 0x33, 0x01,
	0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x33,
	0x13, 0x11, 0x33, 0x13, 0x31, 0x33, 0x11, 0x31, 0x33, 0x11, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x11, 0x11, 0x00, 0x00, 0x10, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x01, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0,
	0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xF0, 0xFF,
	0xF0, 0xFF, 0xF0, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x0F, 0xF0, 0x0F, 0xF0,
	0x0F, 0xF0, 0x0F, 0xF0, 0xFF, 0xF0, 0xFF, 0xF0, 0xFF, 0xF0, 0xFF, 0xF0,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x31, 0x75, 0xB9, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x0E, 0x00, 0x0E,
	0x00, 0x0E, 0x00, 0x0E, 0xE0, 0x0E, 0xE0, 0x0E, 0xE0, 0x0E, 0xE0, 0x0E,
	0xEE, 0x0E, 0xEE, 0x0E, 0xEE, 0x0E, 0xEE, 0x0E, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x53, 0x97, 0xBB, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x0D, 0x00, 0x0D, 0x00, 0x0D, 0x00, 0x0D, 0x00,
	0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0xDD, 0x0D, 0xDD,
	0x0D, 0xDD, 0x0D, 0xDD, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x55, 0x55, 0x55, 0x13,
	0x00, 0x00, 0x00, 0x00, 0x75, 0xB9, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
	0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xCC, 0xC0, 0xCC, 0xC0, 0xCC, 0xC0, 0xCC,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x77, 0x77, 0x77, 0x35, 0x01, 0x00, 0x00, 0x00,
	0x97, 0xBB, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xB0, 0x00, 0xB0, 0x00,
	0xB0, 0x00, 0xB0, 0x00, 0x0B, 0xB0, 0x0B, 0xB0, 0x0B, 0xB0, 0x0B, 0xB0,
	0xBB, 0xB0, 0xBB, 0xB0, 0xBB, 0xB0, 0xBB, 0xB0, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x99, 0x99, 0x99, 0x57, 0x13, 0x00, 0x00, 0x00, 0xB9, 0xBB, 0xBB, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x0A, 0x00, 0x0A, 0x00, 0x0A, 0x00, 0x0A,
	0xA0, 0x0A, 0xA0, 0x0A, 0xA0, 0x0A, 0xA0, 0x0A, 0xAA, 0x0A, 0xAA, 0x0A,
	0xAA, 0x0A, 0xAA, 0x0A, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0xBB, 0xBB, 0xBB, 0x79,
	0x35, 0x01, 0x00, 0x00, 0xBB, 0xBB, 0xBB, 0xBB, 0x9B, 0x57, 0x13, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x09, 0x00, 0x09, 0x00, 0x09, 0x00, 0x09, 0x00, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x99, 0x09, 0x99, 0x09, 0x99, 0x09, 0x99,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0xBB, 0xBB, 0xBB, 0x9B, 0x57, 0x13, 0x00, 0x00,
	0xBB, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x80, 0x00, 0x80,
	0x00, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
	0x80, 0x88, 0x80, 0x88, 0x80, 0x88, 0x80, 0x88, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0xBB, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x00, 0xBB, 0xBB, 0xBB, 0x9B,
	0x57, 0x13, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,
	0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x77, 0x70, 0x77, 0x70,
	0x77, 0x70, 0x77, 0x70, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0xBB, 0xBB, 0xBB, 0xBB,
	0x9B, 0x57, 0x13, 0x00, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0x60, 0x06, 0x60, 0x06,
	0x60, 0x06, 0x60, 0x06, 0x66, 0x06, 0x66, 0x06, 0x66, 0x06, 0x66, 0x06,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0xB9, 0xBB, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x99, 0x99, 0x99, 0x57, 0x13, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x05, 0x00, 0x05, 0x00,
	0x05, 0x00, 0x05, 0x00, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
	0x05, 0x55, 0x05, 0x55, 0x05, 0x55, 0x05, 0x55, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x97, 0xBB, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x77, 0x77, 0x77, 0x35,
	0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x44, 0x40, 0x44,
	0x40, 0x44, 0x40, 0x44, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x75, 0xB9, 0xBB, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x55, 0x55, 0x55, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x03, 0x30, 0x03, 0x30,
	0x03, 0x30, 0x03, 0x30, 0x33, 0x30, 0x33, 0x30, 0x33, 0x30, 0x33, 0x30,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x02, 0x00, 0x02,
	0x00, 0x02, 0x00, 0x02, 0x20, 0x02, 0x20, 0x02, 0x20, 0x02, 0x20, 0x02,
	0x22, 0x02, 0x22, 0x02, 0x22, 0x02, 0x22, 0x02, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x31, 0x75, 0xB9, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x22, 0x02, 0x22,
	0x02, 0x22, 0x02, 0x22, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0x79, 0x35, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x9B, 0x57, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0xBB, 0x79, 0x35, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0x9B, 0x57,
	0x00, 0x00, 0x00, 0x00, 0x31, 0x55, 0x55, 0x55, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x55, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0xBB, 0x79, 0x00, 0x00, 0x00, 0x10,
	0x53, 0x77, 0x77, 0x77, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0xBB, 0xBB, 0x9B, 0x00, 0x00, 0x00, 0x31, 0x75, 0x99, 0x99, 0x99,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x31, 0x75, 0xB9, 0xBB, 0xBB, 0xBB, 0xBB,
	0x00, 0x00, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xBB, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0xBB, 0x00, 0x00, 0x31, 0x75,
	0xB9, 0xBB, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x31, 0x75,
	0xB9, 0xBB, 0xBB, 0xBB, 0x00, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0xBB,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB,
	0x00, 0x31, 0x75, 0xB9, 0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xBB, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x31, 0x75, 0x99, 0x99, 0x99, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0xBB, 0xBB, 0x9B, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10,
	0x53, 0x77, 0x77, 0x77, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0xBB, 0x79,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x31, 0x55, 0x55, 0x55,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0xBB, 0x9B, 0x57, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x55, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x55, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33, 0x10, 0x53, 0x97, 0xBB,
	0xBB, 0xBB, 0x79, 0x35, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x10, 0x53, 0x97, 0xBB, 0xBB, 0x9B, 0x57, 0x13,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x53, 0x97, 0xBB, 0xBB, 0x79, 0x35, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0x1E, 0x00, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01,
	0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE,
	0xEE, 0xEE, 0xEE, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x11,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0xD1, 0xDD, 0xDD,
	0xDD, 0xDD, 0x1D, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x10, 0xDD, 0xDD, 0xDD,
	0xDD, 0xDD, 0xDD, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x01,
	0x10, 0xCC, 0xCC, 0xCC, 0x1C, 0x11, 0xCC, 0x1C, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01,
	0xC1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x11, 0xCC, 0xCC, 0x1C,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x1C,
	0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0xCC,
	0xCC, 0xCC, 0xCC, 0x01, 0x00, 0x11, 0x11, 0xCC, 0xCC, 0x11, 0x11, 0x00,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11,
	0x11, 0xCC, 0xCC, 0x01, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11, 0x01,
	0xC1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x1C, 0xC1, 0xCC, 0xCC, 0xC1,
	0xCC, 0xCC, 0xCC, 0x1C, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x01,
	0x10, 0xCC, 0xCC, 0x11, 0x11, 0xCC, 0xCC, 0x01, 0x10, 0xBB, 0xBB, 0xBB,
	0xBB, 0xB1, 0xBB, 0x1B, 0x10, 0xBB, 0xBB, 0x11, 0xB1, 0xBB, 0x1B, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0xB1, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0xBB, 0x11, 0xB1, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x01,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x1B, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01,
	0x00, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x11, 0x11, 0x11, 0x11, 0x01, 0xB1, 0xBB, 0xBB, 0xBB,
	0xBB, 0xBB, 0xBB, 0x1B, 0xB1, 0xBB, 0xBB, 0xB1, 0xBB, 0xBB, 0xBB, 0x1B,
	0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x10, 0xBB, 0xBB, 0x01,
	0x10, 0xBB, 0xBB, 0x01, 0x10, 0xAA, 0x1A, 0xA1, 0xAA, 0xAA, 0xAA, 0x11,
	0x10, 0xAA, 0xAA, 0x11, 0xAA, 0xAA, 0x11, 0x00, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x11, 0xA1, 0xAA, 0x1A, 0x11, 0xAA, 0xAA, 0x11,
	0x01, 0x11, 0xAA, 0xAA, 0x1A, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0x11, 0x11, 0xAA, 0xAA, 0x11, 0x11, 0x01, 0x00, 0x10, 0xAA, 0xAA,
	0xAA, 0xAA, 0x01, 0x00, 0x10, 0xAA, 0xAA, 0x11, 0x11, 0xAA, 0xAA, 0x01,
	0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xA1, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0x01, 0xA1, 0xAA, 0x1A, 0xA1, 0x1A, 0xA1, 0xAA, 0x1A,
	0xA1, 0xAA, 0x1A, 0xA1, 0x1A, 0xA1, 0xAA, 0x1A, 0x10, 0xAA, 0xAA, 0x11,
	0x11, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01, 0x10, 0xAA, 0xAA, 0x01,
	0x10, 0x99, 0x19, 0x11, 0x99, 0x99, 0x19, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x99, 0x99, 0x11, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x91, 0x99, 0x19, 0x10, 0x99, 0x99, 0x01, 0x00, 0x10, 0x91, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x11, 0x99, 0x99, 0x01, 0x00,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99,
	0x99, 0x01, 0x00, 0x00, 0x00, 0x10, 0x99, 0x19, 0x91, 0x99, 0x01, 0x00,
	0x10, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x11,
	0x11, 0x99, 0x99, 0x01, 0x10, 0x91, 0x99, 0x99, 0x99, 0x99, 0x99, 0x01,
	0x91, 0x99, 0x19, 0x91, 0x19, 0x91, 0x99, 0x19, 0x91, 0x99, 0x19, 0x91,
	0x19, 0x91, 0x99, 0x19, 0x10, 0x99, 0x99, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x99, 0x99, 0x01, 0x10, 0x99, 0x99, 0x01, 0x10, 0x88, 0x18, 0x10,
	0x88, 0x88, 0x18, 0x00, 0x10, 0x88, 0x88, 0x11, 0x81, 0x88, 0x18, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x88, 0x18,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x10, 0x81, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x10, 0x88, 0x88, 0x11, 0x88, 0x88, 0x01, 0x00, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00,
	0x00, 0x10, 0x88, 0x18, 0x81, 0x88, 0x01, 0x00, 0x10, 0x88, 0x88, 0x88,
	0x88, 0x88, 0x88, 0x01, 0x10, 0x88, 0x88, 0x18, 0x81, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x11, 0x11, 0x88, 0x88, 0x01, 0x81, 0x88, 0x18, 0x81,
	0x18, 0x81, 0x88, 0x18, 0x81, 0x88, 0x18, 0x81, 0x18, 0x81, 0x88, 0x18,
	0x10, 0x81, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x01,
	0x10, 0x88, 0x88, 0x01, 0x10, 0x77, 0x17, 0x10, 0x77, 0x77, 0x17, 0x00,
	0x10, 0x77, 0x77, 0x01, 0x11, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x77, 0x17, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x11, 0x77, 0x77, 0x17, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x11,
	0x77, 0x77, 0x01, 0x00, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77,
	0x77, 0x77, 0x01, 0x00, 0x10, 0x77, 0x77, 0x11, 0x11, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x17, 0x71, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x77, 0x77, 0x01, 0x71, 0x77, 0x17, 0x71, 0x17, 0x71, 0x77, 0x17,
	0x71, 0x77, 0x17, 0x71, 0x17, 0x71, 0x77, 0x17, 0x10, 0x71, 0x77, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x10, 0x77, 0x77, 0x01,
	0x10, 0x66, 0x16, 0x11, 0x66, 0x66, 0x16, 0x01, 0x10, 0x66, 0x66, 0x11,
	0x11, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x61, 0x66, 0x16, 0x10, 0x66, 0x66, 0x01, 0x10, 0x61, 0x66, 0x66,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x66, 0x66, 0x11, 0x66, 0x66, 0x01, 0x00,
	0x10, 0x66, 0x66, 0x11, 0x11, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x66,
	0x66, 0x01, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x01, 0x00,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x11, 0x61, 0x16,
	0x61, 0x16, 0x11, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01,
	0x61, 0x66, 0x16, 0x61, 0x16, 0x61, 0x66, 0x16, 0x61, 0x66, 0x16, 0x61,
	0x16, 0x61, 0x66, 0x16, 0x10, 0x66, 0x66, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x66, 0x66, 0x01, 0x10, 0x66, 0x66, 0x01, 0x10, 0x55, 0x15, 0x51,
	0x55, 0x55, 0x55, 0x11, 0x10, 0x55, 0x55, 0x51, 0x55, 0x55, 0x55, 0x01,
	0x11, 0x55, 0x55, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x55, 0x15,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x15, 0x11, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x55, 0x55, 0x01, 0x00, 0x10, 0x55, 0x55, 0x55,
	0x55, 0x55, 0x55, 0x01, 0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x55, 0x55, 0x11, 0x11, 0x00, 0x10, 0x55, 0x55, 0x11,
	0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x15, 0x51, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x51, 0x55, 0x15, 0x51,
	0x15, 0x51, 0x55, 0x15, 0x51, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x15,
	0x10, 0x55, 0x55, 0x11, 0x11, 0x55, 0x55, 0x01, 0x10, 0x55, 0x55, 0x01,
	0x10, 0x55, 0x55, 0x01, 0x10, 0x44, 0x44, 0x44, 0x44, 0x41, 0x44, 0x14,
	0x10, 0x44, 0x44, 0x41, 0x44, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x44, 0x14, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x01, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14, 0x01,
	0x00, 0x00, 0x10, 0x44, 0x44, 0x01, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44,
	0x44, 0x44, 0x14, 0x00, 0x10, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x01,
	0x10, 0x44, 0x44, 0x14, 0x41, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14,
	0x41, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x14, 0x10, 0x44, 0x44, 0x44,
	0x44, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01, 0x10, 0x44, 0x44, 0x01,
	0x10, 0x33, 0x33, 0x33, 0x13, 0x11, 0x33, 0x13, 0x10, 0x33, 0x33, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x31, 0x33, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x31, 0x33, 0x13, 0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33,
	0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x00,
	0x10, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0x33,
	0x33, 0x01, 0x00, 0x00, 0x00, 0x31, 0x33, 0x33, 0x33, 0x33, 0x13, 0x00,
	0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x13,
	0x31, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x31, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13, 0x11, 0x11, 0x11, 0x31,
	0x13, 0x11, 0x11, 0x11, 0x10, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x01,
	0x10, 0x33, 0x33, 0x01, 0x10, 0x33, 0x33, 0x01, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x10, 0x11, 0x11, 0x10, 0x21, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x10, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x10, 0x22, 0x12, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x11, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x00, 0x00,
	0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01, 0x10, 0x11, 0x11, 0x01,
	0x10, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0x1F, 0x00,
	0x00, 0x00, 0x10, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xF1,
	0x1F, 0x01, 0x00, 0x00, 0x00, 0x10, 0xF1, 0xFF, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xEE, 0xEE, 0xEE, 0xEE, 0x1E, 0x00,
	0x00, 0x00, 0x00, 0xE1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE,
	0x1E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xE1, 0xEE, 0xEE, 0x01, 0x00,
	0x00, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0x1E, 0x00, 0x00, 0x00, 0x10, 0xEE,
	0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEE, 0xEE, 0x01, 0x00, 0x00,
	0x00, 0x11, 0xEE, 0xEE, 0x1E, 0x01, 0x11, 0x11, 0x00, 0x11, 0xEE, 0xEE,
	0xEE, 0xEE, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x11, 0x11, 0x11, 0x00, 0x10, 0xEE, 0xEE, 0xEE, 0xEE, 0x01, 0x00,
	0x00, 0x10, 0xE1, 0xEE, 0xEE, 0x1E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x00, 0xD1,
	0x1D, 0x00, 0x00, 0x00, 0x00, 0x10, 0xD1, 0xDD, 0xDD, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x11, 0xDD, 0xDD, 0x1D, 0x01, 0x00, 0x00, 0x00, 0x10, 0xDD,
	0xDD, 0xDD, 0x1D, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xD1, 0xDD, 0xDD,
	0xDD, 0x11, 0xD1, 0x1D, 0x00, 0xD1, 0xDD, 0xDD, 0xDD, 0xDD, 0x1D, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0x1D,
	0x00, 0x10, 0xDD, 0xDD, 0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0xDD, 0xDD,
	0xDD, 0xDD, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xCC, 0xCC,
	0xCC, 0xCC, 0x1C, 0x00, 0x00, 0x10, 0x11, 0xC1, 0x1C, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x11, 0xCC, 0xCC, 0x1C, 0x01, 0x00, 0x00, 0x10, 0xC1, 0xCC,
	0xCC, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0x11, 0x11, 0x00,
	0x00, 0x00, 0x10, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC1,
	0x1C, 0x01, 0x00, 0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x1C,
	0x00, 0xC1, 0xCC, 0x1C, 0xC1, 0xCC, 0x1C, 0x00, 0x00, 0x00, 0x10, 0x11,
	0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0x1C, 0x00, 0x10, 0xCC, 0x1C,
	0xC1, 0xCC, 0x01, 0x00, 0x00, 0x10, 0x11, 0xC1, 0xCC, 0x1C, 0x01, 0x00,
	0x00, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x10, 0xBB, 0xBB, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x10, 0xB1,
	0xBB, 0xBB, 0x01, 0x00, 0x00, 0x10, 0xBB, 0xBB, 0x1B, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB,
	0xBB, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x01,
	0x10, 0xBB, 0x11, 0xB1, 0xBB, 0xBB, 0xBB, 0x11, 0x00, 0xB1, 0xBB, 0x1B,
	0xB1, 0xBB, 0x1B, 0x00, 0x00, 0x00, 0x11, 0xBB, 0xBB, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xBB,
	0xBB, 0xBB, 0xBB, 0x1B, 0x00, 0x10, 0xBB, 0x1B, 0xB1, 0xBB, 0x01, 0x00,
	0x00, 0x00, 0x11, 0xBB, 0xBB, 0x11, 0x00, 0x00, 0x00, 0x10, 0xBB, 0xBB,
	0xBB, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xA1, 0xAA, 0xAA, 0xAA, 0xAA, 0x1A, 0x00, 0x00, 0x10, 0xAA, 0xAA,
	0xAA, 0xAA, 0x01, 0x00, 0x00, 0x00, 0x10, 0xA1, 0xAA, 0xAA, 0x01, 0x00,
	0x00, 0x10, 0xAA, 0xAA, 0x1A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA,
	0xAA, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0x01, 0x00, 0x00,
	0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x10, 0x11, 0x01, 0x11,
	0xAA, 0xAA, 0x1A, 0x01, 0x00, 0xA1, 0xAA, 0x1A, 0xA1, 0xAA, 0x1A, 0x00,
	0x00, 0x00, 0xA1, 0xAA, 0xAA, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x10, 0xA1,
	0x1A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0xAA, 0x1A, 0x11, 0x11, 0x11,
	0x00, 0x10, 0xAA, 0x1A, 0xA1, 0xAA, 0x01, 0x00, 0x00, 0x10, 0xA1, 0xAA,
	0x1A, 0x11, 0x01, 0x00, 0x00, 0x10, 0xAA, 0xAA, 0xAA, 0xAA, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x99, 0x99,
	0x99, 0x99, 0x19, 0x00, 0x00, 0x10, 0x11, 0x91, 0x19, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x11, 0x99, 0x99, 0x19, 0x01, 0x00, 0x00, 0x10, 0x91, 0x99,
	0x99, 0x11, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x99,
	0x99, 0x99, 0x99, 0x01, 0x00, 0x10, 0x11, 0x11, 0x91, 0x99, 0x11, 0x00,
	0x00, 0x91, 0x99, 0x99, 0x99, 0x99, 0x19, 0x00, 0x00, 0x00, 0x91, 0x99,
	0x99, 0x19, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x99, 0x01, 0x00, 0x00,
	0x11, 0x11, 0x11, 0x99, 0x19, 0x00, 0x00, 0x00, 0x00, 0x10, 0x99, 0x19,
	0x91, 0x99, 0x01, 0x00, 0x00, 0x10, 0x99, 0x99, 0x99, 0x99, 0x01, 0x00,
	0x00, 0x10, 0x99, 0x99, 0x99, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x88, 0x88, 0x88, 0x88, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x81, 0x18, 0x00, 0x00, 0x00, 0x00, 0x10, 0x81, 0x88,
	0x88, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x88, 0x88, 0x18, 0x01, 0x00,
	0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88,
	0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x01,
	0x00, 0x11, 0x88, 0x18, 0x11, 0x11, 0x01, 0x00, 0x00, 0x11, 0x88, 0x88,
	0x88, 0x88, 0x11, 0x00, 0x00, 0x00, 0x81, 0x88, 0x88, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x88, 0x88, 0x01, 0x00, 0x00, 0x81, 0x88, 0x11, 0x88,
	0x18, 0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x18, 0x81, 0x88, 0x01, 0x00,
	0x00, 0x10, 0x88, 0x88, 0x88, 0x88, 0x01, 0x00, 0x00, 0x10, 0x88, 0x88,
	0x88, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x71,
	0x17, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x17, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x71, 0x77, 0x77, 0x01, 0x00, 0x00, 0x00, 0x10, 0x77,
	0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x77, 0x77, 0x01, 0x00, 0x00,
	0x10, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x01, 0x10, 0x71, 0x77, 0x77,
	0x11, 0x10, 0x11, 0x01, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x71, 0x77, 0x77, 0x17, 0x00, 0x00, 0x00, 0x00, 0x10, 0x71,
	0x17, 0x01, 0x00, 0x00, 0x71, 0x77, 0x17, 0x77, 0x17, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11,
	0x11, 0x11, 0x01, 0x00, 0x00, 0x10, 0x77, 0x77, 0x77, 0x77, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x66, 0x66,
	0x66, 0x66, 0x16, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x66, 0x66, 0x01, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x01, 0x11, 0x66, 0x66, 0x66, 0x16, 0x11, 0x66, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x66,
	0x66, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x11, 0x66, 0x66, 0x66, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x66, 0x66, 0x66, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00,
	0x00, 0x51, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00, 0x00, 0x51, 0x55, 0x55,
	0x55, 0x55, 0x15, 0x00, 0x00, 0x51, 0x55, 0x55, 0x55, 0x55, 0x15, 0x00,
	0x00, 0x00, 0x10, 0x55, 0x55, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x55,
	0x55, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x51, 0x15, 0x01, 0x00, 0x00,
	0x51, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x51, 0x55, 0x55,
	0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x55, 0x55,
	0x55, 0x55, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00, 0x00, 0x41, 0x44, 0x44,
	0x44, 0x44, 0x14, 0x00, 0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00,
	0x00, 0x41, 0x44, 0x44, 0x44, 0x44, 0x14, 0x00, 0x00, 0x00, 0x10, 0x44,
	0x44, 0x01, 0x00, 0x00, 0x00, 0x41, 0x44, 0x44, 0x44, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x44, 0x44, 0x01, 0x00, 0x00, 0x41, 0x14, 0x11, 0x44,
	0x44, 0x44, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x44, 0x44, 0x14, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
	0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x11, 0x11, 0x11,
	0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x10, 0x33, 0x33, 0x01, 0x00, 0x00,
	0x00, 0x31, 0x33, 0x33, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x33,
	0x33, 0x01, 0x00, 0x00, 0x11, 0x11, 0x10, 0x31, 0x33, 0x33, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x31, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x22, 0x22, 0x01, 0x00, 0x00, 0x00, 0x21, 0x22, 0x22,
	0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x21, 0x12, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x22, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x22,
	0x22, 0x01, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



///////////////////
//2D DEMO EFFECTS//
///////////////////


//PALETTE ANIMATION
u32 M3D_BlendColor(u32 col_src,u32 col_dst,float blend){
	if (blend<0) blend = 0; 
	if (blend>1) blend = 1;

	ScePspQuatMatrix source_c = {(float(col_src>>24)),float((col_src>>16)&0xFF),float((col_src>>8)&0xFF),float(col_src&0xFF)};
	ScePspQuatMatrix dest_c =   {float(col_dst>>24),float((col_dst>>16)&0xFF),float((col_dst>>8)&0xFF),float(col_dst&0xFF)};
	ScePspQuatMatrix result_c;
	vfpu_quaternion_sample_linear(&result_c,&source_c,&dest_c,blend); 

	return GU_RGBA((int)result_c.w,(int)result_c.z,(int)result_c.y,(int)result_c.x);
}

void M3D_PalettesCycle(int type, void *image, u8 *setpalettes, u8 blend){
	u32 t_palette[256] = {0};
	u32 size = setpalettes[0];
	if (!size) return;
	u32 i,j;
	u8 npal = 0;
	if (type == 0){
		AMG_Texture *img = (AMG_Texture*) image;
		if(!img) return;
		for (i=0;i<size;i++){
			u8 *cycle = (u8*) &setpalettes[1+(i*4)];
			u32 pal_offset = cycle[2];
			u32 n = cycle[3];
			u32 frame = img->palframe[npal];
			u8 rate = cycle[1]*2;
			float blend_step = (float)1/(float)rate;
			if(n>128) return; //AMG_Error((char*)"Too many colors / Demasiados colores",(char*)"AMG_Cycle_Palettes 128 colors max");
			//create two consecutive palete cycles
			memcpy(&t_palette[0],&img->clut_anim[pal_offset],n<<2);
			memcpy(&t_palette[n],&img->clut_anim[pal_offset],n<<2);
			//Cycle the image palette
			if (!blend) memcpy(&img->clut[pal_offset],&t_palette[frame],n<<2);
			//reverse?
			if (cycle[0]){
				if (blend){
					for (j=0;j<n;j++){
						img->clut[pal_offset+j] = M3D_BlendColor(t_palette[frame+j],t_palette[(frame+j+1)%n],(float)(blend_step*(float)img->palcounter[npal]));
					}
				}
				if (img->palcounter[npal] == rate){img->palcounter[npal] = 0;img->palframe[npal]++;}
				if (img->palframe[npal] == n) img->palframe[npal] = 0;
			} else {
				if (blend){
					for (j=0;j<n;j++){
						img->clut[pal_offset+j] = M3D_BlendColor(t_palette[(frame+j+1)%n],t_palette[frame+j],(float)(blend_step*(float)img->palcounter[npal]));
					}
				}
				if (img->palcounter[npal] == rate){img->palcounter[npal] = 0;img->palframe[npal]--;}
				if (img->palframe[npal] == 0) img->palframe[npal] = n;
			}
			img->palcounter[npal]++;
			npal++;
		}
	}
	if (type != 0){
		OSL_IMAGE *img; AMG_MAP *m; u32 *pal = NULL;
		if (type == 1) {//OSL_IMAGE
			img = (OSL_IMAGE*)image;
			if(!img) return;
			u32 format = (u32) img->pixelFormat;
			if (format != GU_PSM_T4 && format != GU_PSM_T8) return;
			pal = (u32*) img->palette->data; 
		}
		if (type == 2){//OSL_MAP
			m = (AMG_MAP *)image;
			OSL_MAP *map = m->omap;
			if (!map) return;
			u32 format = (u32) map->img->pixelFormat;
			if (format != GU_PSM_T4 && format != GU_PSM_T8) return;
			pal = (u32*) map->img->palette->data; 
		}
		
		for (i=0;i<size;i++){
			u8 *cycle = (u8*) &setpalettes[1+(i*4)];
			u32 pal_offset = cycle[2];
			u32 n = cycle[3];
			if(n>256) return; //AMG_Error((char*)"Too many colors / Demasiados colores",(char*)"AMG_Cycle_Palettes 128 colors max");
			if (!cycle[0]){
				u32 col_n = pal[pal_offset+n-1];
				memmove(&pal[pal_offset+1],&pal[pal_offset],(n-1)<<2);
				pal[pal_offset] = col_n;
			} else {
				u32 col_0 = pal[pal_offset];
				memcpy(&pal[pal_offset],&pal[pal_offset+1],(n-1)<<2);
				pal[pal_offset+n-1] = col_0;
			}
		}
	}
}


// WAVE EFFECTS
//Settings for retro wave effect
//	-Size of of steps. If > 0: horizontal displacement; If < 0: vertical displacement.
//	-Wave wave amplitude
//	-Wave wave length
void M3D_DrawImageWave(M3D_Texture *t, int x, int y, float wave_val, u32 mode, s16 amp, s16 len){
	AMG_Texture *tex = (AMG_Texture*)t;
	u32 i = 0;
	float step_size = 8;
	int wave_amp = 0;
	float wave_len = 0;
	tex->Filter = GU_NEAREST;
	u16 n = 0;
	u16 sprites = 0;
	u16 *data2D;
	wave_amp = amp;
	wave_len = (float)(6.28319f/len);
	
	if (!skip){
	
	if (mode != 0 && mode != 1) mode = 0;
	if (mode == M3D_EFFECT_H_WAVE) {
		n = 10 * ((tex->RHeight/step_size) + ((int)tex->RHeight%(int)step_size))+1;
		sprites = ((tex->RHeight/step_size) + ((int)tex->RHeight%(int)step_size));
		wave_len*=step_size;
		float step = 0;
		data2D = (u16*) sceGuGetMemory(n* sizeof(u16));
		//Generate triangle stripe
		while(i<n){
			int wav = (int)(M3D_Sin(wave_val)*wave_amp);
			
			data2D[i++] = tex->RWidth;
			data2D[i++] = (u16)step;
			data2D[i++] = x+wav+tex->RWidth;
			data2D[i++] = y+(u16)step;
			data2D[i++] = 0;
			
			data2D[i++] = 0;
			data2D[i++] = (u16)step;
			data2D[i++] = x+wav;
			data2D[i++] = y+(u16)step;
			data2D[i++] = 0;

			step+=step_size;
			wave_val += wave_len;
		}
	}
	if (mode == M3D_EFFECT_V_WAVE) {
		n = 10 * ((tex->RWidth/step_size) + ((int)tex->RWidth%(int)step_size)+1);
		sprites = ((tex->RWidth/step_size) + ((int)tex->RWidth%(int)step_size));
		wave_len*=step_size;
		float step = 0;
		data2D = (u16*) sceGuGetMemory(n* sizeof(u16));
		//Generate triangle stripe
		while(i<n){
			int wav = (int)(M3D_Sin(wave_val)*wave_amp);
			
			data2D[i++] = (u16)step;
			data2D[i++] = 0;
			data2D[i++] = x+(u16)step;
			data2D[i++] = y+wav;
			data2D[i++] = 0;

			data2D[i++] = (u16)step;
			data2D[i++] = tex->RHeight;
			data2D[i++] = x+(u16)step;
			data2D[i++] = y+wav+tex->RHeight;
			data2D[i++] = 0;
			
			step+=step_size;
			wave_val += wave_len;
		}
	}

	// Draw this mess all at once
	AMG_EnableTexture(tex);
	sceGuColor(0xFFFFFFFF);
	if(data2D) sceGuDrawArray(GU_TRIANGLE_STRIP, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),2*sprites, 0, data2D);
	
	}
}

//ROTOZOOM
//Generate a rotozoom effect using a loaded image
void M3D_DrawRotoZoom(M3D_Texture *t, u32 alpha, int tx, int ty, float rot, float scale){
	AMG_Texture *tex = (AMG_Texture*)t;
	if(tex == NULL) return;
	int w = 1024; int h = 1024;
	float X1 = w; float Y1 = 0;
	float X2 = 0; float Y2 = h;
	float X3 = w; float Y3 = h;
	tx-=(AMG.ScreenWidth/2);
	ty-=(AMG.ScreenHeight/2);
	//VFPU rotate, translate and scale
	ScePspFVector3 __attribute__((aligned(16))) scal = (ScePspFVector3){scale,scale,1};
	ScePspFVector3 __attribute__((aligned(16))) rota = (ScePspFVector3){0,0,-M3D_Deg2Rad(rot)};
	ScePspFMatrix4 __attribute__((aligned(16))) transform = {{1,0,0,(float)tx},{0,1,0,(float)ty},{0,0,1,0},{0,0,0,1}};
	ScePspFMatrix4 __attribute__((aligned(16))) t0 = {{0, (float)w,0, (float)w},{0,0, (float)h, (float)h},{1,1,1,1},{1,1,1,1}};
	gumMultMatrix(&t0,&t0,&transform);
	AMG_RotateUser(&t0,&rota);
	AMG_ScaleUser(&t0,&scal);
	
	AMG_Vertex_fintTV *data2D = (AMG_Vertex_fintTV*) sceGuGetMemory(sizeof(AMG_Vertex_fintTV) * 4);
	data2D[0].x = 0; data2D[0].y = 0; data2D[1].x = X1; data2D[1].y = Y1;
	data2D[2].x = X2; data2D[2].y = Y2; data2D[3].x = X3; data2D[3].y = Y3;
	
	data2D[0].u = (int)t0.x.x; data2D[1].u = (int)t0.x.y; data2D[2].u = (int)t0.x.z; data2D[3].u = (int)t0.x.w; 
	data2D[0].v = (int)t0.y.x; data2D[1].v = (int)t0.y.y; data2D[2].v = (int)t0.y.z; data2D[3].v = (int)t0.y.w;
	
	if(!skip){
	//Enable texture
	sceGuEnable(GU_TEXTURE_2D);
	sceGuTexFilter(GU_NEAREST,GU_NEAREST);//tex->Filter, tex->Filter);
	if(tex->TexFormat == GU_PSM_T4){
		sceGuClutMode(GU_PSM_8888,0,0x0f,0);
		sceGuClutLoad(16/8,tex->clut); // upload 16 rgba colours
	}
	if(tex->TexFormat == GU_PSM_T8){
		sceGuClutMode(GU_PSM_8888,0,0xff,0);
		sceGuClutLoad(256/8,tex->clut); // upload 256 rgba colours
	}
	sceGuTexFunc(tex->TFX, tex->TCC);
	sceGuTexMapMode(tex->Mapping, tex->MappingLights[0], tex->MappingLights[1]);
	sceGuTexMode(tex->TexFormat,0, 0, tex->Swizzle);
	sceGuTexImage(0, tex->rw, tex->rh, tex->Width,tex->Data);
	
	//draw
	sceGuColor(GU_RGBA(255,255,255,alpha));
	sceGuDrawArray(GU_TRIANGLE_STRIP, (GU_TEXTURE_32BITF | GU_VERTEX_16BIT | GU_TRANSFORM_2D), 4, 0, data2D);
	}
}

//PLASMA
s8 AMG_PSIN[256] = {
	0,1,3,4,6,7,9,10,12,14,15,17,18,20,21,23,24,
	25,27,28,30,31,32,34,35,36,38,39,40,41,42,44,45,
	46,47,48,49,50,51,52,53,54,54,55,56,57,57,58,59,
	59,60,60,61,61,62,62,62,63,63,63,63,63,63,63,63,
	63,63,63,63,63,63,63,62,62,62,61,61,60,60,59,59,
	58,57,57,56,55,54,54,53,52,51,50,49,48,47,46,45,
	44,42,41,40,39,38,36,35,34,32,31,30,28,27,25,24,
	23,21,20,18,17,15,14,12,10,9,7,6,4,3,1,0,
	-1,-3,-4,-6,-7,-9,-10,-12,-14,-15,-17,-18,-20,-21,-23,-24,
	-25,-27,-28,-30,-31,-32,-34,-35,-36,-38,-39,-40,-41,-42,-44,-45,
	-46,-47,-48,-49,-50,-51,-52,-53,-54,-54,-55,-56,-57,-57,-58,-59,
	-59,-60,-60,-61,-61,-62,-62,-62,-63,-63,-63,-63,-63,-63,-63,-63,
	-63,-63,-63,-63,-63,-63,-63,-62,-62,-62,-61,-61,-60,-60,-59,-59,
	-58,-57,-57,-56,-55,-54,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,
	-44,-42,-41,-40,-39,-38,-36,-35,-34,-32,-31,-30,-28,-27,-25,-24,
	-23,-21,-20,-18,-17,-15,-14,-12,-10,-9,-7,-6,-4,-3,-1
};
float AMG_2DPlasma_Frame = 0;
AMG_Texture *AMG_2DPlasma_Texture;
u16 AMG_Plasma_U[1024] = {0};

//Load a palette from the png
M3D_Texture *M3D_PlasmaTextureCreate(const char *path){
	int i;
	//Create texture
	AMG_Texture *tex = AMG_CreateTexture(128,128,GU_PSM_T8,M3D_IN_VRAM);
	if (!tex) return 0;
	//load colors from image
	OSL_IMAGE *img = oslLoadImageFilePNG((char*)path, OSL_IN_RAM | OSL_UNSWIZZLED, GU_PSM_8888);
	if (!img) return 0;
	//if (img->pixelFormat ==)
	float step_x = (float)img->stretchX / 256;
	float xx = 0;
	u32 *pixels = (u32*) img->data;
	for (i = 0; i < 256; i++){
		tex->clut[i] = pixels[(int)xx];
		xx+=step_x;
	}
	oslDeleteImage(img);
	tex->DemoEffect_PlasmaFrame = 0;

	return (M3D_Texture*)tex;
}

//A clasic plasma on a 128x128 image
//Nested "for" loops bigger than 128x128 will kill PSP CPU (at least in my tests)
void M3D_PlasmaTextureUpdate(M3D_Texture *t,int px,int py,float scale,int speed){
	AMG_Texture *tex = (AMG_Texture*)t;
	int x,y;
	u8 tpos4 = 0; u8 tpos3 = tex->DemoEffect_PlasmaFrame;
	u8 *data = (u8*) tex->Data;
	u8 pos2 = 0;
	u8 scal = 2*scale;
	if (!tex) return;
	if(!skip){
	//FROM: Demo Effects Collection: W.P. van Paassen - 2005
    for (y = 0; y < 128; y++){
		u8 tpos1 = tex->DemoEffect_PlasmaFrame + (5*scale); u8 tpos2 = pos2 + (3*scale);
		u8 t3 = 128 + AMG_PSIN[tpos3] + AMG_PSIN[tpos4];//plasma calculation
		for (x = 0; x < 128; x++){
			*data++ = AMG_PSIN[tpos1] + AMG_PSIN[tpos2] + t3; //plasma calculation
			tpos1 += (2*scal); tpos2 += (px*scal);
	    }
		tpos4 += (3*scal); tpos3 += (py*scal);
	}
	}
	tex->DemoEffect_PlasmaFrame+= speed;
	//Avoids garbage pixels on textures
	sceKernelDcacheWritebackInvalidateRange(tex->Data,AMG_GetVramSize(tex->Width,tex->Height,tex->TexFormat));
}

//This is the same plasma function, but it operates on a 32x32 grid.
//It modifies texture coordinates of the quad array instead of calculating all pixels.
//This way PSP can draw full screen plasma with low cpu usage.
//The only problen is, plasma can look a bit "polygonal".
void M3D_Plasma2DSet(const char *path){
	int i;
	//Create texture
	if (!AMG_2DPlasma_Texture) AMG_2DPlasma_Texture = AMG_CreateTexture(256,4,GU_PSM_T8,M3D_IN_VRAM);
	if (!AMG_2DPlasma_Texture) return;
	//load colors from image
	OSL_IMAGE *img = oslLoadImageFilePNG((char*)path, OSL_IN_RAM | OSL_UNSWIZZLED, GU_PSM_8888);
	if (!img) return;
	//if (img->pixelFormat ==)
	float step_x = (float)img->stretchX / 256;
	float xx = 0;
	u32 *pixels = (u32*) img->data;
	for (i = 0; i < 256; i++){
		AMG_2DPlasma_Texture->clut[i] = pixels[(int)xx];
		xx+=step_x;
	}
	oslDeleteImage(img);
	
	u8 *dat = (u8*) AMG_2DPlasma_Texture->Data;
	for (i = 0; i < 256; i++){
		dat[i] = i;
		dat[i+256] = i;
	}
	
	AMG_2DPlasma_Texture->DemoEffect_PlasmaFrame = 0;
}

//This is very fast because it only computes 33x20 points for the plasma 
void M3D_Draw2DPlasma(u8 alpha, int px,int py,float scale,float speed){
	extern int AMG_TV_OUT;
	int x,y,j,k;
	u8 tpos4 = 0; u8 tpos3 = AMG_2DPlasma_Frame;
	u8 pos2 = 0;
	u8 scal = 8/scale;
	u16 s = (AMG_TV_OUT)? 30:15; //quad size 15 pixels, 30 if AMG_TV_OUT
	u16 o = 0;
	AMG_Texture *tex = AMG_2DPlasma_Texture;
	s16 *d2D;
	if(!tex) return;
	
	if(!skip){
	//FROM: Demo Effects Collection: W.P. van Paassen - 2005
    for (y = 0; y < 20; y++){
		u8 tpos1 = (u8)AMG_2DPlasma_Frame; u8 tpos2 = pos2;
		for (x = 0; x < 33; x++){
			AMG_Plasma_U[o++] = 256 + 128 + AMG_PSIN[tpos1] + AMG_PSIN[tpos2] +  AMG_PSIN[tpos3] + AMG_PSIN[tpos4]; //plasma calculation
			tpos1 += (2*scal); tpos2 += (px*scal);
	    }
		tpos4 += (3*scal); tpos3 += (py*scal);
	}
	o = 0;
	
	//Create quad grid
	u16 f = 0;
	d2D = (s16*) sceGuGetMemory(6 * 5 * 33 * 20 * sizeof(s16));
	for (y = 0; y < 20; y++){
		for (x = 0; x < 33; x++){
			j = x*s; k = y*s;
			//u v   x y z
			d2D[o++] = AMG_Plasma_U[f]; d2D[o++] = 1; d2D[o++] =   j; d2D[o++] =   k; d2D[o++] = 0;
			d2D[o++] = AMG_Plasma_U[f+34]; d2D[o++] = 1; d2D[o++] = j+s; d2D[o++] = k+s; d2D[o++] = 0;
			d2D[o++] = AMG_Plasma_U[f+33]; d2D[o++] = 1; d2D[o++] =   j; d2D[o++] = k+s; d2D[o++] = 0;
			d2D[o++] = AMG_Plasma_U[f]; d2D[o++] = 1; d2D[o++] =   j; d2D[o++] =   k; d2D[o++] = 0;
			d2D[o++] = AMG_Plasma_U[f+1]; d2D[o++] = 1; d2D[o++] = j+s; d2D[o++] =   k; d2D[o++] = 0;
			d2D[o++] = AMG_Plasma_U[f+34]; d2D[o++] = 1; d2D[o++] = j+s; d2D[o++] = k+s; d2D[o++] = 0;
			f++;
		}
	}
	}
	
	AMG_2DPlasma_Frame += speed;
	
	if(!skip){
	//Enable texture
	sceGuEnable(GU_TEXTURE_2D);
	
	sceGuClutMode(GU_PSM_8888,0,0xff,0);
	sceGuClutLoad(256/8,tex->clut);
	sceGuTexFunc(tex->TFX, tex->TCC);
	sceGuTexFilter(GU_LINEAR,GU_LINEAR);
	sceGuTexMapMode(tex->Mapping, tex->MappingLights[0], tex->MappingLights[1]);
	sceGuTexMode(tex->TexFormat,0, 0, tex->Swizzle);
	sceGuTexImage(0, tex->rw, tex->rh, tex->Width,tex->Data);
	//draw
	sceGuColor(GU_RGBA(255,255,255,alpha));
	sceGumDrawArray(GU_TRIANGLES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D),6*33*20, 0, d2D);
	}
}


float AMG_CopperBarsOffset = 0;
float AMG_CopperBarsColor = 0;

u32 __attribute__((aligned(16))) AMG_CopperBarsClut[16] = {
	0x221a1a1a,0x883d3d3d,0xff565656,0xff727272,0xff929292,0xffa9a9a9,0xffcfcfcf,0xffffffff,
	0,0,0,0,0,0,0,0,
};

u32 AMG_CopperBarsColors[] = {
	0xFF0000FF,0xFF00FFFF,0xFF00FF00,
	0xFFFFFF00,0xFFFF0000,0xFFFF00FF
};

u8 __attribute__((aligned(64))) AMG_CopperBarsTexture[] = {
	0x00,0x00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x11,0x11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x22,0x22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x33,0x33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x55,0x55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x66,0x66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x77,0x77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x77,0x77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x66,0x66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x55,0x55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x33,0x33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x22,0x22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x11,0x11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0x00,0x00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};

void M3D_DrawCopperBars(u8 number,u8 size,u16 center,u16 amplitude,u8 alpha,float speed){
	int i;
	u16 *data2D = (u16*) sceGuGetMemory(sizeof(u16) * 5 * 2 * number);
	u16 o = 0;
	float CopperBarsOffset = 0;
	for(i =0;i<number;i++){
		s16 y = center-(size>>1)+(M3D_Sin(AMG_CopperBarsOffset + CopperBarsOffset)*amplitude);
		//u v x y z
		data2D[o++] = 0; data2D[o++] = 0;  data2D[o++] =   0; data2D[o++] =      y; data2D[o++] = 0;
		data2D[o++] = 4; data2D[o++] =16;  data2D[o++] = 480; data2D[o++] = y+size; data2D[o++] = 0;
		CopperBarsOffset+= 2/(float)number;
	}
	AMG_CopperBarsOffset+=speed;
	if(!skip){
	//Enable texture
	sceGuEnable(GU_TEXTURE_2D);
	sceGuTexFilter(GU_NEAREST,GU_NEAREST);
	sceGuClutMode(GU_PSM_8888,0,0x0f,0);
	sceGuClutLoad(16/8,AMG_CopperBarsClut); // upload 16 rgba colours
	sceGuTexFunc(GU_TFX_MODULATE, GU_TCC_RGBA);
	sceGuTexMapMode(GU_TEXTURE_COORDS, 0, 1);
	sceGuTexMode(GU_PSM_T4,0,0,0);
	sceGuTexImage(0,4,16,16,AMG_CopperBarsTexture);
	//draw
	u32 col = M3D_BlendColor(AMG_CopperBarsColors[(u32)AMG_CopperBarsColor%6],AMG_CopperBarsColors[((u32)AMG_CopperBarsColor+1)%6],fmod(AMG_CopperBarsColor,1));
	col &= 0x00FFFFFF;
	col |= GU_RGBA(0,0,0,alpha);
	sceGuColor(col);
	AMG_CopperBarsColor+=0.01;

	sceGuDrawArray(GU_SPRITES, (GU_TEXTURE_16BIT | GU_VERTEX_16BIT | GU_TRANSFORM_2D), 2*number, 0, data2D);
	
	}
}